###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.21.1.52794/W32 for ARM     30/Aug/2012  21:21:16 #
# Copyright 1999-2011 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\Work\Project\2012\NL_INBUILD\STM32F2xx_StdPeriph_Driv #
#                    er\stm32f2xx_vector.c                                    #
#    Command line =  D:\Work\Project\2012\NL_INBUILD\STM32F2xx_StdPeriph_Driv #
#                    er\stm32f2xx_vector.c -D OS_INCLUDED -D APPL_SRC -lcN    #
#                    D:\Work\Project\2012\NL_INBUILD\FW\MU\sout\ -o           #
#                    D:\Work\Project\2012\NL_INBUILD\FW\MU\sout\              #
#                    --endian=little --cpu=Cortex-M3 -e --fpu=None            #
#                    --dlib_config "C:\Programming\IAR Systems\Embedded       #
#                    Workbench 6.0\arm\INC\c\DLib_Config_Normal.h" -I         #
#                    D:\Work\Project\2012\NL_INBUILD\FW\MU\include\ -I        #
#                    D:\Work\Project\2012\NL_INBUILD\FW\MU\..\..\STM32F2xx_St #
#                    dPeriph_Driver\ -I D:\Work\Project\2012\NL_INBUILD\FW\MU #
#                    \..\..\STM32F2xx_StdPeriph_Driver\inc\ -I                #
#                    D:\Work\Project\2012\NL_INBUILD\FW\MU\uC-CPU\ -I         #
#                    D:\Work\Project\2012\NL_INBUILD\FW\MU\uC-LIB\ -I         #
#                    D:\Work\Project\2012\NL_INBUILD\FW\MU\uCOS-II\Ports\ -I  #
#                    D:\Work\Project\2012\NL_INBUILD\FW\MU\uCOS-II\Source\    #
#                    -I D:\Work\Project\2012\NL_INBUILD\FW\MU\uC-Probe\ -Oh   #
#                    --use_c++_inline                                         #
#    List file    =  D:\Work\Project\2012\NL_INBUILD\FW\MU\sout\stm32f2xx_vec #
#                    tor.lst                                                  #
#    Object file  =  D:\Work\Project\2012\NL_INBUILD\FW\MU\sout\stm32f2xx_vec #
#                    tor.o                                                    #
#                                                                             #
#                                                                             #
###############################################################################

D:\Work\Project\2012\NL_INBUILD\STM32F2xx_StdPeriph_Driver\stm32f2xx_vector.c
      1          /******************** (C) COPYRIGHT 2007 STMicroelectronics ********************
      2          * File Name          : stm32f10x_vector.c
      3          * Author             : MCD Application Team
      4          * Date First Issued  : 02/19/2007
      5          * Description        : This file contains the vector table for STM32F10x.
      6          *                      After Reset the Cortex-M3 processor is in Thread mode,
      7          *                      priority is Privileged, and the Stack is set to Main.
      8          ********************************************************************************
      9          * History:
     10          * 05/21/2007: V0.3
     11          * 04/02/2007: V0.2
     12          * 02/19/2007: V0.1
     13          ********************************************************************************
     14          * THE PRESENT SOFTWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     15          * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME.
     16          * AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT,
     17          * INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE
     18          * CONTENT OF SUCH SOFTWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING
     19          * INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     20          *******************************************************************************/
     21          
     22          #ifndef __STM32F2xx_VECTOR_H
     23          #define __STM32F2xx_VECTOR_H
     24          #endif
     25          // Includes --------------------------------------------------------------------
     26          #include "main.h"			/*!<user defined using cpu*/
     27          
     28          /* Private define ------------------------------------------------------------*/
     29          /* Private macro -------------------------------------------------------------*/
     30          /* Private variables ---------------------------------------------------------*/
     31          /* Private function prototypes -----------------------------------------------*/
     32          /* Private functions ---------------------------------------------------------*/
     33          
     34          void  App_Spurious_ISR (void);
     35          void  App_NMI_ISR (void);
     36          void  App_Fault_ISR (void);
     37          
     38          #ifdef OS_INCLUDED
     39          	void OS_CPU_PendSVHandler(void);
     40          	void  Tmr_TickISR_Handler (void);
     41          #endif /* OS_INCLUDED */
     42          
     43          #ifdef APPL_SRC
     44          	extern const selfinfo convinfo;
     45          #endif /* APPL_SRC */
     46          
     47          #pragma language = extended
     48          #pragma segment="CSTACK"
     49          
     50          void __iar_program_start( void );
     51          
     52          #pragma location = ".intvec"
     53          
     54          const intvec_elem __vector_table[] =
     55          {
     56          	{ .__ptr = __sfe( "CSTACK" ) },	/*  0, SP start value.                                         */
     57          #ifdef APPL_SRC	
     58          	SystemInit,
     59          #else
     60          	__iar_program_start,			/*  1, PC start value.                                         */
     61          #endif
     62          	NMIException,					/*  2, NMI                                                     */
     63          	HardFaultException,				/*  3, Hard Fault                                              */
     64          	MemManageException,				/*  4, Memory Management                                       */
     65          	BusFaultException,				/*  5, Bus Fault                                               */
     66          	UsageFaultException,			/*  6, Usage Fault                                             */
     67          	(intfunc)_pilog,				/*  7, Reserved                                                */
     68          	0,								/*  8, Reserved                                                */
     69          	(intfunc)_pilog,				/*  9, Reserved                                                */
     70          #ifdef APPL_SRC	
     71              (intfunc)&convinfo,            	/* 10, Reserved                                                */
     72          #else // boot
     73              (intfunc)0,
     74          #endif /* APPL_SRC */
     75          	SVCHandler,						/* 11, SVCall                                                  */
     76          	DebugMonitor,					/* 12, Debug Monitor                                           */
     77          	0,                      		/* 13, Reserved                                                */
     78          #ifdef OS_INCLUDED
     79          	OS_CPU_PendSVHandler,			/* 14, PendSV Handler                                          */
     80          #else
     81          	PendSVC,
     82          #endif /* OS_INCLUDED */
     83          	SysTickHandler,			        /* 15, uC/OS-II Tick ISR Handler                               */
     84          	WWDG_IRQHandler,				/* 16, INTISR[  0], Window Watchdog                            */
     85          	PVD_IRQHandler,					/* 17, INTISR[  1]  PVD through EXTI Line Detection            */
     86          	TAMPER_IRQHandler,				/* 18, INTISR[  2]  Tamper Interrupt                           */
     87          	RTC_IRQHandler,					/* 19, INTISR[  3]  RTC Global Interrupt                       */
     88          	FLASH_IRQHandler,				/* 20, INTISR[  4]  FLASH Global Interrupt                     */
     89          	RCC_IRQHandler,					/* 21, INTISR[  5]  RCC Global Interrupt                       */
     90          	EXTI0_IRQHandler,				/* 22, INTISR[  6]  EXTI Line0 Interrupt                       */
     91          	EXTI1_IRQHandler,				/* 23, INTISR[  7]  EXTI Line1 Interrupt                       */
     92          	EXTI2_IRQHandler,				/* 24, INTISR[  8]  EXTI Line2 Interrupt                       */
     93          	EXTI3_IRQHandler,				/* 25, INTISR[  9]  EXTI Line3 Interrupt                       */
     94          	EXTI4_IRQHandler,				/* 26, INTISR[ 10]  EXTI Line4 Interrupt                       */
     95          	DMAChannel1_IRQHandler,			/* 27, INTISR[ 11]  DMA Channel1 Global Interrupt              */
     96          	DMAChannel2_IRQHandler,			/* 28, INTISR[ 12]  DMA Channel2 Global Interrupt              */
     97          	DMAChannel3_IRQHandler,			/* 29, INTISR[ 13]  DMA Channel3 Global Interrupt              */
     98          	DMAChannel4_IRQHandler,			/* 30, INTISR[ 14]  DMA Channel4 Global Interrupt              */
     99          	DMAChannel5_IRQHandler,			/* 31, INTISR[ 15]  DMA Channel5 Global Interrupt              */
    100          	DMAChannel6_IRQHandler,			/* 32, INTISR[ 16]  DMA Channel6 Global Interrupt              */
    101          	DMAChannel7_IRQHandler,			/* 33, INTISR[ 17]  DMA Channel7 Global Interrupt              */
    102          	ADC_IRQHandler,					/* 34, INTISR[ 18]  ADC Global Interrupt                       */
    103          	USB_HP_CAN_TX_IRQHandler,		/* 35, INTISR[ 19]  USB High Priority / CAN TX  Interrupts     */
    104          	USB_LP_CAN_RX0_IRQHandler,		/* 36, INTISR[ 20]  USB Low  Priority / CAN RX0 Interrupts     */
    105          	CAN_RX1_IRQHandler,				/* 37, INTISR[ 21]  CAN RX1 Interrupt                          */
    106          	CAN_SCE_IRQHandler,				/* 38, INTISR[ 22]  CAN SCE Interrupt                          */
    107          	EXTI9_5_IRQHandler,				/* 39, INTISR[ 23]  EXTI Line[9:5] Interrupt                   */
    108          	TIM1_BRK_IRQHandler,			/* 40, INTISR[ 24]  TIM1 Break  Interrupt                      */
    109          	TIM1_UP_IRQHandler,				/* 41, INTISR[ 25]  TIM1 Update Interrupt                      */
    110          	TIM1_TRG_COM_IRQHandler,		/* 42, INTISR[ 26]  TIM1 Trigger & Commutation Interrupts      */
    111          	TIM1_CC_IRQHandler,				/* 43, INTISR[ 27]	TIM1 Capture Compare Interrupt			   */
    112          	TIM2_IRQHandler,				/* 44, INTISR[ 28]  TIM2 Global Interrupt                      */
    113          	TIM3_IRQHandler,				/* 45, INTISR[ 29]  TIM3 Global Interrupt                      */
    114          	TIM4_IRQHandler,				/* 46, INTISR[ 30]  TIM4 Global Interrupt                      */
    115          	I2C1_EV_IRQHandler,				/* 47, INTISR[ 31]  I2C1 Event  Interrupt                      */
    116          	I2C1_ER_IRQHandler,				/* 48, INTISR[ 32]  I2C1 Error  Interrupt                      */
    117          	I2C2_EV_IRQHandler,				/* 49, INTISR[ 33]  I2C2 Event  Interrupt                      */
    118          	I2C2_ER_IRQHandler,				/* 50, INTISR[ 34]  I2C2 Error  Interrupt                      */
    119          	SPI1_IRQHandler,				/* 51, INTISR[ 35]  SPI1 Global Interrupt                      */
    120          	SPI2_IRQHandler,				/* 52, INTISR[ 36]  SPI2 Global Interrupt                      */
    121            	USART1_IRQHandler,				/* 53, INTISR[ 37]  USART1 Global Interrupt                    */
    122           	USART2_IRQHandler,				/* 54, INTISR[ 38]  USART2 Global Interrupt                    */
    123          	USART3_IRQHandler,				/* 55, INTISR[ 39]  USART3 Global Interrupt                    */
    124          	EXTI15_10_IRQHandler,			/* 56, INTISR[ 40]  EXTI Line [15:10] Interrupts               */
    125          	RTCAlarm_IRQHandler,			/* 57, INTISR[ 41]  RTC Alarm through EXT Line Interrupt       */
    126          	USBWakeUp_IRQHandler,			/* 58, INTISR[ 42]  USB Wakeup from Suspend through EXTI Int.  */
    127          	TIM8_BRK_IRQHandler,			/* 59, INTISR[ 43]  TIM8_BRK_IRQHandler */
    128          	TIM8_UP_IRQHandler,				/* 60, INTISR[ 44]  TIM8_UP_IRQHandler */
    129          	TIM8_TRG_COM_IRQHandler,		/* 61, INTISR[ 45]  TIM8_TRG_COM_IRQHandler */
    130          	TIM8_CC_IRQHandler,				/* 62, INTISR[ 46]  TIM8_CC_IRQHandler */
    131          	ADC3_IRQHandler,				/* 63, INTISR[ 47]  ADC3_IRQHandler */
    132          	FSMC_IRQHandler,				/* 64, INTISR[ 48]  FSMC_IRQHandler */
    133          	SDIO_IRQHandler,				/* 65, INTISR[ 49]  SDIO_IRQHandler */
    134          	TIM5_IRQHandler,				/* 66, INTISR[ 50]  TIM5_IRQHandler */
    135          	SPI3_IRQHandler,				/* 67, INTISR[ 51]  SPI3_IRQHandler */
    136          	UART4_IRQHandler,				/* 68, INTISR[ 52]  UART4_IRQHandler */
    137          	UART5_IRQHandler,				/* 69, INTISR[ 53]  UART5_IRQHandler */
    138          	TIM6_IRQHandler,				/* 70, INTISR[ 54]  TIM6_IRQHandler */
    139          	TIM7_IRQHandler,				/* 71, INTISR[ 55]  TIM7_IRQHandler */
    140          	DMA2_Channel1_IRQHandler,		/* 72, INTISR[ 56]  DMA2_Channel1_IRQHandler */
    141          	DMA2_Channel2_IRQHandler,		/* 73, INTISR[ 57]  DMA2_Channel2_IRQHandler */
    142          	DMA2_Channel3_IRQHandler,		/* 74, INTISR[ 58]  DMA2_Channel3_IRQHandler */
    143          	DMA2_Channel4_5_IRQHandler,		/* 75, INTISR[ 59]  DMA2_Channel4_5_IRQHandler */
    144          };
    145          /******************* (C) COPYRIGHT 2007 STMicroelectronics *****END OF FILE****/
    146          
    147          
    148          /*
    149          *********************************************************************************************************
    150          *                                      Spurious Interrupt Handler
    151          *********************************************************************************************************
    152          */
    153          void  App_Spurious_ISR (void)
    154          {
    155          	while(0)
    156          	{
    157          		//USART1PutChar('S');
    158              }
    159          }
    160          
    161          /*
    162          *********************************************************************************************************
    163          *                                        NMI Exception Handler
    164          *********************************************************************************************************
    165          */
    166          
    167          void  App_NMI_ISR (void)
    168          {
    169          	while(0)
    170          	{
    171          		//USART1PutChar('N');
    172          	}
    173          }
    174          
    175          
    176          /*
    177          *********************************************************************************************************
    178          *                                       FAULT Exception Handler
    179          *********************************************************************************************************
    180          */
    181          
    182          void  App_Fault_ISR (void)
    183          {
    184          	while(0)
    185          	{
    186          		//USART1PutChar('I');
    187          	}
    188          }
    189          
    190          

   Maximum stack usage in bytes:

     Function         .cstack
     --------         -------
     App_Fault_ISR         0
     App_NMI_ISR           0
     App_Spurious_ISR      0


   Section sizes:

     Function/Label   Bytes
     --------------   -----
     __vector_table    304
     App_Spurious_ISR    2
     App_NMI_ISR         2
     App_Fault_ISR       2

 
 304 bytes in section .intvec
   6 bytes in section .text
 
   6 bytes of CODE  memory
 304 bytes of CONST memory

Errors: none
Warnings: none
