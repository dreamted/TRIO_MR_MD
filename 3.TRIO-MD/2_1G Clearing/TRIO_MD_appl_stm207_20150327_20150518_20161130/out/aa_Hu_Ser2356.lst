###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.21.1.52794/W32 for ARM     01/Dec/2012  04:07:07 #
# Copyright 1999-2011 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\user\project\FR-DB家屈\fw\appl_stm207_20121201\code\a #
#                    a_Hu_Ser2356.c                                           #
#    Command line =  C:\user\project\FR-DB家屈\fw\appl_stm207_20121201\code\a #
#                    a_Hu_Ser2356.c -lC C:\user\project\FR-DB家屈\fw\appl_stm #
#                    207_20121201\out\ -o C:\user\project\FR-DB家屈\fw\appl_s #
#                    tm207_20121201\out\ --endian=little --cpu=Cortex-M3 -e   #
#                    --fpu=None --dlib_config "C:\compiler\ewarm              #
#                    6.2\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\user\project\FR-DB家屈\fw\appl_stm207_20121201\includ #
#                    e\ -I C:\user\project\FR-DB家屈\fw\appl_stm207_20121201\ #
#                    STM32F2xx_StdPeriph_Driver_v1212\ -I                     #
#                    C:\user\project\FR-DB家屈\fw\appl_stm207_20121201\STM32F #
#                    2xx_StdPeriph_Driver_v1212\inc\ -I                       #
#                    C:\user\project\FR-DB家屈\fw\appl_stm207_20121201\uC-CPU #
#                    \ -I C:\user\project\FR-DB家屈\fw\appl_stm207_20121201\u #
#                    C-LIB\ -I C:\user\project\FR-DB家屈\fw\appl_stm207_20121 #
#                    201\uCOS-II\Ports\ -I C:\user\project\FR-DB家屈\fw\appl_ #
#                    stm207_20121201\uCOS-II\Source\ -I                       #
#                    C:\user\project\FR-DB家屈\fw\appl_stm207_20121201\uC-Pro #
#                    be\ -Oh --use_c++_inline                                 #
#    List file    =  C:\user\project\FR-DB家屈\fw\appl_stm207_20121201\out\aa #
#                    _Hu_Ser2356.lst                                          #
#    Object file  =  C:\user\project\FR-DB家屈\fw\appl_stm207_20121201\out\aa #
#                    _Hu_Ser2356.o                                            #
#                                                                             #
#                                                                             #
###############################################################################

C:\user\project\FR-DB家屈\fw\appl_stm207_20121201\code\aa_Hu_Ser2356.c
      1          
      2          //=====================================================================//
      3          // RU Comm
      4          //=====================================================================//
      5          #define SER2INT_C
      6          
      7          #include "../include/main.h"

   \                                 In section iram, align 4
   \   __absolute OS_STK Ser2TaskStk[300]
   \                     Ser2TaskStk:
   \   00000000                      DS8 1200

   \                                 In section .bss, align 4
   \   __absolute __ProtocolPtr Hu_Ser2SerB
   \                     Hu_Ser2SerB:
   \   00000000                      DS8 48

   \                                 In section .bss, align 4
   \   __absolute __ProtocolPtr Hu_Ser3SerB
   \                     Hu_Ser3SerB:
   \   00000000                      DS8 48

   \                                 In section .bss, align 4
   \   __absolute __ProtocolPtr Hu_Ser5SerB
   \                     Hu_Ser5SerB:
   \   00000000                      DS8 48

   \                                 In section .bss, align 4
   \   __absolute __ProtocolPtr Hu_Ser6SerB
   \                     Hu_Ser6SerB:
   \   00000000                      DS8 48

   \                                 In section .bss, align 1
   \   __absolute INT8U DistBand
   \                     DistBand:
   \   00000000                      DS8 1

   \                                 In section .data, align 4
   \   __absolute SubIDStr DistTarID
   \                     DistTarID:
   \   00000000   00000000           DC8 0, 0, 0, 0
   \   __absolute INT8U Hu_Idle
   \                     Hu_Idle:
   \   00000004   01                 DC8 1
   \   __absolute INT8U HuPollCnt
   \                     HuPollCnt:
   \   00000005   00                 DC8 0
   \   __absolute INT8U DistFlag
   \                     DistFlag:
   \   00000006   00                 DC8 0
   \   __absolute INT8U DistStep
   \                     DistStep:
   \   00000007   00                 DC8 0
   \   __absolute INT8U DistCnt
   \                     DistCnt:
   \   00000008   00                 DC8 0
   \   __absolute INT8U DistType
   \                     DistType:
   \   00000009   00                 DC8 0
   \   __absolute INT8U DistOnBr
   \                     DistOnBr:
   \   0000000A   FF                 DC8 255
   \   0000000B   00                 DC8 0
   \   __absolute INT8U LinkFailCnt[8]
   \                     LinkFailCnt:
   \   0000000C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0000        
   \   __absolute INT8U HuPollID[8]
   \                     HuPollID:
   \   00000014   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0000        
   \   __absolute __ProtocolPtr *Hu_Ser2Ser
   \                     Hu_Ser2Ser:
   \   0000001C   ........           DC32 Hu_Ser2SerB
   \   __absolute __ProtocolPtr *Hu_Ser3Ser
   \                     Hu_Ser3Ser:
   \   00000020   ........           DC32 Hu_Ser3SerB
   \   __absolute __ProtocolPtr *Hu_Ser5Ser
   \                     Hu_Ser5Ser:
   \   00000024   ........           DC32 Hu_Ser5SerB
   \   __absolute __ProtocolPtr *Hu_Ser6Ser
   \                     Hu_Ser6Ser:
   \   00000028   ........           DC32 Hu_Ser6SerB
   \   __absolute SIO Shu
   \                     Shu:
   \   0000002C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000003C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000004C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000005C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000006C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000007C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000008C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000009C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000AC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000BC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000CC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000DC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000EC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000FC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000010C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000011C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000012C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000013C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000014C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000015C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000016C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000017C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000018C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000019C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001AC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001BC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001CC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001DC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001EC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001FC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000020C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000021C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000022C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000023C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000024C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000025C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000026C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000027C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000028C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000029C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002AC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002BC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002CC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002DC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002EC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002FC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000030C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000031C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000032C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000033C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000034C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000035C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000036C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000037C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000038C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000039C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003AC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003BC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003CC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003DC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003EC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003FC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000040C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000041C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000042C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000043C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000044C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000045C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000046C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000047C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000048C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000049C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000004AC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000004BC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000004CC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000004DC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000004EC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000004FC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000050C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000051C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000052C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000053C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000054C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000055C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000056C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000057C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000058C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000059C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000005AC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000005BC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000005CC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000005DC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000005EC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000005FC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000060C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000061C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000062C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000063C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000064C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000065C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000066C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000067C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000068C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000069C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000006AC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000006BC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000006CC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000006DC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000006EC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000006FC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000070C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000071C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000072C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000073C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000074C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000075C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000076C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000077C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000078C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000079C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000007AC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000007BC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000007CC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000007DC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000007EC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000007FC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000080C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000081C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000082C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000083C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0000        
   \   __absolute SIO Rhu
   \                     Rhu:
   \   00000844   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000854   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000864   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000874   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000884   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000894   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000008A4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000008B4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000008C4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000008D4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000008E4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000008F4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000904   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000914   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000924   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000934   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000944   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000954   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000964   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000974   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000984   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000994   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000009A4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000009B4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000009C4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000009D4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000009E4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000009F4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000A04   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000A14   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000A24   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000A34   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000A44   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000A54   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000A64   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000A74   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000A84   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000A94   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000AA4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000AB4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000AC4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000AD4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000AE4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000AF4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000B04   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000B14   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000B24   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000B34   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000B44   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000B54   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000B64   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000B74   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000B84   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000B94   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000BA4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000BB4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000BC4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000BD4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000BE4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000BF4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000C04   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000C14   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000C24   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000C34   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000C44   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000C54   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000C64   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000C74   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000C84   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000C94   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000CA4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000CB4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000CC4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000CD4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000CE4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000CF4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000D04   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000D14   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000D24   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000D34   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000D44   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000D54   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000D64   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000D74   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000D84   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000D94   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000DA4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000DB4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000DC4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000DD4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000DE4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000DF4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000E04   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000E14   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000E24   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000E34   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000E44   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000E54   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000E64   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000E74   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000E84   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000E94   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000EA4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000EB4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000EC4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000ED4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000EE4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000EF4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000F04   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000F14   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000F24   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000F34   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000F44   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000F54   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000F64   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000F74   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000F84   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000F94   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000FA4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000FB4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000FC4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000FD4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000FE4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000FF4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00001004   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00001014   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00001024   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00001034   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00001044   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00001054   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0000        
      8          
      9          //=======================================================================//
     10          // Library Function Code
     11          //=======================================================================//
     12          //#define	DIST_DEG
     13          

   \                                 In section .text, align 2, keep-with-next
     14          void Ser2Init(void)
     15          {
   \                     Ser2Init:
   \   00000000   38B5               PUSH     {R3-R5,LR}
     16          	// Ser2
     17           	Hu_Ser2Ser->CheckByte = pUSART2.CheckByte;
   \   00000002   ........           LDR.W    R4,??DataTable8
   \   00000006   E069               LDR      R0,[R4, #+28]
   \   00000008   ........           LDR.W    R1,??DataTable8_1
   \   0000000C   4A68               LDR      R2,[R1, #+4]
   \   0000000E   0260               STR      R2,[R0, #+0]
     18          	Hu_Ser2Ser->RxGetByte = pUSART2.RxGetByte;
   \   00000010   8A68               LDR      R2,[R1, #+8]
   \   00000012   4260               STR      R2,[R0, #+4]
     19          	Hu_Ser2Ser->PutStr = pUSART2.PutStr;
   \   00000014   CA68               LDR      R2,[R1, #+12]
   \   00000016   8260               STR      R2,[R0, #+8]
     20          	Hu_Ser2Ser->TxCheckByte = pUSART2.TxCheckByte;
   \   00000018   CA69               LDR      R2,[R1, #+28]
   \   0000001A   0261               STR      R2,[R0, #+16]
     21          	Hu_Ser2Ser->BuffClear = pUSART2.BuffClear;
   \   0000001C   096A               LDR      R1,[R1, #+32]
   \   0000001E   4161               STR      R1,[R0, #+20]
     22          
     23          	Hu_Ser2Ser->TimerRx = TimerCcnRx;
   \   00000020   0621               MOVS     R1,#+6
   \   00000022   0183               STRH     R1,[R0, #+24]
     24          
     25          	Hu_Ser2Ser->Recv = &Rhu;
   \   00000024   04F64405           ADDW     R5,R4,#+2116
   \   00000028   4562               STR      R5,[R0, #+36]
     26          	Hu_Ser2Ser->Send = &Shu;
   \   0000002A   04F22C01           ADDW     R1,R4,#+44
   \   0000002E   8162               STR      R1,[R0, #+40]
     27          
     28          	Hu_Ser2Ser->OSSem = OSSemCreate(1);
   \   00000030   0120               MOVS     R0,#+1
   \   00000032   ........           BL       OSSemCreate
   \   00000036   E169               LDR      R1,[R4, #+28]
   \   00000038   0862               STR      R0,[R1, #+32]
     29          
     30          	// Ser3
     31           	Hu_Ser3Ser->CheckByte = pUSART3.CheckByte;
   \   0000003A   206A               LDR      R0,[R4, #+32]
   \   0000003C   ........           LDR.W    R1,??DataTable8_2
   \   00000040   4A68               LDR      R2,[R1, #+4]
   \   00000042   0260               STR      R2,[R0, #+0]
     32          	Hu_Ser3Ser->RxGetByte = pUSART3.RxGetByte;
   \   00000044   8A68               LDR      R2,[R1, #+8]
   \   00000046   4260               STR      R2,[R0, #+4]
     33          	Hu_Ser3Ser->PutStr = pUSART3.PutStr;
   \   00000048   CA68               LDR      R2,[R1, #+12]
   \   0000004A   8260               STR      R2,[R0, #+8]
     34          	Hu_Ser3Ser->TxCheckByte = pUSART3.TxCheckByte;
   \   0000004C   CA69               LDR      R2,[R1, #+28]
   \   0000004E   0261               STR      R2,[R0, #+16]
     35          	Hu_Ser3Ser->BuffClear = pUSART3.BuffClear;
   \   00000050   096A               LDR      R1,[R1, #+32]
   \   00000052   4161               STR      R1,[R0, #+20]
     36          
     37          	Hu_Ser3Ser->TimerRx = TimerCcnRx;
   \   00000054   0621               MOVS     R1,#+6
   \   00000056   0183               STRH     R1,[R0, #+24]
     38          
     39          	Hu_Ser3Ser->Recv = &Rhu;
   \   00000058   4562               STR      R5,[R0, #+36]
     40          	Hu_Ser3Ser->Send = &Shu;
   \   0000005A   04F22C01           ADDW     R1,R4,#+44
   \   0000005E   8162               STR      R1,[R0, #+40]
     41          
     42          	Hu_Ser3Ser->OSSem = OSSemCreate(1);
   \   00000060   0120               MOVS     R0,#+1
   \   00000062   ........           BL       OSSemCreate
   \   00000066   216A               LDR      R1,[R4, #+32]
   \   00000068   0862               STR      R0,[R1, #+32]
     43          
     44          	// Ser5
     45           	//Hu_Ser5Ser->CheckByte = pUSART5.CheckByte;
     46          	//Hu_Ser5Ser->RxGetByte = pUSART5.RxGetByte;
     47          	//Hu_Ser5Ser->PutStr = pUSART5.PutStr;
     48          	//Hu_Ser5Ser->TxCheckByte = pUSART5.TxCheckByte;
     49          	//Hu_Ser5Ser->BuffClear = pUSART5.BuffClear;
     50          
     51          	Hu_Ser5Ser->TimerRx = TimerCcnRx;
   \   0000006A   606A               LDR      R0,[R4, #+36]
   \   0000006C   0621               MOVS     R1,#+6
   \   0000006E   0183               STRH     R1,[R0, #+24]
     52          
     53          	Hu_Ser5Ser->Recv = &Rhu;
   \   00000070   4562               STR      R5,[R0, #+36]
     54          	Hu_Ser5Ser->Send = &Shu;
   \   00000072   04F22C01           ADDW     R1,R4,#+44
   \   00000076   8162               STR      R1,[R0, #+40]
     55          
     56          	Hu_Ser5Ser->OSSem = OSSemCreate(1);
   \   00000078   0120               MOVS     R0,#+1
   \   0000007A   ........           BL       OSSemCreate
   \   0000007E   616A               LDR      R1,[R4, #+36]
   \   00000080   0862               STR      R0,[R1, #+32]
     57          
     58          	// Ser6
     59           	//Hu_Ser6Ser->CheckByte = pUSART6.CheckByte;
     60          	//Hu_Ser6Ser->RxGetByte = pUSART6.RxGetByte;
     61          	//Hu_Ser6Ser->PutStr = pUSART6.PutStr;
     62          	//Hu_Ser6Ser->TxCheckByte = pUSART6.TxCheckByte;
     63          	//Hu_Ser6Ser->BuffClear = pUSART6.BuffClear;
     64          
     65          	Hu_Ser6Ser->TimerRx = TimerCcnRx;
   \   00000082   A06A               LDR      R0,[R4, #+40]
   \   00000084   0621               MOVS     R1,#+6
   \   00000086   0183               STRH     R1,[R0, #+24]
     66          
     67          	Hu_Ser6Ser->Recv = &Rhu;
   \   00000088   4562               STR      R5,[R0, #+36]
     68          	Hu_Ser6Ser->Send = &Shu;
   \   0000008A   04F22C01           ADDW     R1,R4,#+44
   \   0000008E   8162               STR      R1,[R0, #+40]
     69          
     70          	Hu_Ser6Ser->OSSem = OSSemCreate(1);
   \   00000090   0120               MOVS     R0,#+1
   \   00000092   ........           BL       OSSemCreate
   \   00000096   A16A               LDR      R1,[R4, #+40]
   \   00000098   0862               STR      R0,[R1, #+32]
     71          		
     72          	OSTaskCreate(Ser2Task, (void *)Hu_Ser2Ser, (OS_STK *)&Ser2TaskStk[SER2_STK_SIZE - 1], CCN_PRIO);
   \   0000009A   0523               MOVS     R3,#+5
   \   0000009C   ........           LDR.W    R2,??DataTable8_3
   \   000000A0   E169               LDR      R1,[R4, #+28]
   \   000000A2   ........           LDR.W    R0,??DataTable8_4
   \   000000A6   01B0               ADD      SP,SP,#+4
   \   000000A8   BDE83040           POP      {R4,R5,LR}
   \   000000AC   ........           B.W      OSTaskCreate
     73          }
     74          

   \                                 In section .text, align 2, keep-with-next
     75          void Ser2Task(void *pdata)
     76          {
   \                     Ser2Task:
   \   00000000   2DE9F04F           PUSH     {R4-R11,LR}
   \   00000004   85B0               SUB      SP,SP,#+20
     77          	SubIDStr	HuID;
     78          		
     79          	__ProtocolPtr *nPtr = (__ProtocolPtr *)pdata;
   \   00000006   0446               MOV      R4,R0
     80          
     81          	OSTimeDly(100*CCN_PRIO);
   \   00000008   4FF4FA70           MOV      R0,#+500
   \   0000000C   ........           BL       OSTimeDly
   \   00000010   ........           LDR.W    R5,??Total_DistCheckFunc_0
   \   00000014   ........           LDR.W    R10,??Tar_DistCheckFunc_0
   \   00000018   4FF0FF0B           MOV      R11,#+255
   \   0000001C   ........           LDR.W    R8,??Tar_DistCheckFunc_1
   \   00000020   ........           LDR.W    R9,??DataTable8_5
   \   00000024   ........           LDR.W    R6,??DataTable8
   \   00000028   03E0               B.N      ??Ser2Task_0
     82          
     83          	while(1)
     84          	{
     85          		while(!DownLoadGiveupTimerSet(NULL) && (!tTestFlag))
     86          		{
     87          			if(DistFlag == _OFF)
     88          			{
     89          				GetHuCommand();
     90          
     91          				HuID.MuID = MyID.MuID;
     92          				HuID.HuID = HuPollID[HuPollCnt];
     93          				HuID.RuID = 0xFF;
     94          				if((HuID.HuID==0)||(HuID.HuID==1))		nPtr = (__ProtocolPtr *)Hu_Ser2Ser;
     95          				else if((HuID.HuID==2)||(HuID.HuID==3))	nPtr = (__ProtocolPtr *)Hu_Ser3Ser;
     96          				else if((HuID.HuID==4)||(HuID.HuID==5))	nPtr = (__ProtocolPtr *)Hu_Ser5Ser;
     97          				else if((HuID.HuID==6)||(HuID.HuID==7))	nPtr = (__ProtocolPtr *)Hu_Ser6Ser;
     98          
     99          				MuxControl(HuID.HuID);
    100          				SysInfoCopy(MU_PATH, MyID);
    101          				SioDataAckTx(MyID, HuID, (INT8U*)MuStatus, sizeof(__MU_STS), StatusRQST, nPtr);
    102          				
    103          				if(LinkFailCnt[HuID.HuID]++ > 5)
    104          				{
    105          					LinkFailCnt[HuID.HuID] = 10;
    106          					SysInfo->Hu_Install[HuID.HuID] = SYS_LINK_FAIL;
    107          				}
    108          				
    109          				if(ProtocolCheck(nPtr, (Time1Sec*2L)))
    110          				{
    111          					HuProtocolComCheck(nPtr, 0);
    112          					
    113          					LinkFailCnt[HuID.HuID] = 0;
    114          					//SysInfo->Hu_Install[HuID.HuID] = SYS_NORMAL;
    115          				}
    116          
    117          				EndHuCommand();
    118          
    119          				HuPollCnt++;
    120          				if(HuPollCnt==HU_MAX)			HuPollCnt = 0;
    121          				if(HuPollID[HuPollCnt]==0xFF)	HuPollCnt = 0;
    122          				
    123          				OSTimeDly(500L);
    124          			}
    125          			else
    126          			{
    127          				if(DistType == MEA_TYPE)		Mea_DistCheckFunc();
    128          				else if(DistType == TAR_TYPE)	Tar_DistCheckFunc();
    129          				else if((DistType == BR_TYPE)||(DistType == ALL_TYPE))	Total_DistCheckFunc();	
    130          
    131          				OSTimeDly(100L);
    132          			}
    133          		}
    134          		OSTimeDly(1000L);
   \                     ??Ser2Task_1:
   \   0000002A   4FF47A70           MOV      R0,#+1000
   \                     ??Ser2Task_2:
   \   0000002E   ........           BL       OSTimeDly
   \                     ??Ser2Task_0:
   \   00000032   0020               MOVS     R0,#+0
   \   00000034   ........           BL       DownLoadGiveupTimerSet
   \   00000038   0028               CMP      R0,#+0
   \   0000003A   F6D1               BNE.N    ??Ser2Task_1
   \   0000003C   99F80000           LDRB     R0,[R9, #+0]
   \   00000040   0028               CMP      R0,#+0
   \   00000042   F2D1               BNE.N    ??Ser2Task_1
   \   00000044   B079               LDRB     R0,[R6, #+6]
   \   00000046   0028               CMP      R0,#+0
   \   00000048   64D1               BNE.N    ??Ser2Task_3
   \   0000004A   ........           BL       GetHuCommand
   \   0000004E   98F80000           LDRB     R0,[R8, #+0]
   \   00000052   8DF80800           STRB     R0,[SP, #+8]
   \   00000056   7079               LDRB     R0,[R6, #+5]
   \   00000058   8019               ADDS     R0,R0,R6
   \   0000005A   077D               LDRB     R7,[R0, #+20]
   \   0000005C   8DF80970           STRB     R7,[SP, #+9]
   \   00000060   8DF80AB0           STRB     R11,[SP, #+10]
   \   00000064   0FB1               CBZ.N    R7,??Ser2Task_4
   \   00000066   012F               CMP      R7,#+1
   \   00000068   01D1               BNE.N    ??Ser2Task_5
   \                     ??Ser2Task_4:
   \   0000006A   F469               LDR      R4,[R6, #+28]
   \   0000006C   10E0               B.N      ??Ser2Task_6
   \                     ??Ser2Task_5:
   \   0000006E   022F               CMP      R7,#+2
   \   00000070   01D0               BEQ.N    ??Ser2Task_7
   \   00000072   032F               CMP      R7,#+3
   \   00000074   01D1               BNE.N    ??Ser2Task_8
   \                     ??Ser2Task_7:
   \   00000076   346A               LDR      R4,[R6, #+32]
   \   00000078   0AE0               B.N      ??Ser2Task_6
   \                     ??Ser2Task_8:
   \   0000007A   042F               CMP      R7,#+4
   \   0000007C   01D0               BEQ.N    ??Ser2Task_9
   \   0000007E   052F               CMP      R7,#+5
   \   00000080   01D1               BNE.N    ??Ser2Task_10
   \                     ??Ser2Task_9:
   \   00000082   746A               LDR      R4,[R6, #+36]
   \   00000084   04E0               B.N      ??Ser2Task_6
   \                     ??Ser2Task_10:
   \   00000086   062F               CMP      R7,#+6
   \   00000088   01D0               BEQ.N    ??Ser2Task_11
   \   0000008A   072F               CMP      R7,#+7
   \   0000008C   00D1               BNE.N    ??Ser2Task_6
   \                     ??Ser2Task_11:
   \   0000008E   B46A               LDR      R4,[R6, #+40]
   \                     ??Ser2Task_6:
   \   00000090   3846               MOV      R0,R7
   \   00000092   ........           BL       MuxControl
   \   00000096   00A8               ADD      R0,SP,#+0
   \   00000098   4146               MOV      R1,R8
   \   0000009A   0322               MOVS     R2,#+3
   \   0000009C   ........           BL       __aeabi_memcpy
   \   000000A0   0099               LDR      R1,[SP, #+0]
   \   000000A2   0020               MOVS     R0,#+0
   \   000000A4   ........           BL       SysInfoCopy
   \   000000A8   03A8               ADD      R0,SP,#+12
   \   000000AA   4146               MOV      R1,R8
   \   000000AC   0322               MOVS     R2,#+3
   \   000000AE   ........           BL       __aeabi_memcpy
   \   000000B2   0194               STR      R4,[SP, #+4]
   \   000000B4   2020               MOVS     R0,#+32
   \   000000B6   0090               STR      R0,[SP, #+0]
   \   000000B8   4FF46C73           MOV      R3,#+944
   \   000000BC   DAF80020           LDR      R2,[R10, #+0]
   \   000000C0   0299               LDR      R1,[SP, #+8]
   \   000000C2   0398               LDR      R0,[SP, #+12]
   \   000000C4   ........           BL       SioDataAckTx
   \   000000C8   3846               MOV      R0,R7
   \   000000CA   8719               ADDS     R7,R0,R6
   \   000000CC   397B               LDRB     R1,[R7, #+12]
   \   000000CE   4A1C               ADDS     R2,R1,#+1
   \   000000D0   3A73               STRB     R2,[R7, #+12]
   \   000000D2   0629               CMP      R1,#+6
   \   000000D4   05D3               BCC.N    ??Ser2Task_12
   \   000000D6   0A21               MOVS     R1,#+10
   \   000000D8   3973               STRB     R1,[R7, #+12]
   \   000000DA   2968               LDR      R1,[R5, #+0]
   \   000000DC   4018               ADDS     R0,R0,R1
   \   000000DE   0321               MOVS     R1,#+3
   \   000000E0   4170               STRB     R1,[R0, #+1]
   \                     ??Ser2Task_12:
   \   000000E2   4FF4FA61           MOV      R1,#+2000
   \   000000E6   2046               MOV      R0,R4
   \   000000E8   ........           BL       ProtocolCheck
   \   000000EC   7179               LDRB     R1,[R6, #+5]
   \   000000EE   08B1               CBZ.N    R0,??Ser2Task_13
   \   000000F0   0020               MOVS     R0,#+0
   \   000000F2   3873               STRB     R0,[R7, #+12]
   \                     ??Ser2Task_13:
   \   000000F4   0120               MOVS     R0,#+1
   \   000000F6   3071               STRB     R0,[R6, #+4]
   \   000000F8   481C               ADDS     R0,R1,#+1
   \   000000FA   C0B2               UXTB     R0,R0
   \   000000FC   0828               CMP      R0,#+8
   \   000000FE   08BF               IT       EQ 
   \   00000100   0020               MOVEQ    R0,#+0
   \   00000102   8119               ADDS     R1,R0,R6
   \   00000104   097D               LDRB     R1,[R1, #+20]
   \   00000106   FF29               CMP      R1,#+255
   \   00000108   08BF               IT       EQ 
   \   0000010A   0020               MOVEQ    R0,#+0
   \   0000010C   7071               STRB     R0,[R6, #+5]
   \   0000010E   4FF4FA70           MOV      R0,#+500
   \   00000112   8CE7               B.N      ??Ser2Task_2
   \                     ??Ser2Task_3:
   \   00000114   707A               LDRB     R0,[R6, #+9]
   \   00000116   0428               CMP      R0,#+4
   \   00000118   02D1               BNE.N    ??Ser2Task_14
   \   0000011A   ........           BL       Mea_DistCheckFunc
   \   0000011E   0AE0               B.N      ??Ser2Task_15
   \                     ??Ser2Task_14:
   \   00000120   0128               CMP      R0,#+1
   \   00000122   02D1               BNE.N    ??Ser2Task_16
   \   00000124   ........           BL       Tar_DistCheckFunc
   \   00000128   05E0               B.N      ??Ser2Task_15
   \                     ??Ser2Task_16:
   \   0000012A   0228               CMP      R0,#+2
   \   0000012C   01D0               BEQ.N    ??Ser2Task_17
   \   0000012E   0328               CMP      R0,#+3
   \   00000130   01D1               BNE.N    ??Ser2Task_15
   \                     ??Ser2Task_17:
   \   00000132   ........           BL       Total_DistCheckFunc
   \                     ??Ser2Task_15:
   \   00000136   6420               MOVS     R0,#+100
   \   00000138   79E7               B.N      ??Ser2Task_2
    135          	}
    136          }
    137          
    138          

   \                                 In section .text, align 2, keep-with-next
    139          void HuProtocolComCheck (__ProtocolPtr *nPtr, __N_ProtocolPtr *NmsPtr)
    140          {
    141          #if 0
    142          	INT8U	PathChk = 0;
    143          	
    144          	SIO *Recv = nPtr->Recv;
    145          
    146          	PathChk = ID_Check(Recv->DstID);
    147          //	pUSART1.printf("\n Rev Path %d", PathChk); 
    148          	if(PathChk == MY_PATH)
    149          	{
    150          		switch(Recv->Command) //command 眉农
    151          		{
    152          			//-----------------------------------------------------------------------//
    153          			case StatusRSPS:
    154          //				pUSART1.printf("\n Rev RU[%d][%d]", BrID, (Recv->SrcID.HuID&0x0F)); 
    155          				if(Recv->SubDataLength == sizeof(__HU_STS))
    156          				{
    157          					RecvHuDataUpdate((__HU_STS*)Recv->Data, Recv->SrcID);
    158          				}
    159          				else if(Recv->SubDataLength == sizeof(__RU_STS))
    160          				{
    161          					RecvRuDataUpdate((__RU_STS*)Recv->Data, Recv->SrcID);
    162          				}
    163          			break;
    164          
    165          			case ControlRSPS:
    166          				if(Recv->SubDataLength == sizeof(__HU_STS))
    167          				{
    168          					RecvHuDataUpdate((__HU_STS*)Recv->Data, Recv->SrcID);
    169          				}
    170          				else if(Recv->SubDataLength == sizeof(__RU_STS))
    171          				{
    172          					RecvRuDataUpdate((__RU_STS*)Recv->Data, Recv->SrcID);
    173          				}
    174          				
    175          				if(NmsPtr == Eth0)
    176          				{
    177          					if(Recv->SubDataLength == sizeof(__HU_STS))
    178          					{
    179          						NmsDataCopy(HU_PATH, Recv->SrcID);
    180          						NmsDataAckTx((INT8U*)N_HuStatus, sizeof(__N_HU_STS), N_Control_CMD, NmsPtr);
    181          					}
    182          					else if(Recv->SubDataLength == sizeof(__RU_STS))
    183          					{
    184          						NmsDataCopy(RU_PATH, Recv->SrcID);
    185          						NmsDataAckTx((INT8U*)N_RuStatus, sizeof(__N_RU_STS), N_Control_CMD, NmsPtr);
    186          					}
    187          				}
    188          				else
    189          				{
    190          					if(DistFlag == _OFF)	BypassFunction(PcSer, nPtr);
    191          				}
    192          				break;
    193          
    194          			case ResetRSPS:
    195          				if(NmsPtr == Eth0)
    196          				{
    197          					if(Recv->SrcID.RuID == 0xFF)
    198          					{
    199          						NmsDataCopy(HU_PATH, Recv->SrcID);
    200          						N_HuStatus->ResetReason = UserReset;
    201          						NmsDataAckTx((INT8U*)N_HuStatus, sizeof(__N_HU_STS), N_Control_CMD, NmsPtr);
    202          					}
    203          					else
    204          					{
    205          						NmsDataCopy(RU_PATH, Recv->SrcID);
    206          						N_RuStatus->ResetReason = UserReset;
    207          						NmsDataAckTx((INT8U*)N_RuStatus, sizeof(__N_RU_STS), N_Control_CMD, NmsPtr);
    208          					}
    209          				}
    210          				else
    211          				{
    212          					BypassFunction(PcSer, nPtr);
    213          				}
    214          			break;
    215          				
    216          			case TableStsRSPS:
    217          			case TableSetRSPS:
    218          			case DownloadRSPS:
    219          			case DownDataRSPS:
    220          			case DownConfirmRSPS:
    221          				BypassFunction(PcSer, nPtr);
    222          			break;
    223          
    224          			//-----------------------------------------------------------------------//
    225          			case N_DownloadCMD:
    226          			case N_DownloadCMDConfirm:
    227          			case N_DownLoadData:
    228          			case N_DownLoadDataConfirm:
    229          				NmsDataAckTx((INT8U*)Recv->Data, Recv->SubDataLength, Recv->Command, NmsPtr);
    230          			break;
    231          
    232          			//-----------------------------------------------------------------------//
    233          			case ControlRQST:
    234          				if(Recv->SubDataLength != sizeof(__MU_CTRL)) break;
    235          
    236          				SetDnrCtrlData((__MU_CTRL*)Recv->Data);
    237          
    238          				SysInfoCopy(MU_PATH, Recv->DstID);
    239          				SioDataAckTx(Recv->DstID, Recv->SrcID, (INT8U*)MuStatus, sizeof(__MU_STS), ControlRSPS, nPtr);
    240          			break;
    241          		}
    242          	}
    243          	else if(PathChk == GUI_PATH)
    244          	{
    245          		switch(Recv->Command)
    246          		{
    247          			//-----------------------------------------------------------------------//
    248          			case ControlRSPS:
    249          				if(Recv->SubDataLength == sizeof(__HU_STS))
    250          				{
    251          					RecvHuDataUpdate((__HU_STS*)Recv->Data, Recv->SrcID);
    252          				}
    253          				else if(Recv->SubDataLength == sizeof(__RU_STS))
    254          				{
    255          					RecvRuDataUpdate((__RU_STS*)Recv->Data, Recv->SrcID);
    256          				}
    257          			case TableStsRSPS:
    258          			case TableSetRSPS:
    259          			case ResetRSPS:
    260          			case DownloadRSPS:
    261          			case DownDataRSPS:
    262          				// PC
    263          				BypassFunction(PcSer, nPtr);
    264          			break;
    265          
    266          			case DownConfirmRSPS:
    267          				// PC
    268          				BypassFunction(PcSer, nPtr);
    269          
    270          				OSTimeDly(1000L);
    271          				DownLoadGiveupTimerRst();
    272          			break;
    273          		}
    274          	}
    275          #endif
    276          }
   \                     HuProtocolComCheck:
   \   00000000   7047               BX       LR               ;; return
    277          

   \                                 In section .text, align 2, keep-with-next
    278          void GetHuCommand(void)
    279          {
   \                     GetHuCommand:
   \   00000000   10B5               PUSH     {R4,LR}
    280          	while( !Hu_Idle )	OSTimeDly(100);
   \   00000002   ........           LDR.W    R4,??DataTable8
   \   00000006   2079               LDRB     R0,[R4, #+4]
   \   00000008   28B9               CBNZ.N   R0,??GetHuCommand_0
   \                     ??GetHuCommand_1:
   \   0000000A   6420               MOVS     R0,#+100
   \   0000000C   ........           BL       OSTimeDly
   \   00000010   2079               LDRB     R0,[R4, #+4]
   \   00000012   0028               CMP      R0,#+0
   \   00000014   F9D0               BEQ.N    ??GetHuCommand_1
    281          	Hu_Idle = 0;
   \                     ??GetHuCommand_0:
   \   00000016   0020               MOVS     R0,#+0
   \   00000018   2071               STRB     R0,[R4, #+4]
    282          }
   \   0000001A   10BD               POP      {R4,PC}          ;; return
    283          

   \                                 In section .text, align 2, keep-with-next
    284          void EndHuCommand(void)
    285          {
    286          	Hu_Idle = 1;
   \                     EndHuCommand:
   \   00000000   ........           LDR.W    R0,??DataTable8
   \   00000004   0121               MOVS     R1,#+1
   \   00000006   0171               STRB     R1,[R0, #+4]
    287          }
   \   00000008   7047               BX       LR               ;; return
    288          
    289          //=======================================================================//

   \                                 In section .text, align 4, keep-with-next
    290          void MuxControl(INT8U BrID)
    291          {
    292          	switch(BrID)
   \                     MuxControl:
   \   00000000   0728               CMP      R0,#+7
   \   00000002   35D8               BHI.N    ??MuxControl_1
   \   00000004   DFE800F0           TBB      [PC, R0]
   \                     ??MuxControl_0:
   \   00000008   040A1016           DC8      0x4,0xA,0x10,0x16
   \   0000000C   1C22282E           DC8      0x1C,0x22,0x28,0x2E
    293          	{
    294          		//-----------------------------------------------------------------------//
    295          		case 0:
    296          			DCC_SEL01_CS = _LOW;
   \                     ??MuxControl_2:
   \   00000010   ........           LDR.W    R0,??DataTable8_6  ;; 0x40021814
   \   00000014   0168               LDR      R1,[R0, #+0]
   \   00000016   21F40061           BIC      R1,R1,#0x800
   \   0000001A   28E0               B.N      ??MuxControl_3
    297          			break;
    298          		case 1:
    299          			DCC_SEL01_CS = _HIGH;
   \                     ??MuxControl_4:
   \   0000001C   ........           LDR.W    R0,??DataTable8_6  ;; 0x40021814
   \   00000020   0168               LDR      R1,[R0, #+0]
   \   00000022   41F40061           ORR      R1,R1,#0x800
   \   00000026   22E0               B.N      ??MuxControl_3
    300          			break;
    301          			
    302          		//-----------------------------------------------------------------------//
    303          		case 2:
    304          			DCC_SEL23_CS = _LOW;
   \                     ??MuxControl_5:
   \   00000028   ........           LDR.W    R0,??DataTable8_6  ;; 0x40021814
   \   0000002C   0168               LDR      R1,[R0, #+0]
   \   0000002E   21F48051           BIC      R1,R1,#0x1000
   \   00000032   1CE0               B.N      ??MuxControl_3
    305          			break;
    306          		case 3:
    307          			DCC_SEL23_CS = _HIGH;
   \                     ??MuxControl_6:
   \   00000034   ........           LDR.W    R0,??DataTable8_6  ;; 0x40021814
   \   00000038   0168               LDR      R1,[R0, #+0]
   \   0000003A   41F48051           ORR      R1,R1,#0x1000
   \   0000003E   16E0               B.N      ??MuxControl_3
    308          			break;
    309          
    310          		//-----------------------------------------------------------------------//
    311          		case 4:
    312          			DCC_SEL45_CS = _LOW;
   \                     ??MuxControl_7:
   \   00000040   ........           LDR.W    R0,??DataTable8_6  ;; 0x40021814
   \   00000044   0168               LDR      R1,[R0, #+0]
   \   00000046   21F40051           BIC      R1,R1,#0x2000
   \   0000004A   10E0               B.N      ??MuxControl_3
    313          			break;
    314          		case 5:
    315          			DCC_SEL45_CS = _HIGH;
   \                     ??MuxControl_8:
   \   0000004C   ........           LDR.W    R0,??DataTable8_6  ;; 0x40021814
   \   00000050   0168               LDR      R1,[R0, #+0]
   \   00000052   41F40051           ORR      R1,R1,#0x2000
   \   00000056   0AE0               B.N      ??MuxControl_3
    316          			break;
    317          
    318          		//-----------------------------------------------------------------------//
    319          		case 6:
    320          			DCC_SEL67_CS = _LOW;
   \                     ??MuxControl_9:
   \   00000058   ........           LDR.W    R0,??DataTable8_6  ;; 0x40021814
   \   0000005C   0168               LDR      R1,[R0, #+0]
   \   0000005E   21F48041           BIC      R1,R1,#0x4000
   \   00000062   04E0               B.N      ??MuxControl_3
    321          			break;
    322          		case 7:
    323          			DCC_SEL67_CS = _HIGH;
   \                     ??MuxControl_10:
   \   00000064   ........           LDR.W    R0,??DataTable8_6  ;; 0x40021814
   \   00000068   0168               LDR      R1,[R0, #+0]
   \   0000006A   41F48041           ORR      R1,R1,#0x4000
   \                     ??MuxControl_3:
   \   0000006E   0160               STR      R1,[R0, #+0]
    324          			break;
    325          		
    326          	}
    327          	OSTimeDly(100L);
   \                     ??MuxControl_1:
   \   00000070   6420               MOVS     R0,#+100
   \   00000072   ........           B.W      OSTimeDly
    328          }
    329          

   \                                 In section .text, align 2, keep-with-next
    330          void RecvHuDataUpdate(__HU_STS *ptr, SubIDStr sID)
    331          {
   \                     RecvHuDataUpdate:
   \   00000000   2DE9F247           PUSH     {R1,R4-R10,LR}
    332          	INT16U	i, j;
    333          	INT8U	AlmCnt = 0;
   \   00000004   0021               MOVS     R1,#+0
    334          
    335          	//---------------------------------------------------------------------//
    336          	// Ru install Update
    337          	for(i=0; i<HDTU_MAX; i++)
   \   00000006   0024               MOVS     R4,#+0
   \   00000008   0D46               MOV      R5,R1
   \   0000000A   1026               MOVS     R6,#+16
   \   0000000C   9DF80130           LDRB     R3,[SP, #+1]
   \   00000010   00EB831C           ADD      R12,R0,R3, LSL #+6
   \   00000014   ........           LDR.W    R2,??Total_DistCheckFunc_0
    338          	{
    339          		for(j=0; j<HU_RU_MAX; j++)
   \                     ??RecvHuDataUpdate_0:
   \   00000018   8E46               MOV      LR,R1
   \   0000001A   0CEB8408           ADD      R8,R12,R4, LSL #+2
    340          			SysInfo->Hu_Ru[sID.HuID].Ru_Install[i][j] = ptr->SystemIns.Hu_Ru[sID.HuID].Ru_Install[i][j];
   \                     ??RecvHuDataUpdate_1:
   \   0000001E   D2F80090           LDR      R9,[R2, #+0]
   \   00000022   09EB8319           ADD      R9,R9,R3, LSL #+6
   \   00000026   A944               ADD      R9,R5,R9
   \   00000028   F144               ADD      R9,LR,R9
   \   0000002A   98F809A0           LDRB     R10,[R8, #+9]
   \   0000002E   89F809A0           STRB     R10,[R9, #+9]
   \   00000032   0EF1010E           ADD      LR,LR,#+1
   \   00000036   08F10108           ADD      R8,R8,#+1
   \   0000003A   BEF1040F           CMP      LR,#+4
   \   0000003E   EEDB               BLT.N    ??RecvHuDataUpdate_1
    341          	}
   \   00000040   641C               ADDS     R4,R4,#+1
   \   00000042   2D1D               ADDS     R5,R5,#+4
   \   00000044   761E               SUBS     R6,R6,#+1
   \   00000046   E7D1               BNE.N    ??RecvHuDataUpdate_0
    342          
    343          	//---------------------------------------------------------------------//
    344          	// Hu Status Update
    345          	for(i=0; i<sizeof(__HU_STS); i++)
   \   00000048   0024               MOVS     R4,#+0
   \   0000004A   40F20A35           MOVW     R5,#+778
   \   0000004E   ........           LDR.W    R6,??DataTable8_7
    346          	{
    347          		*((INT8U*)HuStatus[sID.HuID]+i) = *((INT8U*)ptr+i);
   \                     ??RecvHuDataUpdate_2:
   \   00000052   56F82370           LDR      R7,[R6, R3, LSL #+2]
   \   00000056   10F801CB           LDRB     R12,[R0], #+1
   \   0000005A   04F807C0           STRB     R12,[R4, R7]
    348          	}
   \   0000005E   641C               ADDS     R4,R4,#+1
   \   00000060   AC42               CMP      R4,R5
   \   00000062   F6D3               BCC.N    ??RecvHuDataUpdate_2
    349          
    350          	//---------------------------------------------------------------------//
    351          	// ALARM LED
    352          	if(HuStatus[sID.HuID]->HuAlm.Data[0] != _Normal)					AlmCnt++;
   \   00000064   56F82300           LDR      R0,[R6, R3, LSL #+2]
   \   00000068   90F85842           LDRB     R4,[R0, #+600]
   \   0000006C   04B1               CBZ.N    R4,??RecvHuDataUpdate_3
   \   0000006E   0121               MOVS     R1,#+1
    353          //	if(HuStatus[sID.HuID]->HuAlm.Data[1] != _Normal)					AlmCnt++;
    354          	for(i=0; i<HDTU_MAX; i++)
   \                     ??RecvHuDataUpdate_3:
   \   00000070   0024               MOVS     R4,#+0
   \   00000072   1025               MOVS     R5,#+16
    355          		if(HuStatus[sID.HuID]->HdtuSts[i].Alarm.Data != _Normal)			AlmCnt++;
   \                     ??RecvHuDataUpdate_4:
   \   00000074   2618               ADDS     R6,R4,R0
   \   00000076   96F86862           LDRB     R6,[R6, #+616]
   \   0000007A   06B1               CBZ.N    R6,??RecvHuDataUpdate_5
   \   0000007C   491C               ADDS     R1,R1,#+1
   \                     ??RecvHuDataUpdate_5:
   \   0000007E   0A34               ADDS     R4,R4,#+10
   \   00000080   6D1E               SUBS     R5,R5,#+1
   \   00000082   F7D1               BNE.N    ??RecvHuDataUpdate_4
    356          	
    357          	if(AlmCnt != 0)		SysInfo->Hu_Install[sID.HuID] = SYS_ALARM;
   \   00000084   1068               LDR      R0,[R2, #+0]
   \   00000086   1818               ADDS     R0,R3,R0
   \   00000088   C9B2               UXTB     R1,R1
   \   0000008A   0029               CMP      R1,#+0
   \   0000008C   14BF               ITE      NE 
   \   0000008E   0221               MOVNE    R1,#+2
   \   00000090   0121               MOVEQ    R1,#+1
    358          	else				SysInfo->Hu_Install[sID.HuID] = SYS_NORMAL;
   \   00000092   4170               STRB     R1,[R0, #+1]
    359          
    360          	// Reset Check
    361          	//if(HuStatus[sID.HuID]->HuAlm.Reset_Alarm == _Alarm)
    362          	//	HuBootFlag[sID.HuID] = HuStatus[sID.HuID]->ResetReason;
    363          }
   \   00000094   BDE8F187           POP      {R0,R4-R10,PC}   ;; return
    364          

   \                                 In section .text, align 2, keep-with-next
    365          void RecvRuDataUpdate(__RU_STS *ptr, SubIDStr sID)
    366          {
   \                     RecvRuDataUpdate:
   \   00000000   72B4               PUSH     {R1,R4-R6}
    367          	INT16U	i, j;
    368          	INT8U	BrID, RuID = 0;
    369          
    370          	BrID = (sID.RuID>>4)&0x0F;
   \   00000002   9DF80210           LDRB     R1,[SP, #+2]
   \   00000006   0909               LSRS     R1,R1,#+4
    371          	RuID = 0;
    372          	//RuID = sID.RuID&0x0F;
    373          	if(RuID > 0)	RuID = 0;
    374          	
    375          	//---------------------------------------------------------------------//
    376          	// Ru Status Update
    377          	for(i=0, j=sizeof(InstallStr); i<sizeof(__RU_BUF_STS); i++, j++)
   \   00000008   0022               MOVS     R2,#+0
   \   0000000A   00F24920           ADDW     R0,R0,#+585
   \   0000000E   9DF80130           LDRB     R3,[SP, #+1]
   \   00000012   ........           LDR.W    R4,??DataTable8_8
   \   00000016   04EB8313           ADD      R3,R4,R3, LSL #+6
   \   0000001A   40F25714           MOVW     R4,#+343
    378          	{
    379          		*((INT8U*)RuBuf[sID.HuID][BrID][RuID]+i) = *((INT8U*)ptr+j);
   \                     ??RecvRuDataUpdate_0:
   \   0000001E   53F82150           LDR      R5,[R3, R1, LSL #+2]
   \   00000022   10F8016B           LDRB     R6,[R0], #+1
   \   00000026   5655               STRB     R6,[R2, R5]
    380          	}
   \   00000028   521C               ADDS     R2,R2,#+1
   \   0000002A   92B2               UXTH     R2,R2
   \   0000002C   A242               CMP      R2,R4
   \   0000002E   F6D3               BCC.N    ??RecvRuDataUpdate_0
    381          
    382          	// Reset Check
    383          	if(RuBuf[sID.HuID][BrID][RuID]->RuAlm.Reset_Alarm == _Alarm)
    384          	{
    385          //		RuBootFlag[sID.HuID][BrID] = RuBuf[sID.HuID][BrID][RuID]->ResetReason;
    386          //		SerPtr->printf("\nRu Reset[%x][%x][%x], Reason=%d ", sID.MuID, sID.HuID, sID.RuID, RuBuf[sID.HuID][BrID][RuID]->ResetReason);
    387          	}
    388          }
   \   00000030   71BC               POP      {R0,R4-R6}
   \   00000032   7047               BX       LR               ;; return
    389          

   \                                 In section .text, align 2, keep-with-next
    390          BOOL InstallCheck(SubIDStr sID, INT8U Path)
    391          {
   \                     InstallCheck:
   \   00000000   01B4               PUSH     {R0}
    392          	BOOL	rVal = FALSE;
   \   00000002   0020               MOVS     R0,#+0
    393          	INT8U	BrID, RuID;
    394          
    395          	BrID = ((sID.RuID>>4)&0x0F);
   \   00000004   9DF80220           LDRB     R2,[SP, #+2]
   \   00000008   1309               LSRS     R3,R2,#+4
    396          	RuID = (sID.RuID&0x0F);
   \   0000000A   02F00F02           AND      R2,R2,#0xF
    397          
    398          	if(Path == HU_PATH)
   \   0000000E   C9B2               UXTB     R1,R1
   \   00000010   0129               CMP      R1,#+1
   \   00000012   07D1               BNE.N    ??InstallCheck_0
    399          	{
    400          		if(SysInfo->Hu_Install[sID.HuID] != SYS_NOT_INST)	rVal = TRUE;
   \   00000014   9DF80110           LDRB     R1,[SP, #+1]
   \   00000018   ........           LDR.W    R2,??Total_DistCheckFunc_0
   \   0000001C   1268               LDR      R2,[R2, #+0]
   \   0000001E   8918               ADDS     R1,R1,R2
   \   00000020   4978               LDRB     R1,[R1, #+1]
   \   00000022   15E0               B.N      ??InstallCheck_1
    401          		else												rVal = FALSE;
    402          	}
    403          	else if(Path == RU_PATH)
   \                     ??InstallCheck_0:
   \   00000024   0229               CMP      R1,#+2
   \   00000026   15D1               BNE.N    ??InstallCheck_2
    404          	{
    405          		if(sID.HuID == 0xFF)
   \   00000028   ........           LDR.W    R1,??Total_DistCheckFunc_0
   \   0000002C   0968               LDR      R1,[R1, #+0]
   \   0000002E   9DF801C0           LDRB     R12,[SP, #+1]
   \   00000032   BCF1FF0F           CMP      R12,#+255
   \   00000036   02BF               ITTT     EQ 
   \   00000038   01EBC301           ADDEQ    R1,R1,R3, LSL #+3
   \   0000003C   5118               ADDEQ    R1,R2,R1
   \   0000003E   91F80912           LDRBEQ   R1,[R1, #+521]
    406          		{
    407          			if(SysInfo->Mu_Ru_Install[BrID][RuID] != SYS_NOT_INST)	rVal = TRUE;
   \   00000042   05D0               BEQ.N    ??InstallCheck_1
    408          			else													rVal = FALSE;
    409          		}
    410          		else
    411          		{
    412          			if(SysInfo->Hu_Ru[sID.HuID].Ru_Install[BrID][RuID] != SYS_NOT_INST)	rVal = TRUE;
   \   00000044   01EB8C11           ADD      R1,R1,R12, LSL #+6
   \   00000048   01EB8301           ADD      R1,R1,R3, LSL #+2
   \   0000004C   5118               ADDS     R1,R2,R1
   \   0000004E   497A               LDRB     R1,[R1, #+9]
   \                     ??InstallCheck_1:
   \   00000050   01B1               CBZ.N    R1,??InstallCheck_2
   \   00000052   0120               MOVS     R0,#+1
    413          			else																rVal = FALSE;
    414          		}
    415          	}
    416          
    417          	return	rVal;
   \                     ??InstallCheck_2:
   \   00000054   01B0               ADD      SP,SP,#+4
   \   00000056   7047               BX       LR               ;; return
    418          }
    419          
    420          //=======================================================================//

   \                                 In section .text, align 2, keep-with-next
    421          void Mea_DistCheckFunc(void)
    422          {
   \                     Mea_DistCheckFunc:
   \   00000000   2DE9F043           PUSH     {R4-R9,LR}
   \   00000004   85B0               SUB      SP,SP,#+20
    423          	INT8U	Dist_MuBr = 0;
    424          	INT8U	Dist_HuBr = 0;
    425          	INT8U	Dist_Ru = 0;
    426          	INT8U	Path;
    427          
    428          	__ProtocolPtr *nPtr;
    429          	
    430          	Dist_MuBr = DistTarID.HuID;
   \   00000006   ....               LDR.N    R5,??DataTable8
   \   00000008   6E78               LDRB     R6,[R5, #+1]
   \   0000000A   2868               LDR      R0,[R5, #+0]
   \   0000000C   0090               STR      R0,[SP, #+0]
    431          	Path = ID_Check(DistTarID);
   \   0000000E   ........           BL       ID_Check
   \   00000012   0746               MOV      R7,R0
    432          	Dist_HuBr = (DistTarID.RuID>>4)&0x0F;
   \   00000014   A878               LDRB     R0,[R5, #+2]
   \   00000016   4FEA1018           LSR      R8,R0,#+4
    433          	Dist_Ru = DistTarID.RuID&0x0F;
   \   0000001A   10F00F09           ANDS     R9,R0,#0xF
    434          	if(Dist_Ru>0)	Dist_Ru = 0;
   \   0000001E   18BF               IT       NE 
   \   00000020   4FF00009           MOVNE    R9,#+0
    435          	
    436          	switch(DistStep)
   \   00000024   E879               LDRB     R0,[R5, #+7]
   \   00000026   98B1               CBZ.N    R0,??Mea_DistCheckFunc_0
   \   00000028   0128               CMP      R0,#+1
   \   0000002A   33D0               BEQ.N    ??Mea_DistCheckFunc_1
   \   0000002C   0228               CMP      R0,#+2
   \   0000002E   7DD0               BEQ.N    ??Mea_DistCheckFunc_2
   \   00000030   0328               CMP      R0,#+3
   \   00000032   00F09A80           BEQ.W    ??Mea_DistCheckFunc_3
   \   00000036   0428               CMP      R0,#+4
   \   00000038   00F0EF80           BEQ.W    ??Mea_DistCheckFunc_4
   \   0000003C   0A28               CMP      R0,#+10
   \   0000003E   00F0F780           BEQ.W    ??Mea_DistCheckFunc_5
   \   00000042   1428               CMP      R0,#+20
   \   00000044   00F00081           BEQ.W    ??Mea_DistCheckFunc_6
   \   00000048   1528               CMP      R0,#+21
   \   0000004A   00F04981           BEQ.W    ??Mea_DistCheckFunc_7
   \   0000004E   4DE1               B.N      ??Mea_DistCheckFunc_8
    437          	{
    438          		//-----------------------------------------------------------------------//
    439          		// ID, Intstall, Link Fail Check
    440          		case 0:
    441          			DistCnt = 0;
   \                     ??Mea_DistCheckFunc_0:
   \   00000050   2872               STRB     R0,[R5, #+8]
    442          			
    443          			if(Path == HU_PATH)
   \   00000052   012F               CMP      R7,#+1
   \   00000054   0DD1               BNE.N    ??Mea_DistCheckFunc_9
    444          			{
    445          				if((SysInfo->Hu_Install[Dist_MuBr] == SYS_ALARM)
    446          					||(SysInfo->Hu_Install[Dist_MuBr] == SYS_NORMAL))
   \   00000056   ........           LDR.W    R0,??Total_DistCheckFunc_0
   \   0000005A   0068               LDR      R0,[R0, #+0]
   \   0000005C   3018               ADDS     R0,R6,R0
   \   0000005E   4178               LDRB     R1,[R0, #+1]
   \   00000060   0229               CMP      R1,#+2
   \   00000062   01D0               BEQ.N    ??Mea_DistCheckFunc_10
   \   00000064   0129               CMP      R1,#+1
   \   00000066   02D1               BNE.N    ??Mea_DistCheckFunc_11
    447          						DistStep = 1;
   \                     ??Mea_DistCheckFunc_10:
   \   00000068   0120               MOVS     R0,#+1
   \                     ??Mea_DistCheckFunc_12:
   \   0000006A   E871               STRB     R0,[R5, #+7]
   \   0000006C   3EE1               B.N      ??Mea_DistCheckFunc_8
    448          				else	DistStep = 10;	// Not Insrt or Link Fail
   \                     ??Mea_DistCheckFunc_11:
   \   0000006E   0A20               MOVS     R0,#+10
   \   00000070   FBE7               B.N      ??Mea_DistCheckFunc_12
    449          			}
    450          			else if(Path == RU_PATH)
   \                     ??Mea_DistCheckFunc_9:
   \   00000072   022F               CMP      R7,#+2
   \   00000074   FBD1               BNE.N    ??Mea_DistCheckFunc_11
   \   00000076   ........           LDR.W    R0,??Total_DistCheckFunc_0
   \   0000007A   0068               LDR      R0,[R0, #+0]
   \   0000007C   00EB8610           ADD      R0,R0,R6, LSL #+6
   \   00000080   00EB8800           ADD      R0,R0,R8, LSL #+2
   \   00000084   4844               ADD      R0,R9,R0
   \   00000086   417A               LDRB     R1,[R0, #+9]
   \   00000088   0229               CMP      R1,#+2
   \   0000008A   EDD0               BEQ.N    ??Mea_DistCheckFunc_10
   \   0000008C   0129               CMP      R1,#+1
   \   0000008E   EBD0               BEQ.N    ??Mea_DistCheckFunc_10
    451          			{
    452          				if((SysInfo->Hu_Ru[Dist_MuBr].Ru_Install[Dist_HuBr][Dist_Ru] == SYS_ALARM)
    453          					||(SysInfo->Hu_Ru[Dist_MuBr].Ru_Install[Dist_HuBr][Dist_Ru] == SYS_NORMAL))
    454          						DistStep = 1;
    455          				else	DistStep = 10;	// Not Insrt or Link Fail
   \   00000090   0A20               MOVS     R0,#+10
   \   00000092   EAE7               B.N      ??Mea_DistCheckFunc_12
    456          			}
    457          			else		DistStep = 10;
    458          			break;
    459          
    460          		//-----------------------------------------------------------------------//
    461          		// HU/RU Loop Back & Check
    462          		case 1:
    463          			GetHuCommand();
   \                     ??Mea_DistCheckFunc_1:
   \   00000094   ........           BL       GetHuCommand
    464          			
    465          			if((Dist_MuBr==0)||(Dist_MuBr==1))		nPtr = (__ProtocolPtr *)Hu_Ser2Ser;
   \   00000098   0EB1               CBZ.N    R6,??Mea_DistCheckFunc_13
   \   0000009A   012E               CMP      R6,#+1
   \   0000009C   01D1               BNE.N    ??Mea_DistCheckFunc_14
   \                     ??Mea_DistCheckFunc_13:
   \   0000009E   EC69               LDR      R4,[R5, #+28]
   \   000000A0   10E0               B.N      ??Mea_DistCheckFunc_15
    466          			else if((Dist_MuBr==2)||(Dist_MuBr==3))	nPtr = (__ProtocolPtr *)Hu_Ser3Ser;
   \                     ??Mea_DistCheckFunc_14:
   \   000000A2   022E               CMP      R6,#+2
   \   000000A4   01D0               BEQ.N    ??Mea_DistCheckFunc_16
   \   000000A6   032E               CMP      R6,#+3
   \   000000A8   01D1               BNE.N    ??Mea_DistCheckFunc_17
   \                     ??Mea_DistCheckFunc_16:
   \   000000AA   2C6A               LDR      R4,[R5, #+32]
   \   000000AC   0AE0               B.N      ??Mea_DistCheckFunc_15
    467          			else if((Dist_MuBr==4)||(Dist_MuBr==5))	nPtr = (__ProtocolPtr *)Hu_Ser5Ser;
   \                     ??Mea_DistCheckFunc_17:
   \   000000AE   042E               CMP      R6,#+4
   \   000000B0   01D0               BEQ.N    ??Mea_DistCheckFunc_18
   \   000000B2   052E               CMP      R6,#+5
   \   000000B4   01D1               BNE.N    ??Mea_DistCheckFunc_19
   \                     ??Mea_DistCheckFunc_18:
   \   000000B6   6C6A               LDR      R4,[R5, #+36]
   \   000000B8   04E0               B.N      ??Mea_DistCheckFunc_15
    468          			else if((Dist_MuBr==6)||(Dist_MuBr==7))	nPtr = (__ProtocolPtr *)Hu_Ser6Ser;
   \                     ??Mea_DistCheckFunc_19:
   \   000000BA   062E               CMP      R6,#+6
   \   000000BC   01D0               BEQ.N    ??Mea_DistCheckFunc_20
   \   000000BE   072E               CMP      R6,#+7
   \   000000C0   00D1               BNE.N    ??Mea_DistCheckFunc_15
   \                     ??Mea_DistCheckFunc_20:
   \   000000C2   AC6A               LDR      R4,[R5, #+40]
   \                     ??Mea_DistCheckFunc_15:
   \   000000C4   2868               LDR      R0,[R5, #+0]
   \   000000C6   0090               STR      R0,[SP, #+0]
    469          
    470          			LoopBackCtrlFunc(Path, DistTarID, nPtr, _ON);
   \   000000C8   0123               MOVS     R3,#+1
   \   000000CA   2246               MOV      R2,R4
   \   000000CC   0146               MOV      R1,R0
   \   000000CE   3846               MOV      R0,R7
   \   000000D0   ........           BL       LoopBackCtrlFunc
    471          
    472          			if(ProtocolCheck(nPtr, (Time1Sec*2L)))
   \   000000D4   4FF4FA61           MOV      R1,#+2000
   \   000000D8   2046               MOV      R0,R4
   \   000000DA   ........           BL       ProtocolCheck
   \   000000DE   08B3               CBZ.N    R0,??Mea_DistCheckFunc_21
    473          			{
    474          				HuProtocolComCheck(nPtr, 0);
    475          
    476          				if(Path == HU_PATH)
   \   000000E0   012F               CMP      R7,#+1
   \   000000E2   14D1               BNE.N    ??Mea_DistCheckFunc_22
    477          				{
    478          					if(HuStatus[Dist_MuBr]->LoopBack == _ON)
   \   000000E4   ....               LDR.N    R0,??DataTable8_7
   \   000000E6   50F82600           LDR      R0,[R0, R6, LSL #+2]
   \   000000EA   90F80703           LDRB     R0,[R0, #+775]
   \   000000EE   0128               CMP      R0,#+1
   \   000000F0   18D1               BNE.N    ??Mea_DistCheckFunc_21
    479          					{
    480          						DistCnt = 0;
   \                     ??Mea_DistCheckFunc_23:
   \   000000F2   0020               MOVS     R0,#+0
   \   000000F4   2872               STRB     R0,[R5, #+8]
    481          						DistStep = 2;
   \   000000F6   0220               MOVS     R0,#+2
   \   000000F8   E871               STRB     R0,[R5, #+7]
    482          					}
    483          					else	DistCnt++;
    484          				}
    485          				else
    486          				{
    487          					if(RuBuf[Dist_MuBr][Dist_HuBr][Dist_Ru]->LoopBack == _ON)
    488          					{
    489          						DistCnt = 0;
    490          						DistStep = 2;
    491          					}
    492          					else	DistCnt++;
    493          				}
    494          			}
    495          			else	DistCnt++;
    496          
    497          			EndHuCommand();
   \                     ??Mea_DistCheckFunc_24:
   \   000000FA   0120               MOVS     R0,#+1
   \   000000FC   2871               STRB     R0,[R5, #+4]
    498          			
    499          			if(DistCnt>=3)
   \   000000FE   287A               LDRB     R0,[R5, #+8]
   \   00000100   0328               CMP      R0,#+3
   \   00000102   C0F0F380           BCC.W    ??Mea_DistCheckFunc_8
    500          			{
    501          				DistCnt = 0;
   \                     ??Mea_DistCheckFunc_25:
   \   00000106   0020               MOVS     R0,#+0
   \   00000108   2872               STRB     R0,[R5, #+8]
    502          				DistStep = 10;
   \   0000010A   0A20               MOVS     R0,#+10
   \   0000010C   ADE7               B.N      ??Mea_DistCheckFunc_12
    503          			}
   \                     ??Mea_DistCheckFunc_22:
   \   0000010E   ....               LDR.N    R0,??DataTable8_8
   \   00000110   00EB8610           ADD      R0,R0,R6, LSL #+6
   \   00000114   00EB8800           ADD      R0,R0,R8, LSL #+2
   \   00000118   50F82900           LDR      R0,[R0, R9, LSL #+2]
   \   0000011C   90F85401           LDRB     R0,[R0, #+340]
   \   00000120   0128               CMP      R0,#+1
   \   00000122   E6D0               BEQ.N    ??Mea_DistCheckFunc_23
   \                     ??Mea_DistCheckFunc_21:
   \   00000124   287A               LDRB     R0,[R5, #+8]
   \   00000126   401C               ADDS     R0,R0,#+1
   \   00000128   2872               STRB     R0,[R5, #+8]
   \   0000012A   E6E7               B.N      ??Mea_DistCheckFunc_24
    504          			break;
    505          
    506          		//-----------------------------------------------------------------------//
    507          		// DTU Control : On
    508          		case 2:
    509          			DtuLoopBackControl(_ON, Dist_MuBr);
   \                     ??Mea_DistCheckFunc_2:
   \   0000012C   3146               MOV      R1,R6
   \   0000012E   0120               MOVS     R0,#+1
   \   00000130   ........           BL       DtuLoopBackControl
    510          
    511          			if((DtuStatus->MeaLoop == _ON)&&(DtuStatus->MeaBranch == Dist_MuBr))
   \   00000134   ........           LDR.W    R0,??DataTable10
   \   00000138   0068               LDR      R0,[R0, #+0]
   \   0000013A   90F83710           LDRB     R1,[R0, #+55]
   \   0000013E   0129               CMP      R1,#+1
   \   00000140   0BD1               BNE.N    ??Mea_DistCheckFunc_26
   \   00000142   90F83900           LDRB     R0,[R0, #+57]
   \   00000146   B042               CMP      R0,R6
   \   00000148   07D1               BNE.N    ??Mea_DistCheckFunc_26
    512          			{
    513          				DistStep = 3;
   \   0000014A   0320               MOVS     R0,#+3
   \   0000014C   E871               STRB     R0,[R5, #+7]
    514          				DistCnt = 0;
   \   0000014E   0020               MOVS     R0,#+0
   \   00000150   2872               STRB     R0,[R5, #+8]
    515          
    516          				OSTimeDly(100L);
   \   00000152   6420               MOVS     R0,#+100
   \   00000154   ........           BL       OSTimeDly
   \   00000158   02E0               B.N      ??Mea_DistCheckFunc_27
    517          			}
    518          			else	DistCnt++;
   \                     ??Mea_DistCheckFunc_26:
   \   0000015A   287A               LDRB     R0,[R5, #+8]
   \   0000015C   401C               ADDS     R0,R0,#+1
   \   0000015E   2872               STRB     R0,[R5, #+8]
    519          
    520          			if(DistCnt>=3)
   \                     ??Mea_DistCheckFunc_27:
   \   00000160   287A               LDRB     R0,[R5, #+8]
   \   00000162   0328               CMP      R0,#+3
   \   00000164   C0F0C280           BCC.W    ??Mea_DistCheckFunc_8
   \   00000168   CDE7               B.N      ??Mea_DistCheckFunc_25
    521          			{
    522          				DistCnt = 0;
    523          				DistStep = 10;
    524          			}
    525          			break;
    526          
    527          		//-----------------------------------------------------------------------//
    528          		// DTU Status Check
    529          		case 3:
    530          			GetDtuCommand();
   \                     ??Mea_DistCheckFunc_3:
   \   0000016A   ........           BL       GetDtuCommand
    531          			SioDataAckTx(MyID, DtuID, (INT8U*)NULL, 0, StatusRQST, DtuSer);
   \   0000016E   ........           LDR.W    R4,??DataTable10_1
   \   00000172   03A8               ADD      R0,SP,#+12
   \   00000174   ........           LDR.W    R1,??DataTable10_2
   \   00000178   0322               MOVS     R2,#+3
   \   0000017A   ........           BL       __aeabi_memcpy
   \   0000017E   02A8               ADD      R0,SP,#+8
   \   00000180   ........           LDR.W    R1,??Tar_DistCheckFunc_1
   \   00000184   0322               MOVS     R2,#+3
   \   00000186   ........           BL       __aeabi_memcpy
   \   0000018A   2068               LDR      R0,[R4, #+0]
   \   0000018C   0190               STR      R0,[SP, #+4]
   \   0000018E   2020               MOVS     R0,#+32
   \   00000190   0090               STR      R0,[SP, #+0]
   \   00000192   0023               MOVS     R3,#+0
   \   00000194   0022               MOVS     R2,#+0
   \   00000196   0399               LDR      R1,[SP, #+12]
   \   00000198   0298               LDR      R0,[SP, #+8]
   \   0000019A   ........           BL       SioDataAckTx
    532          			if(ProtocolCheck(DtuSer, (Time1Sec*2L)))
   \   0000019E   4FF4FA61           MOV      R1,#+2000
   \   000001A2   2068               LDR      R0,[R4, #+0]
   \   000001A4   ........           BL       ProtocolCheck
   \   000001A8   58B3               CBZ.N    R0,??Mea_DistCheckFunc_28
    533          			{
    534          				DtuProtocolComCheck(DtuSer);
   \   000001AA   2068               LDR      R0,[R4, #+0]
   \   000001AC   ........           BL       DtuProtocolComCheck
    535          
    536          				if(DtuStatus->MeaResult != 0)
   \   000001B0   ........           LDR.W    R0,??DataTable10
   \   000001B4   0068               LDR      R0,[R0, #+0]
   \   000001B6   B0F83510           LDRH     R1,[R0, #+53]
   \   000001BA   11B3               CBZ.N    R1,??Mea_DistCheckFunc_28
    537          				{
    538          					if(DistTarID.RuID == 0xFF)
   \   000001BC   AA78               LDRB     R2,[R5, #+2]
   \   000001BE   FF2A               CMP      R2,#+255
   \   000001C0   07D1               BNE.N    ??Mea_DistCheckFunc_29
    539          					{
    540          						if(DtuStatus->MeaResult < DLY_EU_MIN)	DtuStatus->MeaResult = DLY_EU_MIN;
   \   000001C2   0729               CMP      R1,#+7
   \   000001C4   3CBF               ITT      CC 
   \   000001C6   0721               MOVCC    R1,#+7
   \   000001C8   A0F83510           STRHCC   R1,[R0, #+53]
    541          						MuStatus->MeaResult	= DtuStatus->MeaResult;
   \   000001CC   B0F83500           LDRH     R0,[R0, #+53]
   \   000001D0   0FE0               B.N      ??Mea_DistCheckFunc_30
    542          					}
    543          					else
    544          					{
    545          						if(DtuStatus->MeaResult < DLY_RU_MIN)	DtuStatus->MeaResult = DLY_RU_MIN;
   \                     ??Mea_DistCheckFunc_29:
   \   000001D2   0F29               CMP      R1,#+15
   \   000001D4   3CBF               ITT      CC 
   \   000001D6   0F21               MOVCC    R1,#+15
   \   000001D8   A0F83510           STRHCC   R1,[R0, #+53]
    546          						MuStatus->MeaResult	= DtuStatus->MeaResult + RuBuf[Dist_MuBr][Dist_HuBr][Dist_Ru]->DL_Delay_21G;
   \   000001DC   B0F83500           LDRH     R0,[R0, #+53]
   \   000001E0   ....               LDR.N    R1,??DataTable8_8
   \   000001E2   01EB8611           ADD      R1,R1,R6, LSL #+6
   \   000001E6   01EB8801           ADD      R1,R1,R8, LSL #+2
   \   000001EA   51F82910           LDR      R1,[R1, R9, LSL #+2]
   \   000001EE   098D               LDRH     R1,[R1, #+40]
   \   000001F0   0818               ADDS     R0,R1,R0
   \                     ??Mea_DistCheckFunc_30:
   \   000001F2   ........           LDR.W    R1,??Tar_DistCheckFunc_0
   \   000001F6   0968               LDR      R1,[R1, #+0]
   \   000001F8   A1F8AA03           STRH     R0,[R1, #+938]
    547          					}
    548          					DistStep = 4;
   \   000001FC   0420               MOVS     R0,#+4
   \   000001FE   E871               STRB     R0,[R5, #+7]
   \   00000200   02E0               B.N      ??Mea_DistCheckFunc_31
    549          				}
    550          				else	DistCnt++;
   \                     ??Mea_DistCheckFunc_28:
   \   00000202   287A               LDRB     R0,[R5, #+8]
   \   00000204   401C               ADDS     R0,R0,#+1
   \   00000206   2872               STRB     R0,[R5, #+8]
    551          			}
    552          			else	DistCnt++;
    553          			EndDtuCommand();
   \                     ??Mea_DistCheckFunc_31:
   \   00000208   ........           BL       EndDtuCommand
    554          			OSTimeDly(100L);
   \   0000020C   6420               MOVS     R0,#+100
   \   0000020E   ........           BL       OSTimeDly
    555          			
    556          			if(DistCnt>=5)	DistStep = 10;
   \   00000212   287A               LDRB     R0,[R5, #+8]
   \   00000214   0528               CMP      R0,#+5
   \   00000216   69D3               BCC.N    ??Mea_DistCheckFunc_8
   \   00000218   29E7               B.N      ??Mea_DistCheckFunc_11
    557          			break;
    558          
    559          		//-----------------------------------------------------------------------//
    560          		// Success
    561          		case 4:
    562          			DistCnt = 0;
   \                     ??Mea_DistCheckFunc_4:
   \   0000021A   0020               MOVS     R0,#+0
   \   0000021C   2872               STRB     R0,[R5, #+8]
    563          			MuStatus->MeaSts = 0;
   \   0000021E   ........           LDR.W    R0,??Tar_DistCheckFunc_0
   \   00000222   0068               LDR      R0,[R0, #+0]
   \   00000224   00F2AA30           ADDW     R0,R0,#+938
   \   00000228   0021               MOVS     R1,#+0
   \   0000022A   C170               STRB     R1,[R0, #+3]
    564          			
    565          			DistStep = 20;
   \   0000022C   1420               MOVS     R0,#+20
   \   0000022E   1CE7               B.N      ??Mea_DistCheckFunc_12
   \                     ??Mea_DistCheckFunc_5:
   \   00000230   ........           LDR.W    R0,??Tar_DistCheckFunc_0
   \   00000234   0068               LDR      R0,[R0, #+0]
   \   00000236   0021               MOVS     R1,#+0
   \   00000238   A0F8AA13           STRH     R1,[R0, #+938]
    566          			break;
    567          
    568          		//-----------------------------------------------------------------------//
    569          		// Fail...
    570          		case 10:
    571          			MuStatus->MeaResult = 0;
    572          
    573          			DistCnt = 0;
   \   0000023C   2972               STRB     R1,[R5, #+8]
    574          			MuStatus->MeaSts = 0;
   \   0000023E   00F2AA30           ADDW     R0,R0,#+938
   \   00000242   C170               STRB     R1,[R0, #+3]
    575          			
    576          			DistStep = 20;
   \   00000244   1420               MOVS     R0,#+20
   \   00000246   10E7               B.N      ??Mea_DistCheckFunc_12
    577          			break;
    578          
    579          		//=======================================================================//
    580          		// Loopback Control : OFF
    581          		case 20:
    582          			GetHuCommand();
   \                     ??Mea_DistCheckFunc_6:
   \   00000248   ........           BL       GetHuCommand
    583          			
    584          			if((Dist_MuBr==0)||(Dist_MuBr==1))		nPtr = (__ProtocolPtr *)Hu_Ser2Ser;
   \   0000024C   0EB1               CBZ.N    R6,??Mea_DistCheckFunc_32
   \   0000024E   012E               CMP      R6,#+1
   \   00000250   01D1               BNE.N    ??Mea_DistCheckFunc_33
   \                     ??Mea_DistCheckFunc_32:
   \   00000252   EC69               LDR      R4,[R5, #+28]
   \   00000254   10E0               B.N      ??Mea_DistCheckFunc_34
    585          			else if((Dist_MuBr==2)||(Dist_MuBr==3))	nPtr = (__ProtocolPtr *)Hu_Ser3Ser;
   \                     ??Mea_DistCheckFunc_33:
   \   00000256   022E               CMP      R6,#+2
   \   00000258   01D0               BEQ.N    ??Mea_DistCheckFunc_35
   \   0000025A   032E               CMP      R6,#+3
   \   0000025C   01D1               BNE.N    ??Mea_DistCheckFunc_36
   \                     ??Mea_DistCheckFunc_35:
   \   0000025E   2C6A               LDR      R4,[R5, #+32]
   \   00000260   0AE0               B.N      ??Mea_DistCheckFunc_34
    586          			else if((Dist_MuBr==4)||(Dist_MuBr==5))	nPtr = (__ProtocolPtr *)Hu_Ser5Ser;
   \                     ??Mea_DistCheckFunc_36:
   \   00000262   042E               CMP      R6,#+4
   \   00000264   01D0               BEQ.N    ??Mea_DistCheckFunc_37
   \   00000266   052E               CMP      R6,#+5
   \   00000268   01D1               BNE.N    ??Mea_DistCheckFunc_38
   \                     ??Mea_DistCheckFunc_37:
   \   0000026A   6C6A               LDR      R4,[R5, #+36]
   \   0000026C   04E0               B.N      ??Mea_DistCheckFunc_34
    587          			else if((Dist_MuBr==6)||(Dist_MuBr==7))	nPtr = (__ProtocolPtr *)Hu_Ser6Ser;
   \                     ??Mea_DistCheckFunc_38:
   \   0000026E   062E               CMP      R6,#+6
   \   00000270   01D0               BEQ.N    ??Mea_DistCheckFunc_39
   \   00000272   072E               CMP      R6,#+7
   \   00000274   00D1               BNE.N    ??Mea_DistCheckFunc_34
   \                     ??Mea_DistCheckFunc_39:
   \   00000276   AC6A               LDR      R4,[R5, #+40]
   \                     ??Mea_DistCheckFunc_34:
   \   00000278   2868               LDR      R0,[R5, #+0]
   \   0000027A   0090               STR      R0,[SP, #+0]
    588          
    589          			LoopBackCtrlFunc(Path, DistTarID, nPtr, _OFF);
   \   0000027C   0023               MOVS     R3,#+0
   \   0000027E   2246               MOV      R2,R4
   \   00000280   0146               MOV      R1,R0
   \   00000282   3846               MOV      R0,R7
   \   00000284   ........           BL       LoopBackCtrlFunc
    590          
    591          			if(ProtocolCheck(nPtr, (Time1Sec*2L)))
   \   00000288   4FF4FA61           MOV      R1,#+2000
   \   0000028C   2046               MOV      R0,R4
   \   0000028E   ........           BL       ProtocolCheck
   \   00000292   08B3               CBZ.N    R0,??Mea_DistCheckFunc_40
    592          			{
    593          				HuProtocolComCheck(nPtr, 0);
    594          
    595          				if(Path == HU_PATH)
   \   00000294   012F               CMP      R7,#+1
   \   00000296   14D1               BNE.N    ??Mea_DistCheckFunc_41
    596          				{
    597          					if(HuStatus[Dist_MuBr]->LoopBack == _OFF)
   \   00000298   ....               LDR.N    R0,??DataTable8_7
   \   0000029A   50F82600           LDR      R0,[R0, R6, LSL #+2]
   \   0000029E   90F80703           LDRB     R0,[R0, #+775]
   \   000002A2   C8B9               CBNZ.N   R0,??Mea_DistCheckFunc_40
    598          					{
    599          						DistCnt = 0;
   \                     ??Mea_DistCheckFunc_42:
   \   000002A4   0020               MOVS     R0,#+0
   \   000002A6   2872               STRB     R0,[R5, #+8]
    600          						DistStep = 21;
   \   000002A8   1520               MOVS     R0,#+21
   \   000002AA   E871               STRB     R0,[R5, #+7]
    601          					}
    602          					else	DistCnt++;
    603          				}
    604          				else
    605          				{
    606          					if(RuBuf[Dist_MuBr][Dist_HuBr][Dist_Ru]->LoopBack == _OFF)
    607          					{
    608          						DistCnt = 0;
    609          						DistStep = 21;
    610          					}
    611          					else	DistCnt++;
    612          				}
    613          			}
    614          			else	DistCnt++;
    615          
    616          			EndHuCommand();
   \                     ??Mea_DistCheckFunc_43:
   \   000002AC   0120               MOVS     R0,#+1
   \   000002AE   2871               STRB     R0,[R5, #+4]
    617          			
    618          			if(DistCnt>=3)
   \   000002B0   287A               LDRB     R0,[R5, #+8]
   \   000002B2   0328               CMP      R0,#+3
   \   000002B4   03D3               BCC.N    ??Mea_DistCheckFunc_44
    619          			{
    620          				DistCnt = 0;
   \   000002B6   0020               MOVS     R0,#+0
   \   000002B8   2872               STRB     R0,[R5, #+8]
    621          				DistStep = 21;
   \   000002BA   1520               MOVS     R0,#+21
   \   000002BC   E871               STRB     R0,[R5, #+7]
    622          			}
    623          
    624          			DistStep = 21;
   \                     ??Mea_DistCheckFunc_44:
   \   000002BE   1520               MOVS     R0,#+21
   \   000002C0   D3E6               B.N      ??Mea_DistCheckFunc_12
   \                     ??Mea_DistCheckFunc_41:
   \   000002C2   ....               LDR.N    R0,??DataTable8_8
   \   000002C4   00EB8610           ADD      R0,R0,R6, LSL #+6
   \   000002C8   00EB8800           ADD      R0,R0,R8, LSL #+2
   \   000002CC   50F82900           LDR      R0,[R0, R9, LSL #+2]
   \   000002D0   90F85401           LDRB     R0,[R0, #+340]
   \   000002D4   0028               CMP      R0,#+0
   \   000002D6   E5D0               BEQ.N    ??Mea_DistCheckFunc_42
   \                     ??Mea_DistCheckFunc_40:
   \   000002D8   287A               LDRB     R0,[R5, #+8]
   \   000002DA   401C               ADDS     R0,R0,#+1
   \   000002DC   2872               STRB     R0,[R5, #+8]
   \   000002DE   E5E7               B.N      ??Mea_DistCheckFunc_43
    625          #ifdef DIST_DEG
    626          		SerPtr->printf("\n Step20 -> goto %d\n", DistStep);
    627          #endif
    628          			break;
    629          
    630          		//-----------------------------------------------------------------------//
    631          		// DTU Control : OFF
    632          		case 21:
    633          			DtuLoopBackControl(_OFF, 0);
   \                     ??Mea_DistCheckFunc_7:
   \   000002E0   0021               MOVS     R1,#+0
   \   000002E2   0020               MOVS     R0,#+0
   \   000002E4   ........           BL       DtuLoopBackControl
    634          			
    635          			DistStep = 0;
   \   000002E8   0020               MOVS     R0,#+0
    636          			DistFlag = _OFF;
   \   000002EA   E880               STRH     R0,[R5, #+6]
    637          			break;
    638          	}
    639          }
   \                     ??Mea_DistCheckFunc_8:
   \   000002EC   ....               B.N      ?Subroutine1

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1:
   \   00000000   05B0               ADD      SP,SP,#+20
   \   00000002   BDE8F083           POP      {R4-R9,PC}       ;; return
    640          

   \                                 In section .text, align 4, keep-with-next
    641          void Tar_DistCheckFunc(void)
    642          {
   \                     Tar_DistCheckFunc:
   \   00000000   2DE9F043           PUSH     {R4-R9,LR}
   \   00000004   85B0               SUB      SP,SP,#+20
    643          	INT8U	Dist_MuBr = 0;
    644          	INT8U	Dist_HuBr = 0;
    645          	INT8U	Dist_Ru = 0;
    646          	INT8U	Path;
    647          	
    648          	__ProtocolPtr *nPtr;
    649          	
    650          	Dist_MuBr = DistTarID.HuID;
   \   00000006   ........           LDR.W    R4,??DataTable11
   \   0000000A   6578               LDRB     R5,[R4, #+1]
   \   0000000C   2068               LDR      R0,[R4, #+0]
   \   0000000E   0090               STR      R0,[SP, #+0]
    651          	Path = ID_Check(DistTarID);
   \   00000010   ........           BL       ID_Check
   \   00000014   0646               MOV      R6,R0
    652          	Dist_HuBr = (DistTarID.RuID>>4)&0x0F;
   \   00000016   A078               LDRB     R0,[R4, #+2]
   \   00000018   4FEA1018           LSR      R8,R0,#+4
    653          	Dist_Ru = DistTarID.RuID&0x0F;
   \   0000001C   10F00F09           ANDS     R9,R0,#0xF
    654          	if(Dist_Ru>0)	Dist_Ru = 0;
   \   00000020   18BF               IT       NE 
   \   00000022   4FF00009           MOVNE    R9,#+0
    655          	
    656          	switch(DistStep)
   \   00000026   E179               LDRB     R1,[R4, #+7]
   \   00000028   D1B1               CBZ.N    R1,??Tar_DistCheckFunc_2
   \   0000002A   0129               CMP      R1,#+1
   \   0000002C   5BD0               BEQ.N    ??Tar_DistCheckFunc_3
   \   0000002E   0229               CMP      R1,#+2
   \   00000030   00F0A680           BEQ.W    ??Tar_DistCheckFunc_4
   \   00000034   0329               CMP      R1,#+3
   \   00000036   00F0C280           BEQ.W    ??Tar_DistCheckFunc_5
   \   0000003A   0429               CMP      R1,#+4
   \   0000003C   00F01A81           BEQ.W    ??Tar_DistCheckFunc_6
   \   00000040   0529               CMP      R1,#+5
   \   00000042   00F02281           BEQ.W    ??Tar_DistCheckFunc_7
   \   00000046   0A29               CMP      R1,#+10
   \   00000048   00F08981           BEQ.W    ??Tar_DistCheckFunc_8
   \   0000004C   1429               CMP      R1,#+20
   \   0000004E   00F0A981           BEQ.W    ??Tar_DistCheckFunc_9
   \   00000052   1529               CMP      R1,#+21
   \   00000054   00F0F681           BEQ.W    ??Tar_DistCheckFunc_10
   \   00000058   1E29               CMP      R1,#+30
   \   0000005A   00F0F981           BEQ.W    ??Tar_DistCheckFunc_11
   \   0000005E   16E2               B.N      ??Tar_DistCheckFunc_12
    657          	{
    658          		//=======================================================================//
    659          		// Delay Measure
    660          		//=======================================================================//
    661          		
    662          		// ID, Intstall, Link Fail Check
    663          		case 0:
    664          			DistCnt = 0;
   \                     ??Tar_DistCheckFunc_2:
   \   00000060   0020               MOVS     R0,#+0
   \   00000062   2072               STRB     R0,[R4, #+8]
    665          			
    666          			if(Path == HU_PATH)
   \   00000064   012E               CMP      R6,#+1
   \   00000066   16D1               BNE.N    ??Tar_DistCheckFunc_13
    667          			{
    668          				if((SysInfo->Hu_Install[Dist_MuBr] == SYS_ALARM)
    669          					||(SysInfo->Hu_Install[Dist_MuBr] == SYS_NORMAL))
   \   00000068   ........           LDR.W    R0,??Total_DistCheckFunc_0
   \   0000006C   0068               LDR      R0,[R0, #+0]
   \   0000006E   2818               ADDS     R0,R5,R0
   \   00000070   4178               LDRB     R1,[R0, #+1]
   \   00000072   0229               CMP      R1,#+2
   \   00000074   01D0               BEQ.N    ??Tar_DistCheckFunc_14
   \   00000076   0129               CMP      R1,#+1
   \   00000078   01D1               BNE.N    ??Tar_DistCheckFunc_15
    670          						DistStep = 1;
   \                     ??Tar_DistCheckFunc_14:
   \   0000007A   0120               MOVS     R0,#+1
   \   0000007C   00E0               B.N      ??Tar_DistCheckFunc_16
    671          				else	DistStep = 10;	// Not Insrt or Link Fail
   \                     ??Tar_DistCheckFunc_15:
   \   0000007E   0A20               MOVS     R0,#+10
   \                     ??Tar_DistCheckFunc_16:
   \   00000080   E071               STRB     R0,[R4, #+7]
    672          
    673          				DelaySts->DelayVal[Dist_MuBr].Hu_Delay = 0xFFFF;
   \   00000082   05EB0510           ADD      R0,R5,R5, LSL #+4
   \   00000086   4000               LSLS     R0,R0,#+1
   \   00000088   ........           LDR.W    R1,??DataTable11_1
   \   0000008C   0968               LDR      R1,[R1, #+0]
   \   0000008E   4FF6FF72           MOVW     R2,#+65535
   \   00000092   4252               STRH     R2,[R0, R1]
   \   00000094   FBE1               B.N      ??Tar_DistCheckFunc_12
    674          #ifdef DIST_DEG
    675          	SerPtr->printf("\n HU Step0 -> goto %d\n", DistStep);
    676          #endif
    677          			}
    678          			else if(Path == RU_PATH)
   \                     ??Tar_DistCheckFunc_13:
   \   00000096   022E               CMP      R6,#+2
   \   00000098   22D1               BNE.N    ??Tar_DistCheckFunc_17
   \   0000009A   ........           LDR.W    R0,??Total_DistCheckFunc_0
   \   0000009E   0068               LDR      R0,[R0, #+0]
   \   000000A0   00EB8510           ADD      R0,R0,R5, LSL #+6
   \   000000A4   00EB8800           ADD      R0,R0,R8, LSL #+2
   \   000000A8   4844               ADD      R0,R9,R0
   \   000000AA   417A               LDRB     R1,[R0, #+9]
   \   000000AC   0229               CMP      R1,#+2
   \   000000AE   01D0               BEQ.N    ??Tar_DistCheckFunc_18
   \   000000B0   0129               CMP      R1,#+1
   \   000000B2   01D1               BNE.N    ??Tar_DistCheckFunc_19
    679          			{
    680          				if((SysInfo->Hu_Ru[Dist_MuBr].Ru_Install[Dist_HuBr][Dist_Ru] == SYS_ALARM)
    681          					||(SysInfo->Hu_Ru[Dist_MuBr].Ru_Install[Dist_HuBr][Dist_Ru] == SYS_NORMAL))
    682          						DistStep = 1;
   \                     ??Tar_DistCheckFunc_18:
   \   000000B4   0120               MOVS     R0,#+1
   \   000000B6   00E0               B.N      ??Tar_DistCheckFunc_20
    683          				else	DistStep = 10;	// Not Insrt or Link Fail
   \                     ??Tar_DistCheckFunc_19:
   \   000000B8   0A20               MOVS     R0,#+10
   \                     ??Tar_DistCheckFunc_20:
   \   000000BA   E071               STRB     R0,[R4, #+7]
    684          
    685          				DelaySts->DelayVal[Dist_MuBr].Ru_Delay[Dist_HuBr] = 0xFFFF;
   \   000000BC   05EB0510           ADD      R0,R5,R5, LSL #+4
   \   000000C0   ........           LDR.W    R1,??DataTable11_1
   \   000000C4   0968               LDR      R1,[R1, #+0]
   \   000000C6   01EB4000           ADD      R0,R1,R0, LSL #+1
   \   000000CA   00EB4800           ADD      R0,R0,R8, LSL #+1
   \   000000CE   4FF6FF71           MOVW     R1,#+65535
   \   000000D2   4180               STRH     R1,[R0, #+2]
    686          				DelayAlarmCheck(Dist_MuBr, Dist_HuBr, _Normal);
   \   000000D4   0022               MOVS     R2,#+0
   \   000000D6   4146               MOV      R1,R8
   \   000000D8   2846               MOV      R0,R5
   \   000000DA   ........           BL       DelayAlarmCheck
   \   000000DE   D6E1               B.N      ??Tar_DistCheckFunc_12
    687          #ifdef DIST_DEG
    688          	SerPtr->printf("\n HU Step0 -> goto %d\n", DistStep);
    689          #endif
    690          			}
    691          			else		DistStep = 10;
   \                     ??Tar_DistCheckFunc_17:
   \   000000E0   0A20               MOVS     R0,#+10
   \                     ??Tar_DistCheckFunc_21:
   \   000000E2   E071               STRB     R0,[R4, #+7]
   \   000000E4   D3E1               B.N      ??Tar_DistCheckFunc_12
    692          			break;
    693          
    694          		//-----------------------------------------------------------------------//
    695          		// HU/RU Loop Back & Check
    696          		case 1:
    697          			GetHuCommand();
   \                     ??Tar_DistCheckFunc_3:
   \   000000E6   ........           BL       GetHuCommand
    698          			
    699          			if((Dist_MuBr==0)||(Dist_MuBr==1))		nPtr = (__ProtocolPtr *)Hu_Ser2Ser;
   \   000000EA   0DB1               CBZ.N    R5,??Tar_DistCheckFunc_22
   \   000000EC   012D               CMP      R5,#+1
   \   000000EE   01D1               BNE.N    ??Tar_DistCheckFunc_23
   \                     ??Tar_DistCheckFunc_22:
   \   000000F0   E769               LDR      R7,[R4, #+28]
   \   000000F2   10E0               B.N      ??Tar_DistCheckFunc_24
    700          			else if((Dist_MuBr==2)||(Dist_MuBr==3))	nPtr = (__ProtocolPtr *)Hu_Ser3Ser;
   \                     ??Tar_DistCheckFunc_23:
   \   000000F4   022D               CMP      R5,#+2
   \   000000F6   01D0               BEQ.N    ??Tar_DistCheckFunc_25
   \   000000F8   032D               CMP      R5,#+3
   \   000000FA   01D1               BNE.N    ??Tar_DistCheckFunc_26
   \                     ??Tar_DistCheckFunc_25:
   \   000000FC   276A               LDR      R7,[R4, #+32]
   \   000000FE   0AE0               B.N      ??Tar_DistCheckFunc_24
    701          			else if((Dist_MuBr==4)||(Dist_MuBr==5))	nPtr = (__ProtocolPtr *)Hu_Ser5Ser;
   \                     ??Tar_DistCheckFunc_26:
   \   00000100   042D               CMP      R5,#+4
   \   00000102   01D0               BEQ.N    ??Tar_DistCheckFunc_27
   \   00000104   052D               CMP      R5,#+5
   \   00000106   01D1               BNE.N    ??Tar_DistCheckFunc_28
   \                     ??Tar_DistCheckFunc_27:
   \   00000108   676A               LDR      R7,[R4, #+36]
   \   0000010A   04E0               B.N      ??Tar_DistCheckFunc_24
    702          			else if((Dist_MuBr==6)||(Dist_MuBr==7))	nPtr = (__ProtocolPtr *)Hu_Ser6Ser;
   \                     ??Tar_DistCheckFunc_28:
   \   0000010C   062D               CMP      R5,#+6
   \   0000010E   01D0               BEQ.N    ??Tar_DistCheckFunc_29
   \   00000110   072D               CMP      R5,#+7
   \   00000112   00D1               BNE.N    ??Tar_DistCheckFunc_24
   \                     ??Tar_DistCheckFunc_29:
   \   00000114   A76A               LDR      R7,[R4, #+40]
   \                     ??Tar_DistCheckFunc_24:
   \   00000116   2068               LDR      R0,[R4, #+0]
   \   00000118   0090               STR      R0,[SP, #+0]
    703          
    704          			LoopBackCtrlFunc(Path, DistTarID, nPtr, _ON);
   \   0000011A   0123               MOVS     R3,#+1
   \   0000011C   3A46               MOV      R2,R7
   \   0000011E   0146               MOV      R1,R0
   \   00000120   3046               MOV      R0,R6
   \   00000122   ........           BL       LoopBackCtrlFunc
    705          
    706          			if(ProtocolCheck(nPtr, (Time1Sec*2L)))
   \   00000126   4FF4FA61           MOV      R1,#+2000
   \   0000012A   3846               MOV      R0,R7
   \   0000012C   ........           BL       ProtocolCheck
   \   00000130   10B3               CBZ.N    R0,??Tar_DistCheckFunc_30
    707          			{
    708          				HuProtocolComCheck(nPtr, 0);
    709          
    710          				if(Path == HU_PATH)
   \   00000132   012E               CMP      R6,#+1
   \   00000134   14D1               BNE.N    ??Tar_DistCheckFunc_31
    711          				{
    712          					if(HuStatus[Dist_MuBr]->LoopBack == _ON)
   \   00000136   ........           LDR.W    R0,??DataTable10_3
   \   0000013A   50F82500           LDR      R0,[R0, R5, LSL #+2]
   \   0000013E   90F80703           LDRB     R0,[R0, #+775]
   \   00000142   0128               CMP      R0,#+1
   \   00000144   18D1               BNE.N    ??Tar_DistCheckFunc_30
    713          					{
    714          						DistCnt = 0;
   \                     ??Tar_DistCheckFunc_32:
   \   00000146   0020               MOVS     R0,#+0
   \   00000148   2072               STRB     R0,[R4, #+8]
    715          						DistStep = 2;
   \   0000014A   0220               MOVS     R0,#+2
   \   0000014C   E071               STRB     R0,[R4, #+7]
    716          					}
    717          					else	DistCnt++;
    718          				}
    719          				else
    720          				{
    721          					if(RuBuf[Dist_MuBr][Dist_HuBr][Dist_Ru]->LoopBack == _ON)
    722          					{
    723          						DistCnt = 0;
    724          						DistStep = 2;
    725          					}
    726          					else	DistCnt++;
    727          				}
    728          			}
    729          			else	DistCnt++;
    730          
    731          			EndHuCommand();
   \                     ??Tar_DistCheckFunc_33:
   \   0000014E   0120               MOVS     R0,#+1
   \   00000150   2071               STRB     R0,[R4, #+4]
    732          			
    733          			if(DistCnt>=3)
   \   00000152   207A               LDRB     R0,[R4, #+8]
   \   00000154   0328               CMP      R0,#+3
   \   00000156   C0F09A81           BCC.W    ??Tar_DistCheckFunc_12
    734          			{
    735          				DistCnt = 0;
   \                     ??Tar_DistCheckFunc_34:
   \   0000015A   0020               MOVS     R0,#+0
   \   0000015C   2072               STRB     R0,[R4, #+8]
    736          				DistStep = 10;
   \   0000015E   BFE7               B.N      ??Tar_DistCheckFunc_17
    737          			}
   \                     ??Tar_DistCheckFunc_31:
   \   00000160   ........           LDR.W    R0,??DataTable12
   \   00000164   00EB8510           ADD      R0,R0,R5, LSL #+6
   \   00000168   00EB8800           ADD      R0,R0,R8, LSL #+2
   \   0000016C   50F82900           LDR      R0,[R0, R9, LSL #+2]
   \   00000170   90F85401           LDRB     R0,[R0, #+340]
   \   00000174   0128               CMP      R0,#+1
   \   00000176   E6D0               BEQ.N    ??Tar_DistCheckFunc_32
   \                     ??Tar_DistCheckFunc_30:
   \   00000178   207A               LDRB     R0,[R4, #+8]
   \   0000017A   401C               ADDS     R0,R0,#+1
   \   0000017C   2072               STRB     R0,[R4, #+8]
   \   0000017E   E6E7               B.N      ??Tar_DistCheckFunc_33
    738          #ifdef DIST_DEG
    739          	SerPtr->printf("\n Step1 -> goto %d\n", DistStep);
    740          #endif
    741          			break;
    742          
    743          		//-----------------------------------------------------------------------//
    744          		// DTU Control : On
    745          		case 2:
    746          			DtuLoopBackControl(_ON, Dist_MuBr);
   \                     ??Tar_DistCheckFunc_4:
   \   00000180   2946               MOV      R1,R5
   \   00000182   0120               MOVS     R0,#+1
   \   00000184   ........           BL       DtuLoopBackControl
    747          
    748          			if((DtuStatus->MeaLoop == _ON)&&(DtuStatus->MeaBranch == Dist_MuBr))
   \   00000188   ........           LDR.W    R0,??DataTable10
   \   0000018C   0068               LDR      R0,[R0, #+0]
   \   0000018E   90F83710           LDRB     R1,[R0, #+55]
   \   00000192   0129               CMP      R1,#+1
   \   00000194   0BD1               BNE.N    ??Tar_DistCheckFunc_35
   \   00000196   90F83900           LDRB     R0,[R0, #+57]
   \   0000019A   A842               CMP      R0,R5
   \   0000019C   07D1               BNE.N    ??Tar_DistCheckFunc_35
    749          			{
    750          				DistStep = 3;
   \   0000019E   0320               MOVS     R0,#+3
   \   000001A0   E071               STRB     R0,[R4, #+7]
    751          				DistCnt = 0;
   \   000001A2   0020               MOVS     R0,#+0
   \   000001A4   2072               STRB     R0,[R4, #+8]
    752          				OSTimeDly(100L);
   \   000001A6   6420               MOVS     R0,#+100
   \   000001A8   ........           BL       OSTimeDly
   \   000001AC   02E0               B.N      ??Tar_DistCheckFunc_36
    753          			}
    754          			else	DistCnt++;
   \                     ??Tar_DistCheckFunc_35:
   \   000001AE   207A               LDRB     R0,[R4, #+8]
   \   000001B0   401C               ADDS     R0,R0,#+1
   \   000001B2   2072               STRB     R0,[R4, #+8]
    755          
    756          			if(DistCnt>=3)
   \                     ??Tar_DistCheckFunc_36:
   \   000001B4   207A               LDRB     R0,[R4, #+8]
   \   000001B6   0328               CMP      R0,#+3
   \   000001B8   C0F06981           BCC.W    ??Tar_DistCheckFunc_12
   \   000001BC   CDE7               B.N      ??Tar_DistCheckFunc_34
    757          			{
    758          				DistCnt = 0;
    759          				DistStep = 10;
    760          			}
    761          #ifdef DIST_DEG
    762          	SerPtr->printf("\n Step2 -> goto %d\n", DistStep);
    763          #endif
    764          			break;
    765          
    766          		//-----------------------------------------------------------------------//
    767          		// DTU Status Check
    768          		case 3:
    769          			GetDtuCommand();
   \                     ??Tar_DistCheckFunc_5:
   \   000001BE   ........           BL       GetDtuCommand
    770          			
    771          			SioDataAckTx(MyID, DtuID, (INT8U*)NULL, 0, StatusRQST, DtuSer);
   \   000001C2   ........           LDR.W    R6,??DataTable10_1
   \   000001C6   03A8               ADD      R0,SP,#+12
   \   000001C8   ........           LDR.W    R1,??DataTable10_2
   \   000001CC   0322               MOVS     R2,#+3
   \   000001CE   ........           BL       __aeabi_memcpy
   \   000001D2   02A8               ADD      R0,SP,#+8
   \   000001D4   A549               LDR.N    R1,??Tar_DistCheckFunc_1
   \   000001D6   0322               MOVS     R2,#+3
   \   000001D8   ........           BL       __aeabi_memcpy
   \   000001DC   3068               LDR      R0,[R6, #+0]
   \   000001DE   0190               STR      R0,[SP, #+4]
   \   000001E0   2020               MOVS     R0,#+32
   \   000001E2   0090               STR      R0,[SP, #+0]
   \   000001E4   0023               MOVS     R3,#+0
   \   000001E6   0022               MOVS     R2,#+0
   \   000001E8   0399               LDR      R1,[SP, #+12]
   \   000001EA   0298               LDR      R0,[SP, #+8]
   \   000001EC   ........           BL       SioDataAckTx
    772          						
    773          			if(ProtocolCheck(DtuSer, (Time1Sec*2L)))
   \   000001F0   4FF4FA61           MOV      R1,#+2000
   \   000001F4   3068               LDR      R0,[R6, #+0]
   \   000001F6   ........           BL       ProtocolCheck
   \   000001FA   70B3               CBZ.N    R0,??Tar_DistCheckFunc_37
    774          			{
    775          				DtuProtocolComCheck(DtuSer);
   \   000001FC   3068               LDR      R0,[R6, #+0]
   \   000001FE   ........           BL       DtuProtocolComCheck
    776          
    777          				if(DtuStatus->MeaResult != 0)
   \   00000202   ........           LDR.W    R0,??DataTable10
   \   00000206   0068               LDR      R0,[R0, #+0]
   \   00000208   B0F83510           LDRH     R1,[R0, #+53]
   \   0000020C   29B3               CBZ.N    R1,??Tar_DistCheckFunc_37
    778          				{
    779          					if(DistTarID.RuID == 0xFF)
   \   0000020E   A278               LDRB     R2,[R4, #+2]
   \   00000210   FF2A               CMP      R2,#+255
   \   00000212   0ED1               BNE.N    ??Tar_DistCheckFunc_38
    780          					{
    781          						if(DtuStatus->MeaResult < DLY_EU_MIN)	DtuStatus->MeaResult = DLY_EU_MIN;
   \   00000214   0729               CMP      R1,#+7
   \   00000216   3CBF               ITT      CC 
   \   00000218   0721               MOVCC    R1,#+7
   \   0000021A   A0F83510           STRHCC   R1,[R0, #+53]
    782          						DelaySts->DelayVal[Dist_MuBr].Hu_Delay = DtuStatus->MeaResult;
   \   0000021E   05EB0511           ADD      R1,R5,R5, LSL #+4
   \   00000222   4900               LSLS     R1,R1,#+1
   \   00000224   ........           LDR.W    R2,??DataTable11_1
   \   00000228   1268               LDR      R2,[R2, #+0]
   \   0000022A   B0F83500           LDRH     R0,[R0, #+53]
   \   0000022E   8852               STRH     R0,[R1, R2]
   \   00000230   10E0               B.N      ??Tar_DistCheckFunc_39
    783          					}
    784          					else
    785          					{
    786          						if(DtuStatus->MeaResult < DLY_RU_MIN)	DtuStatus->MeaResult = DLY_RU_MIN;
   \                     ??Tar_DistCheckFunc_38:
   \   00000232   0F29               CMP      R1,#+15
   \   00000234   3CBF               ITT      CC 
   \   00000236   0F21               MOVCC    R1,#+15
   \   00000238   A0F83510           STRHCC   R1,[R0, #+53]
    787          						DelaySts->DelayVal[Dist_MuBr].Ru_Delay[Dist_HuBr] = DtuStatus->MeaResult;
   \   0000023C   05EB0511           ADD      R1,R5,R5, LSL #+4
   \   00000240   ........           LDR.W    R2,??DataTable11_1
   \   00000244   1268               LDR      R2,[R2, #+0]
   \   00000246   02EB4101           ADD      R1,R2,R1, LSL #+1
   \   0000024A   01EB4801           ADD      R1,R1,R8, LSL #+1
   \   0000024E   B0F83500           LDRH     R0,[R0, #+53]
   \   00000252   4880               STRH     R0,[R1, #+2]
    788          					}
    789          					DistStep = 4;
   \                     ??Tar_DistCheckFunc_39:
   \   00000254   0420               MOVS     R0,#+4
   \   00000256   E071               STRB     R0,[R4, #+7]
   \   00000258   02E0               B.N      ??Tar_DistCheckFunc_40
    790          				}
    791          				else	DistCnt++;
   \                     ??Tar_DistCheckFunc_37:
   \   0000025A   207A               LDRB     R0,[R4, #+8]
   \   0000025C   401C               ADDS     R0,R0,#+1
   \   0000025E   2072               STRB     R0,[R4, #+8]
    792          			}
    793          			else	DistCnt++;
    794          			EndDtuCommand();
   \                     ??Tar_DistCheckFunc_40:
   \   00000260   ........           BL       EndDtuCommand
    795          
    796          			OSTimeDly(100L);
   \   00000264   6420               MOVS     R0,#+100
   \   00000266   ........           BL       OSTimeDly
    797          			if(DistCnt>=7)	DistStep = 10;
   \   0000026A   207A               LDRB     R0,[R4, #+8]
   \   0000026C   0728               CMP      R0,#+7
   \   0000026E   C0F00E81           BCC.W    ??Tar_DistCheckFunc_12
   \   00000272   35E7               B.N      ??Tar_DistCheckFunc_17
    798          #ifdef DIST_DEG
    799          		SerPtr->printf("\n Step3 -> goto %d\n", DistStep);
    800          #endif
    801          			break;
    802          
    803          		//-----------------------------------------------------------------------//
    804          		// Success
    805          		case 4:
    806          			DistCnt = 0;
   \                     ??Tar_DistCheckFunc_6:
   \   00000274   0020               MOVS     R0,#+0
   \   00000276   2072               STRB     R0,[R4, #+8]
    807          			MuStatus->MeaSts = 0;
   \   00000278   7148               LDR.N    R0,??Tar_DistCheckFunc_0
   \   0000027A   0068               LDR      R0,[R0, #+0]
   \   0000027C   0021               MOVS     R1,#+0
   \   0000027E   80F8AD13           STRB     R1,[R0, #+941]
    808          			
    809          			DistStep = 5;
   \   00000282   0520               MOVS     R0,#+5
   \   00000284   E071               STRB     R0,[R4, #+7]
    810          			DistCnt = 0;
   \   00000286   2172               STRB     R1,[R4, #+8]
    811          #ifdef DIST_DEG
    812          		SerPtr->printf("\n Step4 -> goto %d\n", DistStep);
    813          #endif
    814          			break;
   \   00000288   01E1               B.N      ??Tar_DistCheckFunc_12
    815          
    816          		//=======================================================================//
    817          		// Delay Control
    818          		//=======================================================================//
    819          		case 5:
    820          			if(DistTarID.RuID == 0xFF)
   \                     ??Tar_DistCheckFunc_7:
   \   0000028A   FF28               CMP      R0,#+255
   \   0000028C   3CD1               BNE.N    ??Tar_DistCheckFunc_41
    821          			{
    822          				GetHuCommand();
   \   0000028E   ........           BL       GetHuCommand
    823          				
    824          				if((Dist_MuBr==0)||(Dist_MuBr==1))		nPtr = (__ProtocolPtr *)Hu_Ser2Ser;
   \   00000292   0DB1               CBZ.N    R5,??Tar_DistCheckFunc_42
   \   00000294   012D               CMP      R5,#+1
   \   00000296   01D1               BNE.N    ??Tar_DistCheckFunc_43
   \                     ??Tar_DistCheckFunc_42:
   \   00000298   E769               LDR      R7,[R4, #+28]
   \   0000029A   10E0               B.N      ??Tar_DistCheckFunc_44
    825          				else if((Dist_MuBr==2)||(Dist_MuBr==3)) nPtr = (__ProtocolPtr *)Hu_Ser3Ser;
   \                     ??Tar_DistCheckFunc_43:
   \   0000029C   022D               CMP      R5,#+2
   \   0000029E   01D0               BEQ.N    ??Tar_DistCheckFunc_45
   \   000002A0   032D               CMP      R5,#+3
   \   000002A2   01D1               BNE.N    ??Tar_DistCheckFunc_46
   \                     ??Tar_DistCheckFunc_45:
   \   000002A4   276A               LDR      R7,[R4, #+32]
   \   000002A6   0AE0               B.N      ??Tar_DistCheckFunc_44
    826          				else if((Dist_MuBr==4)||(Dist_MuBr==5)) nPtr = (__ProtocolPtr *)Hu_Ser5Ser;
   \                     ??Tar_DistCheckFunc_46:
   \   000002A8   042D               CMP      R5,#+4
   \   000002AA   01D0               BEQ.N    ??Tar_DistCheckFunc_47
   \   000002AC   052D               CMP      R5,#+5
   \   000002AE   01D1               BNE.N    ??Tar_DistCheckFunc_48
   \                     ??Tar_DistCheckFunc_47:
   \   000002B0   676A               LDR      R7,[R4, #+36]
   \   000002B2   04E0               B.N      ??Tar_DistCheckFunc_44
    827          				else if((Dist_MuBr==6)||(Dist_MuBr==7)) nPtr = (__ProtocolPtr *)Hu_Ser6Ser;
   \                     ??Tar_DistCheckFunc_48:
   \   000002B4   062D               CMP      R5,#+6
   \   000002B6   01D0               BEQ.N    ??Tar_DistCheckFunc_49
   \   000002B8   072D               CMP      R5,#+7
   \   000002BA   00D1               BNE.N    ??Tar_DistCheckFunc_44
   \                     ??Tar_DistCheckFunc_49:
   \   000002BC   A76A               LDR      R7,[R4, #+40]
   \                     ??Tar_DistCheckFunc_44:
   \   000002BE   2068               LDR      R0,[R4, #+0]
   \   000002C0   0090               STR      R0,[SP, #+0]
    828          
    829          				LoopBackCtrlFunc(Path, DistTarID, nPtr, _OFF);
   \   000002C2   0023               MOVS     R3,#+0
   \   000002C4   3A46               MOV      R2,R7
   \   000002C6   0146               MOV      R1,R0
   \   000002C8   3046               MOV      R0,R6
   \   000002CA   ........           BL       LoopBackCtrlFunc
    830          
    831          				if(ProtocolCheck(nPtr, (Time1Sec*2L)))
   \   000002CE   4FF4FA61           MOV      R1,#+2000
   \   000002D2   3846               MOV      R0,R7
   \   000002D4   ........           BL       ProtocolCheck
   \   000002D8   30B1               CBZ.N    R0,??Tar_DistCheckFunc_50
    832          				{
    833          					HuProtocolComCheck(nPtr, 0);
    834          
    835          					if(nPtr->Recv->Command == ControlRSPS)	DistStep = 20;
   \   000002DA   786A               LDR      R0,[R7, #+36]
   \   000002DC   807A               LDRB     R0,[R0, #+10]
   \   000002DE   A128               CMP      R0,#+161
   \   000002E0   02D1               BNE.N    ??Tar_DistCheckFunc_50
   \                     ??Tar_DistCheckFunc_51:
   \   000002E2   1420               MOVS     R0,#+20
   \   000002E4   E071               STRB     R0,[R4, #+7]
   \   000002E6   02E0               B.N      ??Tar_DistCheckFunc_52
    836          					else									DistCnt++;
    837          				}
    838          				else	DistCnt++;
   \                     ??Tar_DistCheckFunc_50:
   \   000002E8   207A               LDRB     R0,[R4, #+8]
   \   000002EA   401C               ADDS     R0,R0,#+1
   \   000002EC   2072               STRB     R0,[R4, #+8]
    839          				EndHuCommand();
   \                     ??Tar_DistCheckFunc_52:
   \   000002EE   0120               MOVS     R0,#+1
   \   000002F0   2071               STRB     R0,[R4, #+4]
    840          			}
    841          			else
    842          			{
    843          				GetHuCommand();
    844          				
    845          				if((Dist_MuBr==0)||(Dist_MuBr==1))		nPtr = (__ProtocolPtr *)Hu_Ser2Ser;
    846          				else if((Dist_MuBr==2)||(Dist_MuBr==3))	nPtr = (__ProtocolPtr *)Hu_Ser3Ser;
    847          				else if((Dist_MuBr==4)||(Dist_MuBr==5))	nPtr = (__ProtocolPtr *)Hu_Ser5Ser;
    848          				else if((Dist_MuBr==6)||(Dist_MuBr==7))	nPtr = (__ProtocolPtr *)Hu_Ser6Ser;
    849          
    850          				DelayCtrlFunc(Path, DistTarID, nPtr);
    851          
    852          				if(ProtocolCheck(nPtr, (Time1Sec*2L)))
    853          				{
    854          					HuProtocolComCheck(nPtr, 0);
    855          
    856          					if(nPtr->Recv->Command == ControlRSPS)	DistStep = 20;
    857          					else									DistCnt++;
    858          				}
    859          				else	DistCnt++;
    860          
    861          				EndHuCommand();
    862          			}
    863          
    864          			if(DistCnt>=3)
   \   000002F2   207A               LDRB     R0,[R4, #+8]
   \   000002F4   0328               CMP      R0,#+3
   \   000002F6   C0F0CA80           BCC.W    ??Tar_DistCheckFunc_12
    865          			{
    866          				DelayAlarmCheck(Dist_MuBr, Dist_HuBr, _Alarm);
   \   000002FA   0122               MOVS     R2,#+1
   \   000002FC   4146               MOV      R1,R8
   \   000002FE   2846               MOV      R0,R5
   \   00000300   ........           BL       DelayAlarmCheck
    867          				DistStep = 20;
   \   00000304   1420               MOVS     R0,#+20
   \   00000306   ECE6               B.N      ??Tar_DistCheckFunc_21
    868          			}
   \                     ??Tar_DistCheckFunc_41:
   \   00000308   ........           BL       GetHuCommand
   \   0000030C   0DB1               CBZ.N    R5,??Tar_DistCheckFunc_53
   \   0000030E   012D               CMP      R5,#+1
   \   00000310   01D1               BNE.N    ??Tar_DistCheckFunc_54
   \                     ??Tar_DistCheckFunc_53:
   \   00000312   E769               LDR      R7,[R4, #+28]
   \   00000314   10E0               B.N      ??Tar_DistCheckFunc_55
   \                     ??Tar_DistCheckFunc_54:
   \   00000316   022D               CMP      R5,#+2
   \   00000318   01D0               BEQ.N    ??Tar_DistCheckFunc_56
   \   0000031A   032D               CMP      R5,#+3
   \   0000031C   01D1               BNE.N    ??Tar_DistCheckFunc_57
   \                     ??Tar_DistCheckFunc_56:
   \   0000031E   276A               LDR      R7,[R4, #+32]
   \   00000320   0AE0               B.N      ??Tar_DistCheckFunc_55
   \                     ??Tar_DistCheckFunc_57:
   \   00000322   042D               CMP      R5,#+4
   \   00000324   01D0               BEQ.N    ??Tar_DistCheckFunc_58
   \   00000326   052D               CMP      R5,#+5
   \   00000328   01D1               BNE.N    ??Tar_DistCheckFunc_59
   \                     ??Tar_DistCheckFunc_58:
   \   0000032A   676A               LDR      R7,[R4, #+36]
   \   0000032C   04E0               B.N      ??Tar_DistCheckFunc_55
   \                     ??Tar_DistCheckFunc_59:
   \   0000032E   062D               CMP      R5,#+6
   \   00000330   01D0               BEQ.N    ??Tar_DistCheckFunc_60
   \   00000332   072D               CMP      R5,#+7
   \   00000334   00D1               BNE.N    ??Tar_DistCheckFunc_55
   \                     ??Tar_DistCheckFunc_60:
   \   00000336   A76A               LDR      R7,[R4, #+40]
   \                     ??Tar_DistCheckFunc_55:
   \   00000338   2068               LDR      R0,[R4, #+0]
   \   0000033A   0090               STR      R0,[SP, #+0]
   \   0000033C   3A46               MOV      R2,R7
   \   0000033E   0146               MOV      R1,R0
   \   00000340   3046               MOV      R0,R6
   \   00000342   ........           BL       DelayCtrlFunc
   \   00000346   4FF4FA61           MOV      R1,#+2000
   \   0000034A   3846               MOV      R0,R7
   \   0000034C   ........           BL       ProtocolCheck
   \   00000350   0028               CMP      R0,#+0
   \   00000352   C9D0               BEQ.N    ??Tar_DistCheckFunc_50
   \   00000354   786A               LDR      R0,[R7, #+36]
   \   00000356   807A               LDRB     R0,[R0, #+10]
   \   00000358   A128               CMP      R0,#+161
   \   0000035A   C5D1               BNE.N    ??Tar_DistCheckFunc_50
   \   0000035C   C1E7               B.N      ??Tar_DistCheckFunc_51
    869          #ifdef DIST_DEG
    870          		SerPtr->printf("\n Step5 -> goto %d\n", DistStep);
    871          #endif
    872          			break;
    873          
    874          		//=======================================================================//
    875          		// Fail...
    876          		case 10:
    877          			DistCnt = 0;
   \                     ??Tar_DistCheckFunc_8:
   \   0000035E   0020               MOVS     R0,#+0
   \   00000360   2072               STRB     R0,[R4, #+8]
    878          			MuStatus->MeaSts = 0;
   \   00000362   3748               LDR.N    R0,??Tar_DistCheckFunc_0
   \   00000364   0068               LDR      R0,[R0, #+0]
   \   00000366   0021               MOVS     R1,#+0
   \   00000368   80F8AD13           STRB     R1,[R0, #+941]
    879          			if(Path == HU_PATH)			DelaySts->DelayVal[Dist_MuBr].Hu_Delay = 0xFFFF;
   \   0000036C   012E               CMP      R6,#+1
   \   0000036E   09D1               BNE.N    ??Tar_DistCheckFunc_61
   \   00000370   05EB0510           ADD      R0,R5,R5, LSL #+4
   \   00000374   4000               LSLS     R0,R0,#+1
   \   00000376   ........           LDR.W    R1,??DataTable11_1
   \   0000037A   0968               LDR      R1,[R1, #+0]
   \   0000037C   4FF6FF72           MOVW     R2,#+65535
   \   00000380   4252               STRH     R2,[R0, R1]
   \   00000382   0DE0               B.N      ??Tar_DistCheckFunc_62
    880          			else if(Path == RU_PATH)	DelaySts->DelayVal[Dist_MuBr].Ru_Delay[Dist_HuBr] = 0xFFFF;
   \                     ??Tar_DistCheckFunc_61:
   \   00000384   022E               CMP      R6,#+2
   \   00000386   0BD1               BNE.N    ??Tar_DistCheckFunc_62
   \   00000388   05EB0510           ADD      R0,R5,R5, LSL #+4
   \   0000038C   ........           LDR.W    R1,??DataTable11_1
   \   00000390   0968               LDR      R1,[R1, #+0]
   \   00000392   01EB4000           ADD      R0,R1,R0, LSL #+1
   \   00000396   00EB4800           ADD      R0,R0,R8, LSL #+1
   \   0000039A   4FF6FF71           MOVW     R1,#+65535
   \   0000039E   4180               STRH     R1,[R0, #+2]
    881          			
    882          			DistStep = 20;
   \                     ??Tar_DistCheckFunc_62:
   \   000003A0   1420               MOVS     R0,#+20
   \   000003A2   9EE6               B.N      ??Tar_DistCheckFunc_21
    883          #ifdef DIST_DEG
    884          		SerPtr->printf("\n Step10 -> goto %d\n", DistStep);
    885          #endif
    886          			break;
    887          
    888          		//=======================================================================//
    889          		// Loopback Control : OFF
    890          		case 20:
    891          			GetHuCommand();
   \                     ??Tar_DistCheckFunc_9:
   \   000003A4   ........           BL       GetHuCommand
    892          			
    893          			if((Dist_MuBr==0)||(Dist_MuBr==1))		nPtr = (__ProtocolPtr *)Hu_Ser2Ser;
   \   000003A8   0DB1               CBZ.N    R5,??Tar_DistCheckFunc_63
   \   000003AA   012D               CMP      R5,#+1
   \   000003AC   01D1               BNE.N    ??Tar_DistCheckFunc_64
   \                     ??Tar_DistCheckFunc_63:
   \   000003AE   E769               LDR      R7,[R4, #+28]
   \   000003B0   10E0               B.N      ??Tar_DistCheckFunc_65
    894          			else if((Dist_MuBr==2)||(Dist_MuBr==3))	nPtr = (__ProtocolPtr *)Hu_Ser3Ser;
   \                     ??Tar_DistCheckFunc_64:
   \   000003B2   022D               CMP      R5,#+2
   \   000003B4   01D0               BEQ.N    ??Tar_DistCheckFunc_66
   \   000003B6   032D               CMP      R5,#+3
   \   000003B8   01D1               BNE.N    ??Tar_DistCheckFunc_67
   \                     ??Tar_DistCheckFunc_66:
   \   000003BA   276A               LDR      R7,[R4, #+32]
   \   000003BC   0AE0               B.N      ??Tar_DistCheckFunc_65
    895          			else if((Dist_MuBr==4)||(Dist_MuBr==5))	nPtr = (__ProtocolPtr *)Hu_Ser5Ser;
   \                     ??Tar_DistCheckFunc_67:
   \   000003BE   042D               CMP      R5,#+4
   \   000003C0   01D0               BEQ.N    ??Tar_DistCheckFunc_68
   \   000003C2   052D               CMP      R5,#+5
   \   000003C4   01D1               BNE.N    ??Tar_DistCheckFunc_69
   \                     ??Tar_DistCheckFunc_68:
   \   000003C6   676A               LDR      R7,[R4, #+36]
   \   000003C8   04E0               B.N      ??Tar_DistCheckFunc_65
    896          			else if((Dist_MuBr==6)||(Dist_MuBr==7))	nPtr = (__ProtocolPtr *)Hu_Ser6Ser;
   \                     ??Tar_DistCheckFunc_69:
   \   000003CA   062D               CMP      R5,#+6
   \   000003CC   01D0               BEQ.N    ??Tar_DistCheckFunc_70
   \   000003CE   072D               CMP      R5,#+7
   \   000003D0   00D1               BNE.N    ??Tar_DistCheckFunc_65
   \                     ??Tar_DistCheckFunc_70:
   \   000003D2   A76A               LDR      R7,[R4, #+40]
   \                     ??Tar_DistCheckFunc_65:
   \   000003D4   2068               LDR      R0,[R4, #+0]
   \   000003D6   0090               STR      R0,[SP, #+0]
    897          
    898          			LoopBackCtrlFunc(Path, DistTarID, nPtr, _OFF);
   \   000003D8   0023               MOVS     R3,#+0
   \   000003DA   3A46               MOV      R2,R7
   \   000003DC   0146               MOV      R1,R0
   \   000003DE   3046               MOV      R0,R6
   \   000003E0   ........           BL       LoopBackCtrlFunc
    899          
    900          			if(ProtocolCheck(nPtr, (Time1Sec*2L)))
   \   000003E4   4FF4FA61           MOV      R1,#+2000
   \   000003E8   3846               MOV      R0,R7
   \   000003EA   ........           BL       ProtocolCheck
   \   000003EE   18B3               CBZ.N    R0,??Tar_DistCheckFunc_71
    901          			{
    902          				HuProtocolComCheck(nPtr, 0);
    903          
    904          				if(Path == HU_PATH)
   \   000003F0   012E               CMP      R6,#+1
   \   000003F2   15D1               BNE.N    ??Tar_DistCheckFunc_72
    905          				{
    906          					if(HuStatus[Dist_MuBr]->LoopBack == _OFF)
   \   000003F4   ........           LDR.W    R0,??DataTable10_3
   \   000003F8   50F82500           LDR      R0,[R0, R5, LSL #+2]
   \   000003FC   90F80703           LDRB     R0,[R0, #+775]
   \   00000400   D0B9               CBNZ.N   R0,??Tar_DistCheckFunc_71
    907          					{
    908          						DistCnt = 0;
   \                     ??Tar_DistCheckFunc_73:
   \   00000402   0020               MOVS     R0,#+0
   \   00000404   2072               STRB     R0,[R4, #+8]
    909          						DistStep = 21;
   \   00000406   1520               MOVS     R0,#+21
   \   00000408   E071               STRB     R0,[R4, #+7]
    910          					}
    911          					else	DistCnt++;
    912          				}
    913          				else
    914          				{
    915          					if(RuBuf[Dist_MuBr][Dist_HuBr][Dist_Ru]->LoopBack == _OFF)
    916          					{
    917          						DistCnt = 0;
    918          						DistStep = 21;
    919          					}
    920          					else	DistCnt++;
    921          				}
    922          			}
    923          			else	DistCnt++;
    924          
    925          			EndHuCommand();
   \                     ??Tar_DistCheckFunc_74:
   \   0000040A   0120               MOVS     R0,#+1
   \   0000040C   2071               STRB     R0,[R4, #+4]
    926          			
    927          			if(DistCnt>=3)
   \   0000040E   207A               LDRB     R0,[R4, #+8]
   \   00000410   0328               CMP      R0,#+3
   \   00000412   03D3               BCC.N    ??Tar_DistCheckFunc_75
    928          			{
    929          				DistCnt = 0;
   \   00000414   0020               MOVS     R0,#+0
   \   00000416   2072               STRB     R0,[R4, #+8]
    930          				DistStep = 21;
   \   00000418   1520               MOVS     R0,#+21
   \   0000041A   E071               STRB     R0,[R4, #+7]
    931          			}
    932          
    933          			DistStep = 21;
   \                     ??Tar_DistCheckFunc_75:
   \   0000041C   1520               MOVS     R0,#+21
   \   0000041E   60E6               B.N      ??Tar_DistCheckFunc_21
   \                     ??Tar_DistCheckFunc_72:
   \   00000420   ........           LDR.W    R0,??DataTable12
   \   00000424   00EB8510           ADD      R0,R0,R5, LSL #+6
   \   00000428   00EB8800           ADD      R0,R0,R8, LSL #+2
   \   0000042C   50F82900           LDR      R0,[R0, R9, LSL #+2]
   \   00000430   90F85401           LDRB     R0,[R0, #+340]
   \   00000434   0028               CMP      R0,#+0
   \   00000436   E4D0               BEQ.N    ??Tar_DistCheckFunc_73
   \                     ??Tar_DistCheckFunc_71:
   \   00000438   207A               LDRB     R0,[R4, #+8]
   \   0000043A   401C               ADDS     R0,R0,#+1
   \   0000043C   2072               STRB     R0,[R4, #+8]
   \   0000043E   E4E7               B.N      ??Tar_DistCheckFunc_74
   \                     ??Tar_DistCheckFunc_0:
   \   00000440   ........           DC32     MuStatus
    934          #ifdef DIST_DEG
    935          		SerPtr->printf("\n Step20 -> goto %d\n", DistStep);
    936          #endif
    937          			break;
    938          
    939          		//=======================================================================//
    940          		// DTU Control : OFF
    941          		case 21:
    942          			DtuLoopBackControl(_OFF, 0);
   \                     ??Tar_DistCheckFunc_10:
   \   00000444   0021               MOVS     R1,#+0
   \   00000446   0020               MOVS     R0,#+0
   \   00000448   ........           BL       DtuLoopBackControl
    943          
    944          			DistStep = 30;
   \   0000044C   1E20               MOVS     R0,#+30
   \   0000044E   48E6               B.N      ??Tar_DistCheckFunc_21
   \                     ??Tar_DistCheckFunc_11:
   \   00000450   03A8               ADD      R0,SP,#+12
   \   00000452   ........           LDR.W    R1,??DataTable12_1
   \   00000456   0322               MOVS     R2,#+3
   \   00000458   ........           BL       __aeabi_memcpy
   \   0000045C   02A8               ADD      R0,SP,#+8
   \   0000045E   0349               LDR.N    R1,??Tar_DistCheckFunc_1
   \   00000460   0322               MOVS     R2,#+3
   \   00000462   ........           BL       __aeabi_memcpy
    945          #ifdef DIST_DEG
    946          		SerPtr->printf("\n Step21 -> goto %d\n", DistStep);
    947          #endif
    948          			break;
    949          
    950          		//=======================================================================//
    951          		// Result Send
    952          		case 30:
    953          			SioDataAckTx(MyID, GuiID, (INT8U*)DelaySts, sizeof(_STS_DELAY), DelayMea1EaRSPS, PcSer);
   \   00000466   ........           LDR.W    R0,??DataTable12_2
   \   0000046A   01E0               B.N      ??Tar_DistCheckFunc_76
   \                     ??Tar_DistCheckFunc_1:
   \   0000046C   ........           DC32     MyID
   \                     ??Tar_DistCheckFunc_76:
   \   00000470   0068               LDR      R0,[R0, #+0]
   \   00000472   0190               STR      R0,[SP, #+4]
   \   00000474   B420               MOVS     R0,#+180
   \   00000476   0090               STR      R0,[SP, #+0]
   \   00000478   4FF49373           MOV      R3,#+294
   \   0000047C   ........           LDR.W    R0,??DataTable11_1
   \   00000480   0268               LDR      R2,[R0, #+0]
   \   00000482   0399               LDR      R1,[SP, #+12]
   \   00000484   0298               LDR      R0,[SP, #+8]
   \   00000486   ........           BL       SioDataAckTx
    954          			DistStep = 0;
   \   0000048A   0020               MOVS     R0,#+0
    955          			DistFlag = _OFF;
   \   0000048C   E080               STRH     R0,[R4, #+6]
    956          #ifdef DIST_DEG
    957          	SerPtr->printf("\n Step30 -> Reponse Send\n");
    958          #endif
    959          			break;
    960          	}
    961          }
   \                     ??Tar_DistCheckFunc_12:
   \   0000048E                      REQUIRE ?Subroutine1
   \   0000048E                      ;; // Fall through to label ?Subroutine1
    962          

   \                                 In section .text, align 4, keep-with-next
    963          void Total_DistCheckFunc(void)
    964          {
   \                     Total_DistCheckFunc:
   \   00000000   2DE9F047           PUSH     {R4-R10,LR}
   \   00000004   84B0               SUB      SP,SP,#+16
    965          	INT16U	i, j;
    966          	INT8U	Dist_MuBr = 0;
    967          	INT8U	Dist_HuBr = 0;
    968          	INT8U	Dist_Ru = 0;
    969          	INT8U	Path;
    970          	
    971          	__ProtocolPtr *nPtr;
    972          
    973          	if(DistStep == 0)
   \   00000006   ........           LDR.W    R4,??DataTable11
   \   0000000A   E179               LDRB     R1,[R4, #+7]
   \   0000000C   31B9               CBNZ.N   R1,??Total_DistCheckFunc_1
    974          	{
    975          		if(DistType == ALL_TYPE)	DistTarID.HuID = MDTU_MAX-1;
   \   0000000E   607A               LDRB     R0,[R4, #+9]
   \   00000010   0328               CMP      R0,#+3
   \   00000012   04BF               ITT      EQ 
   \   00000014   0720               MOVEQ    R0,#+7
   \   00000016   6070               STRBEQ   R0,[R4, #+1]
    976          		DistTarID.RuID = 0xF0;
   \   00000018   F020               MOVS     R0,#+240
   \   0000001A   A070               STRB     R0,[R4, #+2]
    977          	}
    978          	Dist_MuBr = DistTarID.HuID;
   \                     ??Total_DistCheckFunc_1:
   \   0000001C   6078               LDRB     R0,[R4, #+1]
   \   0000001E   0546               MOV      R5,R0
    979          	Dist_HuBr = (DistTarID.RuID>>4)&0x0F;
   \   00000020   A278               LDRB     R2,[R4, #+2]
   \   00000022   4FEA1218           LSR      R8,R2,#+4
    980          	Dist_Ru = 0;
    981          	
    982          	switch(DistStep)
   \   00000026   11B3               CBZ.N    R1,??Total_DistCheckFunc_2
   \   00000028   0129               CMP      R1,#+1
   \   0000002A   64D0               BEQ.N    ??Total_DistCheckFunc_3
   \   0000002C   0229               CMP      R1,#+2
   \   0000002E   7DD0               BEQ.N    ??Total_DistCheckFunc_4
   \   00000030   0329               CMP      R1,#+3
   \   00000032   00F09680           BEQ.W    ??Total_DistCheckFunc_5
   \   00000036   0429               CMP      R1,#+4
   \   00000038   00F0AE80           BEQ.W    ??Total_DistCheckFunc_6
   \   0000003C   0529               CMP      R1,#+5
   \   0000003E   00F00181           BEQ.W    ??Total_DistCheckFunc_7
   \   00000042   0629               CMP      R1,#+6
   \   00000044   00F08581           BEQ.W    ??Total_DistCheckFunc_8
   \   00000048   0A29               CMP      R1,#+10
   \   0000004A   00F09481           BEQ.W    ??Total_DistCheckFunc_9
   \   0000004E   0B29               CMP      R1,#+11
   \   00000050   00F0FA81           BEQ.W    ??Total_DistCheckFunc_10
   \   00000054   1429               CMP      R1,#+20
   \   00000056   00F01582           BEQ.W    ??Total_DistCheckFunc_11
   \   0000005A   1E29               CMP      R1,#+30
   \   0000005C   00F02F82           BEQ.W    ??Total_DistCheckFunc_12
   \   00000060   2829               CMP      R1,#+40
   \   00000062   00F04882           BEQ.W    ??Total_DistCheckFunc_13
   \   00000066   3229               CMP      R1,#+50
   \   00000068   00F04B82           BEQ.W    ??Total_DistCheckFunc_14
   \   0000006C   65E2               B.N      ??Total_DistCheckFunc_15
    983          	{
    984          		//=======================================================================//
    985          		// Delay Measure
    986          		//=======================================================================//
    987          		
    988          		// Value/Alarm Clear
    989          		case 0:
    990          			DistCnt = 0;
   \                     ??Total_DistCheckFunc_2:
   \   0000006E   0020               MOVS     R0,#+0
   \   00000070   2072               STRB     R0,[R4, #+8]
    991          			if(DistType == BR_TYPE)
   \   00000072   4FF6FF76           MOVW     R6,#+65535
   \   00000076   ........           LDR.W    R8,??DataTable11_1
   \   0000007A   607A               LDRB     R0,[R4, #+9]
   \   0000007C   0228               CMP      R0,#+2
   \   0000007E   19D1               BNE.N    ??Total_DistCheckFunc_16
    992          			{
    993          				DelaySts->DelayVal[Dist_MuBr].Hu_Delay = 0xFFFF;
   \   00000080   05EB0510           ADD      R0,R5,R5, LSL #+4
   \   00000084   4FEA4009           LSL      R9,R0,#+1
   \   00000088   D8F80000           LDR      R0,[R8, #+0]
   \   0000008C   29F80060           STRH     R6,[R9, R0]
    994          				for(i=0; i<HDTU_MAX; i++)
   \   00000090   0027               MOVS     R7,#+0
   \   00000092   BA46               MOV      R10,R7
    995          				{
    996          					DelaySts->DelayVal[Dist_MuBr].Ru_Delay[i] = 0xFFFF;
   \                     ??Total_DistCheckFunc_17:
   \   00000094   D8F80000           LDR      R0,[R8, #+0]
   \   00000098   4844               ADD      R0,R9,R0
   \   0000009A   5044               ADD      R0,R10,R0
   \   0000009C   4680               STRH     R6,[R0, #+2]
    997          					DelayAlarmCheck(Dist_MuBr, i, _Normal);
   \   0000009E   0022               MOVS     R2,#+0
   \   000000A0   F9B2               UXTB     R1,R7
   \   000000A2   2846               MOV      R0,R5
   \   000000A4   ........           BL       DelayAlarmCheck
    998          				}
   \   000000A8   7F1C               ADDS     R7,R7,#+1
   \   000000AA   0AF1020A           ADD      R10,R10,#+2
   \   000000AE   102F               CMP      R7,#+16
   \   000000B0   F0DB               BLT.N    ??Total_DistCheckFunc_17
   \   000000B2   1DE0               B.N      ??Total_DistCheckFunc_18
    999          			}
   1000          			else
   1001          			{
   1002          				for(i=0; i<MDTU_MAX; i++)
   \                     ??Total_DistCheckFunc_16:
   \   000000B4   0027               MOVS     R7,#+0
   \   000000B6   0025               MOVS     R5,#+0
   1003          				{
   1004          					DelaySts->DelayVal[i].Hu_Delay = 0xFFFF;
   \                     ??Total_DistCheckFunc_19:
   \   000000B8   D8F80000           LDR      R0,[R8, #+0]
   \   000000BC   2E52               STRH     R6,[R5, R0]
   1005          					for(j=0; j<HDTU_MAX; j++)
   \   000000BE   4FF00009           MOV      R9,#+0
   \   000000C2   CA46               MOV      R10,R9
   1006          					{
   1007          						DelaySts->DelayVal[i].Ru_Delay[j] = 0xFFFF;
   \                     ??Total_DistCheckFunc_20:
   \   000000C4   D8F80000           LDR      R0,[R8, #+0]
   \   000000C8   2818               ADDS     R0,R5,R0
   \   000000CA   5044               ADD      R0,R10,R0
   \   000000CC   4680               STRH     R6,[R0, #+2]
   1008          						DelayAlarmCheck(i, j, _Normal);
   \   000000CE   0022               MOVS     R2,#+0
   \   000000D0   5FFA89F1           UXTB     R1,R9
   \   000000D4   F8B2               UXTB     R0,R7
   \   000000D6   ........           BL       DelayAlarmCheck
   1009          					}
   \   000000DA   09F10109           ADD      R9,R9,#+1
   \   000000DE   0AF1020A           ADD      R10,R10,#+2
   \   000000E2   B9F1100F           CMP      R9,#+16
   \   000000E6   EDDB               BLT.N    ??Total_DistCheckFunc_20
   1010          				}
   \   000000E8   7F1C               ADDS     R7,R7,#+1
   \   000000EA   2235               ADDS     R5,R5,#+34
   \   000000EC   082F               CMP      R7,#+8
   \   000000EE   E3DB               BLT.N    ??Total_DistCheckFunc_19
   1011          			}
   1012          			DistStep = 1;	// HU Insert/Link Fail Check
   \                     ??Total_DistCheckFunc_18:
   \   000000F0   0120               MOVS     R0,#+1
   \                     ??Total_DistCheckFunc_21:
   \   000000F2   E071               STRB     R0,[R4, #+7]
   1013          #ifdef DIST_DEG
   1014          		SerPtr->printf("\n Step0 -> Dist Start[%x] -> goto %d",DistType, DistStep);
   1015          #endif
   1016          			break;
   \   000000F4   21E2               B.N      ??Total_DistCheckFunc_15
   1017          
   1018          		//-----------------------------------------------------------------------//
   1019          		// HU Insert/Link Fail Check
   1020          		case 1:
   1021          			if((SysInfo->Hu_Install[Dist_MuBr] == SYS_ALARM)||(SysInfo->Hu_Install[Dist_MuBr] == SYS_NORMAL))
   \                     ??Total_DistCheckFunc_3:
   \   000000F6   5249               LDR.N    R1,??Total_DistCheckFunc_0
   \   000000F8   0968               LDR      R1,[R1, #+0]
   \   000000FA   6918               ADDS     R1,R5,R1
   \   000000FC   4B78               LDRB     R3,[R1, #+1]
   \   000000FE   022B               CMP      R3,#+2
   \   00000100   01D0               BEQ.N    ??Total_DistCheckFunc_22
   \   00000102   012B               CMP      R3,#+1
   \   00000104   05D1               BNE.N    ??Total_DistCheckFunc_23
   1022          			{
   1023          				if(DistTarID.RuID == 0xFF)	DistStep = 3;		// DTU Control : LoopBack On
   \                     ??Total_DistCheckFunc_22:
   \   00000106   FF2A               CMP      R2,#+255
   \   00000108   08BF               IT       EQ 
   \   0000010A   0320               MOVEQ    R0,#+3
   \   0000010C   F1D0               BEQ.N    ??Total_DistCheckFunc_21
   1024          				else						DistStep = 2;		// Ru Insert/Link Fail Check
   \   0000010E   0220               MOVS     R0,#+2
   \   00000110   EFE7               B.N      ??Total_DistCheckFunc_21
   1025          			}
   1026          			else
   1027          			{
   1028          				if(DistType == BR_TYPE)	DistStep = 20;
   \                     ??Total_DistCheckFunc_23:
   \   00000112   617A               LDRB     R1,[R4, #+9]
   \   00000114   0229               CMP      R1,#+2
   \   00000116   08BF               IT       EQ 
   \   00000118   1420               MOVEQ    R0,#+20
   \   0000011A   EAD0               BEQ.N    ??Total_DistCheckFunc_21
   1029          				else
   1030          				{
   1031          					if(Dist_MuBr == 0)	DistStep = 20;
   \   0000011C   0DB9               CBNZ.N   R5,??Total_DistCheckFunc_24
   \   0000011E   1420               MOVS     R0,#+20
   \   00000120   E7E7               B.N      ??Total_DistCheckFunc_21
   1032          					else
   1033          					{
   1034          						DistTarID.HuID--;
   \                     ??Total_DistCheckFunc_24:
   \   00000122   401E               SUBS     R0,R0,#+1
   \   00000124   6070               STRB     R0,[R4, #+1]
   1035          						DistTarID.RuID = 0xF0;
   \   00000126   F020               MOVS     R0,#+240
   \   00000128   A070               STRB     R0,[R4, #+2]
   \   0000012A   06E2               B.N      ??Total_DistCheckFunc_15
   1036          					}
   1037          				}
   1038          			}
   \                     ??Total_DistCheckFunc_4:
   \   0000012C   4448               LDR.N    R0,??Total_DistCheckFunc_0
   \   0000012E   0168               LDR      R1,[R0, #+0]
   \   00000130   01EB8510           ADD      R0,R1,R5, LSL #+6
   \   00000134   00EB8800           ADD      R0,R0,R8, LSL #+2
   \   00000138   417A               LDRB     R1,[R0, #+9]
   \   0000013A   0229               CMP      R1,#+2
   \   0000013C   01D0               BEQ.N    ??Total_DistCheckFunc_25
   \   0000013E   0129               CMP      R1,#+1
   \   00000140   02D1               BNE.N    ??Total_DistCheckFunc_26
   1039          
   1040          #ifdef DIST_DEG
   1041          		SerPtr->printf("\n Step1[00][%2x][%2x] -> goto %d", DistTarID.HuID, DistTarID.RuID, DistStep);
   1042          #endif
   1043          			break;
   1044          
   1045          		//-----------------------------------------------------------------------//
   1046          		// Ru Insert/Link Fail Check
   1047          		case 2:
   1048          			if((SysInfo->Hu_Ru[Dist_MuBr].Ru_Install[Dist_HuBr][Dist_Ru] == SYS_ALARM)
   1049          				||(SysInfo->Hu_Ru[Dist_MuBr].Ru_Install[Dist_HuBr][Dist_Ru] == SYS_NORMAL))
   1050          			{
   1051          				DistStep = 3;					// DTU Control : LoopBack On
   \                     ??Total_DistCheckFunc_25:
   \   00000142   0320               MOVS     R0,#+3
   \                     ??Total_DistCheckFunc_27:
   \   00000144   E071               STRB     R0,[R4, #+7]
   \   00000146   09E0               B.N      ??Total_DistCheckFunc_28
   1052          			}
   1053          			else
   1054          			{
   1055          				if(Dist_HuBr == 0)	// Br#1
   \                     ??Total_DistCheckFunc_26:
   \   00000148   5FEA0800           MOVS     R0,R8
   \   0000014C   04BF               ITT      EQ 
   \   0000014E   FF20               MOVEQ    R0,#+255
   \   00000150   A070               STRBEQ   R0,[R4, #+2]
   1056          				{
   1057          					DistTarID.RuID = 0xFF;		// HU 螟沥...
   1058          					DistStep = 3;				// DTU Control : LoopBack On
   \   00000152   F6D0               BEQ.N    ??Total_DistCheckFunc_25
   1059          				}
   1060          				else
   1061          				{
   1062          					Dist_HuBr--;
   1063          					DistTarID.RuID = (Dist_HuBr<<4)&0xF0;
   \   00000154   A8F10100           SUB      R0,R8,#+1
   \   00000158   0001               LSLS     R0,R0,#+4
   \   0000015A   A070               STRB     R0,[R4, #+2]
   1064          				}
   1065          			}
   1066          			DistCnt = 0;
   \                     ??Total_DistCheckFunc_28:
   \   0000015C   0020               MOVS     R0,#+0
   \   0000015E   2072               STRB     R0,[R4, #+8]
   1067          			
   1068          #ifdef DIST_DEG
   1069          		SerPtr->printf("\n Step2[00][%2x][%2x] -> goto %d", DistTarID.HuID, DistTarID.RuID, DistStep);
   1070          #endif
   1071          			break;
   \   00000160   EBE1               B.N      ??Total_DistCheckFunc_15
   1072          
   1073          		//-----------------------------------------------------------------------//
   1074          		// DTU Control : LoopBack On
   1075          		case 3:
   1076          			DtuLoopBackControl(_ON, Dist_MuBr);
   \                     ??Total_DistCheckFunc_5:
   \   00000162   2946               MOV      R1,R5
   \   00000164   0120               MOVS     R0,#+1
   \   00000166   ........           BL       DtuLoopBackControl
   1077          
   1078          			if((DtuStatus->MeaLoop == _ON)&&(DtuStatus->MeaBranch==Dist_MuBr))
   \   0000016A   ........           LDR.W    R6,??DataTable10
   \   0000016E   3068               LDR      R0,[R6, #+0]
   \   00000170   90F83710           LDRB     R1,[R0, #+55]
   \   00000174   0129               CMP      R1,#+1
   \   00000176   07D1               BNE.N    ??Total_DistCheckFunc_29
   \   00000178   90F83900           LDRB     R0,[R0, #+57]
   \   0000017C   A842               CMP      R0,R5
   \   0000017E   02BF               ITTT     EQ 
   \   00000180   A572               STRBEQ   R5,[R4, #+10]
   \   00000182   0420               MOVEQ    R0,#+4
   \   00000184   E071               STRBEQ   R0,[R4, #+7]
   1079          			{
   1080          				DistOnBr = Dist_MuBr;
   1081          				DistStep = 4;				// HU/RU Loop Back & Check
   1082          				DistCnt = 0;
   \   00000186   E9D0               BEQ.N    ??Total_DistCheckFunc_28
   1083          			}
   1084          			else
   1085          			{
   1086          				if(DistCnt++>=5)
   \                     ??Total_DistCheckFunc_29:
   \   00000188   207A               LDRB     R0,[R4, #+8]
   \   0000018A   411C               ADDS     R1,R0,#+1
   \   0000018C   2172               STRB     R1,[R4, #+8]
   \   0000018E   0528               CMP      R0,#+5
   \                     ??Total_DistCheckFunc_30:
   \   00000190   C0F0D381           BCC.W    ??Total_DistCheckFunc_15
   1087          				{
   1088          					DistStep = 30;			// On Control Fail...
   \   00000194   1E20               MOVS     R0,#+30
   \   00000196   ACE7               B.N      ??Total_DistCheckFunc_21
   1089          				}
   1090          			}
   \                     ??Total_DistCheckFunc_6:
   \   00000198   2068               LDR      R0,[R4, #+0]
   \   0000019A   0090               STR      R0,[SP, #+0]
   1091          #ifdef DIST_DEG
   1092          	SerPtr->printf("\n Step3 -> goto %d", DistStep);
   1093          #endif
   1094          			break;
   1095          
   1096          		//-----------------------------------------------------------------------//
   1097          		// HU/RU Loop Back & Check
   1098          		case 4:
   1099          			Path = ID_Check(DistTarID);
   \   0000019C   ........           BL       ID_Check
   \   000001A0   0746               MOV      R7,R0
   1100          			
   1101          			GetHuCommand();
   \   000001A2   ........           BL       GetHuCommand
   1102          			
   1103          			if((Dist_MuBr==0)||(Dist_MuBr==1))		nPtr = (__ProtocolPtr *)Hu_Ser2Ser;
   \   000001A6   0DB1               CBZ.N    R5,??Total_DistCheckFunc_31
   \   000001A8   012D               CMP      R5,#+1
   \   000001AA   01D1               BNE.N    ??Total_DistCheckFunc_32
   \                     ??Total_DistCheckFunc_31:
   \   000001AC   E669               LDR      R6,[R4, #+28]
   \   000001AE   10E0               B.N      ??Total_DistCheckFunc_33
   1104          			else if((Dist_MuBr==2)||(Dist_MuBr==3))	nPtr = (__ProtocolPtr *)Hu_Ser3Ser;
   \                     ??Total_DistCheckFunc_32:
   \   000001B0   022D               CMP      R5,#+2
   \   000001B2   01D0               BEQ.N    ??Total_DistCheckFunc_34
   \   000001B4   032D               CMP      R5,#+3
   \   000001B6   01D1               BNE.N    ??Total_DistCheckFunc_35
   \                     ??Total_DistCheckFunc_34:
   \   000001B8   266A               LDR      R6,[R4, #+32]
   \   000001BA   0AE0               B.N      ??Total_DistCheckFunc_33
   1105          			else if((Dist_MuBr==4)||(Dist_MuBr==5))	nPtr = (__ProtocolPtr *)Hu_Ser5Ser;
   \                     ??Total_DistCheckFunc_35:
   \   000001BC   042D               CMP      R5,#+4
   \   000001BE   01D0               BEQ.N    ??Total_DistCheckFunc_36
   \   000001C0   052D               CMP      R5,#+5
   \   000001C2   01D1               BNE.N    ??Total_DistCheckFunc_37
   \                     ??Total_DistCheckFunc_36:
   \   000001C4   666A               LDR      R6,[R4, #+36]
   \   000001C6   04E0               B.N      ??Total_DistCheckFunc_33
   1106          			else if((Dist_MuBr==6)||(Dist_MuBr==7))	nPtr = (__ProtocolPtr *)Hu_Ser6Ser;
   \                     ??Total_DistCheckFunc_37:
   \   000001C8   062D               CMP      R5,#+6
   \   000001CA   01D0               BEQ.N    ??Total_DistCheckFunc_38
   \   000001CC   072D               CMP      R5,#+7
   \   000001CE   00D1               BNE.N    ??Total_DistCheckFunc_33
   \                     ??Total_DistCheckFunc_38:
   \   000001D0   A66A               LDR      R6,[R4, #+40]
   \                     ??Total_DistCheckFunc_33:
   \   000001D2   2068               LDR      R0,[R4, #+0]
   \   000001D4   0090               STR      R0,[SP, #+0]
   1107          
   1108          			LoopBackCtrlFunc(Path, DistTarID, nPtr, _ON);
   \   000001D6   0123               MOVS     R3,#+1
   \   000001D8   3246               MOV      R2,R6
   \   000001DA   0146               MOV      R1,R0
   \   000001DC   3846               MOV      R0,R7
   \   000001DE   ........           BL       LoopBackCtrlFunc
   1109          
   1110          			if(ProtocolCheck(nPtr, (Time1Sec*2L)))
   \   000001E2   4FF4FA61           MOV      R1,#+2000
   \   000001E6   3046               MOV      R0,R6
   \   000001E8   ........           BL       ProtocolCheck
   \   000001EC   18B3               CBZ.N    R0,??Total_DistCheckFunc_39
   1111          			{
   1112          				HuProtocolComCheck(nPtr, 0);
   1113          
   1114          				if(Path == HU_PATH)
   \   000001EE   012F               CMP      R7,#+1
   \   000001F0   17D1               BNE.N    ??Total_DistCheckFunc_40
   1115          				{
   1116          					if(HuStatus[Dist_MuBr]->LoopBack == _ON)
   \   000001F2   ........           LDR.W    R0,??DataTable10_3
   \   000001F6   50F82500           LDR      R0,[R0, R5, LSL #+2]
   \   000001FA   90F80703           LDRB     R0,[R0, #+775]
   \   000001FE   0128               CMP      R0,#+1
   \   00000200   19D1               BNE.N    ??Total_DistCheckFunc_39
   1117          					{
   1118          						DistStep = 5;	// Delay Read
   \                     ??Total_DistCheckFunc_41:
   \   00000202   0520               MOVS     R0,#+5
   \   00000204   E071               STRB     R0,[R4, #+7]
   1119          						DistCnt = 0;
   \   00000206   0020               MOVS     R0,#+0
   \   00000208   2072               STRB     R0,[R4, #+8]
   1120          
   1121          						OSTimeDly(500L);
   \   0000020A   4FF4FA70           MOV      R0,#+500
   \   0000020E   ........           BL       OSTimeDly
   1122          					}
   1123          					else	DistCnt++;
   1124          				}
   1125          				else
   1126          				{
   1127          					if(RuBuf[Dist_MuBr][Dist_HuBr][Dist_Ru]->LoopBack == _ON)
   1128          					{
   1129          						DistStep = 5;	// Delay Read
   1130          						DistCnt = 0;
   1131          
   1132          						OSTimeDly(500L);
   1133          					}
   1134          					else	DistCnt++;
   1135          				}
   1136          			}
   1137          			else	DistCnt++;
   1138          			EndHuCommand();
   \                     ??Total_DistCheckFunc_42:
   \   00000212   0120               MOVS     R0,#+1
   \   00000214   2071               STRB     R0,[R4, #+4]
   1139          			
   1140          			if(DistCnt>=10)	DistStep = 11;		// Check Next ID
   \   00000216   207A               LDRB     R0,[R4, #+8]
   \   00000218   0A28               CMP      R0,#+10
   \   0000021A   C0F08E81           BCC.W    ??Total_DistCheckFunc_15
   \                     ??Total_DistCheckFunc_43:
   \   0000021E   0B20               MOVS     R0,#+11
   \   00000220   67E7               B.N      ??Total_DistCheckFunc_21
   \                     ??Total_DistCheckFunc_40:
   \   00000222   ........           LDR.W    R0,??DataTable12
   \   00000226   00EB8510           ADD      R0,R0,R5, LSL #+6
   \   0000022A   50F82800           LDR      R0,[R0, R8, LSL #+2]
   \   0000022E   90F85401           LDRB     R0,[R0, #+340]
   \   00000232   0128               CMP      R0,#+1
   \   00000234   E5D0               BEQ.N    ??Total_DistCheckFunc_41
   \                     ??Total_DistCheckFunc_39:
   \   00000236   207A               LDRB     R0,[R4, #+8]
   \   00000238   401C               ADDS     R0,R0,#+1
   \   0000023A   2072               STRB     R0,[R4, #+8]
   \   0000023C   E9E7               B.N      ??Total_DistCheckFunc_42
   \   0000023E   00BF               Nop      
   \                     ??Total_DistCheckFunc_0:
   \   00000240   ........           DC32     SysInfo
   1141          			
   1142          #ifdef DIST_DEG
   1143          	SerPtr->printf("\n Step4 -> goto %d", DistStep);
   1144          #endif
   1145          			break;
   1146          
   1147          		//-----------------------------------------------------------------------//
   1148          		// Delay Read
   1149          		case 5:
   1150          			GetDtuCommand();
   \                     ??Total_DistCheckFunc_7:
   \   00000244   ........           BL       GetDtuCommand
   1151          			
   1152          			SioDataAckTx(MyID, DtuID, (INT8U*)NULL, 0, StatusRQST, DtuSer);
   \   00000248   ........           LDR.W    R6,??DataTable10_1
   \   0000024C   03A8               ADD      R0,SP,#+12
   \   0000024E   ........           LDR.W    R1,??DataTable10_2
   \   00000252   0322               MOVS     R2,#+3
   \   00000254   ........           BL       __aeabi_memcpy
   \   00000258   02A8               ADD      R0,SP,#+8
   \   0000025A   ........           LDR.W    R1,??DataTable12_3
   \   0000025E   0322               MOVS     R2,#+3
   \   00000260   ........           BL       __aeabi_memcpy
   \   00000264   3068               LDR      R0,[R6, #+0]
   \   00000266   0190               STR      R0,[SP, #+4]
   \   00000268   2020               MOVS     R0,#+32
   \   0000026A   0090               STR      R0,[SP, #+0]
   \   0000026C   0023               MOVS     R3,#+0
   \   0000026E   0022               MOVS     R2,#+0
   \   00000270   0399               LDR      R1,[SP, #+12]
   \   00000272   0298               LDR      R0,[SP, #+8]
   \   00000274   ........           BL       SioDataAckTx
   1153          						
   1154          			if(ProtocolCheck(DtuSer, (Time1Sec*2L)))
   \   00000278   4FF4FA61           MOV      R1,#+2000
   \   0000027C   3068               LDR      R0,[R6, #+0]
   \   0000027E   ........           BL       ProtocolCheck
   \   00000282   0028               CMP      R0,#+0
   \   00000284   5BD0               BEQ.N    ??Total_DistCheckFunc_44
   1155          			{
   1156          				DtuProtocolComCheck(DtuSer);
   \   00000286   3068               LDR      R0,[R6, #+0]
   \   00000288   ........           BL       DtuProtocolComCheck
   1157          
   1158          				if(BitRead(DtuStatus->MeaSts, Dist_MuBr))
   \   0000028C   ....               LDR.N    R6,??DataTable10
   \   0000028E   3068               LDR      R0,[R6, #+0]
   \   00000290   90F83810           LDRB     R1,[R0, #+56]
   \   00000294   2941               ASRS     R1,R1,R5
   \   00000296   C907               LSLS     R1,R1,#+31
   \   00000298   51D5               BPL.N    ??Total_DistCheckFunc_44
   1159          				{
   1160          					if(DistTarID.RuID == 0xFF)
   \   0000029A   B0F83510           LDRH     R1,[R0, #+53]
   \   0000029E   A278               LDRB     R2,[R4, #+2]
   \   000002A0   FF2A               CMP      R2,#+255
   \   000002A2   20D1               BNE.N    ??Total_DistCheckFunc_45
   1161          					{
   1162          						if(DtuStatus->MeaResult < DLY_EU_MIN)	DtuStatus->MeaResult = DLY_EU_MIN;
   \   000002A4   0729               CMP      R1,#+7
   \   000002A6   3CBF               ITT      CC 
   \   000002A8   0721               MOVCC    R1,#+7
   \   000002AA   A0F83510           STRHCC   R1,[R0, #+53]
   1163          						DelaySts->DelayVal[Dist_MuBr].Hu_Delay = DtuStatus->MeaResult;
   \   000002AE   05EB0511           ADD      R1,R5,R5, LSL #+4
   \   000002B2   4900               LSLS     R1,R1,#+1
   \   000002B4   ........           LDR.W    R2,??DataTable11_1
   \   000002B8   1268               LDR      R2,[R2, #+0]
   \   000002BA   B0F83530           LDRH     R3,[R0, #+53]
   \   000002BE   8B52               STRH     R3,[R1, R2]
   1164          						WriteEEprom(At24cDevID, Hu_DelayVal_Bp+(2*Dist_MuBr), (INT8U)((DtuStatus->MeaResult>>8)&0xFF), IN_EEP);
   \   000002C0   6D00               LSLS     R5,R5,#+1
   \   000002C2   0023               MOVS     R3,#+0
   \   000002C4   B0F83500           LDRH     R0,[R0, #+53]
   \   000002C8   020A               LSRS     R2,R0,#+8
   \   000002CA   05F61B01           ADDW     R1,R5,#+2075
   \   000002CE   89B2               UXTH     R1,R1
   \   000002D0   A020               MOVS     R0,#+160
   \   000002D2   ........           BL       WriteEEprom
   1165          						WriteEEprom(At24cDevID, Hu_DelayVal_Bp+(2*Dist_MuBr)+1, (INT8U)(DtuStatus->MeaResult&0xFF), IN_EEP);
   \   000002D6   0023               MOVS     R3,#+0
   \   000002D8   3068               LDR      R0,[R6, #+0]
   \   000002DA   B0F83520           LDRH     R2,[R0, #+53]
   \   000002DE   D2B2               UXTB     R2,R2
   \   000002E0   05F61C01           ADDW     R1,R5,#+2076
   \   000002E4   25E0               B.N      ??Total_DistCheckFunc_46
   1166          					}
   1167          					else
   1168          					{
   1169          						if(DtuStatus->MeaResult < DLY_RU_MIN)	DtuStatus->MeaResult = DLY_RU_MIN;
   \                     ??Total_DistCheckFunc_45:
   \   000002E6   0F29               CMP      R1,#+15
   \   000002E8   3CBF               ITT      CC 
   \   000002EA   0F21               MOVCC    R1,#+15
   \   000002EC   A0F83510           STRHCC   R1,[R0, #+53]
   1170          						DelaySts->DelayVal[Dist_MuBr].Ru_Delay[Dist_HuBr] = DtuStatus->MeaResult;
   \   000002F0   05EB0511           ADD      R1,R5,R5, LSL #+4
   \   000002F4   ........           LDR.W    R2,??DataTable11_1
   \   000002F8   1268               LDR      R2,[R2, #+0]
   \   000002FA   02EB4101           ADD      R1,R2,R1, LSL #+1
   \   000002FE   01EB4801           ADD      R1,R1,R8, LSL #+1
   \   00000302   B0F83520           LDRH     R2,[R0, #+53]
   \   00000306   4A80               STRH     R2,[R1, #+2]
   1171          						WriteEEprom(At24cDevID, Ru_DelayVal_Bp+(32*Dist_MuBr)+(2*Dist_HuBr), (INT8U)((DtuStatus->MeaResult>>8)&0xFF), IN_EEP);
   \   00000308   4FEA4801           LSL      R1,R8,#+1
   \   0000030C   01EB4515           ADD      R5,R1,R5, LSL #+5
   \   00000310   0023               MOVS     R3,#+0
   \   00000312   B0F83500           LDRH     R0,[R0, #+53]
   \   00000316   020A               LSRS     R2,R0,#+8
   \   00000318   05F62C01           ADDW     R1,R5,#+2092
   \   0000031C   89B2               UXTH     R1,R1
   \   0000031E   A020               MOVS     R0,#+160
   \   00000320   ........           BL       WriteEEprom
   1172          						WriteEEprom(At24cDevID, Ru_DelayVal_Bp+(32*Dist_MuBr)+(2*Dist_HuBr)+1, (INT8U)(DtuStatus->MeaResult&0xFF), IN_EEP);
   \   00000324   0023               MOVS     R3,#+0
   \   00000326   3068               LDR      R0,[R6, #+0]
   \   00000328   B0F83520           LDRH     R2,[R0, #+53]
   \   0000032C   D2B2               UXTB     R2,R2
   \   0000032E   05F62D01           ADDW     R1,R5,#+2093
   \                     ??Total_DistCheckFunc_46:
   \   00000332   89B2               UXTH     R1,R1
   \   00000334   A020               MOVS     R0,#+160
   \   00000336   ........           BL       WriteEEprom
   1173          					}
   1174          					DistStep = 6;					// DTU LoopBack OFF;
   \   0000033A   0620               MOVS     R0,#+6
   \   0000033C   E071               STRB     R0,[R4, #+7]
   1175          				}
   1176          			}
   1177          			EndDtuCommand();
   \                     ??Total_DistCheckFunc_44:
   \   0000033E   ........           BL       EndDtuCommand
   1178          			
   1179          			if(DistCnt++>=10)	DistStep = 6;						// Change Next ID
   \   00000342   207A               LDRB     R0,[R4, #+8]
   \   00000344   411C               ADDS     R1,R0,#+1
   \   00000346   2172               STRB     R1,[R4, #+8]
   \   00000348   0A28               CMP      R0,#+10
   \   0000034A   C0F0F680           BCC.W    ??Total_DistCheckFunc_15
   \   0000034E   0620               MOVS     R0,#+6
   \   00000350   CFE6               B.N      ??Total_DistCheckFunc_21
   1180          
   1181          //if(DistCnt < 10)	SerPtr->printf("\n Delay Read (Measure_Sts[%x]), ID[00][%2x][%2x] Delay = %d", DtuStatus->MeaSts, DistTarID.HuID, DistTarID.RuID, DtuStatus->MeaResult);
   1182          //else				SerPtr->printf("\n Delay Read Fail !! -> Measure_Sts[%x]", DtuStatus->MeaSts);
   1183          
   1184          #ifdef DIST_DEG
   1185          		if(DistCnt < 10)	SerPtr->printf("\n Step5 Delay Read[00][%2x][%2x] = %d -> goto %d", DistTarID.HuID, DistTarID.RuID, DtuStatus->MeaResult, DistStep);
   1186          		else				SerPtr->printf("\n Step5 Delay Read Fail !! -> goto %d", DistStep);
   1187          #endif
   1188          			break;
   1189          
   1190          		//-----------------------------------------------------------------------//
   1191          		// DTU Control : LoopBack OFF
   1192          		case 6:
   1193          			DtuLoopBackControl(_OFF, Dist_MuBr);
   \                     ??Total_DistCheckFunc_8:
   \   00000352   2946               MOV      R1,R5
   \   00000354   0020               MOVS     R0,#+0
   \   00000356   ........           BL       DtuLoopBackControl
   1194          
   1195          			if(MuStatus->MeaLoop == 0)
   \   0000035A   ........           LDR.W    R0,??DataTable12_4
   \   0000035E   0068               LDR      R0,[R0, #+0]
   \   00000360   90F8AC03           LDRB     R0,[R0, #+940]
   \   00000364   10B9               CBNZ.N   R0,??Total_DistCheckFunc_47
   1196          			{
   1197          				DistOnBr = Dist_MuBr;
   \   00000366   A572               STRB     R5,[R4, #+10]
   1198          				DistStep = 10;				// RU Delay Control
   \   00000368   0A20               MOVS     R0,#+10
   \   0000036A   EBE6               B.N      ??Total_DistCheckFunc_27
   1199          				DistCnt = 0;
   1200          			}
   1201          			else
   1202          			{
   1203          				if(DistCnt++>=10)
   \                     ??Total_DistCheckFunc_47:
   \   0000036C   207A               LDRB     R0,[R4, #+8]
   \   0000036E   411C               ADDS     R1,R0,#+1
   \   00000370   2172               STRB     R1,[R4, #+8]
   \   00000372   0A28               CMP      R0,#+10
   \   00000374   0CE7               B.N      ??Total_DistCheckFunc_30
   1204          				{
   1205          					DistStep = 30;			// Off Control Fail...
   1206          				}
   1207          			}
   1208          #ifdef DIST_DEG
   1209          	SerPtr->printf("\n Step6 -> goto %d", DistStep);
   1210          #endif
   1211          			break;
   1212          
   1213          		
   1214          		//=======================================================================//
   1215          		// Delay Control
   1216          		//=======================================================================//
   1217          		case 10:
   1218          			if(DistTarID.RuID == 0xFF)
   \                     ??Total_DistCheckFunc_9:
   \   00000376   FF2A               CMP      R2,#+255
   \   00000378   3BD1               BNE.N    ??Total_DistCheckFunc_48
   1219          			{
   1220          				GetHuCommand();
   \   0000037A   ........           BL       GetHuCommand
   1221          				
   1222          				if((Dist_MuBr==0)||(Dist_MuBr==1))		nPtr = (__ProtocolPtr *)Hu_Ser2Ser;
   \   0000037E   0DB1               CBZ.N    R5,??Total_DistCheckFunc_49
   \   00000380   012D               CMP      R5,#+1
   \   00000382   01D1               BNE.N    ??Total_DistCheckFunc_50
   \                     ??Total_DistCheckFunc_49:
   \   00000384   E669               LDR      R6,[R4, #+28]
   \   00000386   10E0               B.N      ??Total_DistCheckFunc_51
   1223          				else if((Dist_MuBr==2)||(Dist_MuBr==3)) nPtr = (__ProtocolPtr *)Hu_Ser3Ser;
   \                     ??Total_DistCheckFunc_50:
   \   00000388   022D               CMP      R5,#+2
   \   0000038A   01D0               BEQ.N    ??Total_DistCheckFunc_52
   \   0000038C   032D               CMP      R5,#+3
   \   0000038E   01D1               BNE.N    ??Total_DistCheckFunc_53
   \                     ??Total_DistCheckFunc_52:
   \   00000390   266A               LDR      R6,[R4, #+32]
   \   00000392   0AE0               B.N      ??Total_DistCheckFunc_51
   1224          				else if((Dist_MuBr==4)||(Dist_MuBr==5)) nPtr = (__ProtocolPtr *)Hu_Ser5Ser;
   \                     ??Total_DistCheckFunc_53:
   \   00000394   042D               CMP      R5,#+4
   \   00000396   01D0               BEQ.N    ??Total_DistCheckFunc_54
   \   00000398   052D               CMP      R5,#+5
   \   0000039A   01D1               BNE.N    ??Total_DistCheckFunc_55
   \                     ??Total_DistCheckFunc_54:
   \   0000039C   666A               LDR      R6,[R4, #+36]
   \   0000039E   04E0               B.N      ??Total_DistCheckFunc_51
   1225          				else if((Dist_MuBr==6)||(Dist_MuBr==7)) nPtr = (__ProtocolPtr *)Hu_Ser6Ser;
   \                     ??Total_DistCheckFunc_55:
   \   000003A0   062D               CMP      R5,#+6
   \   000003A2   01D0               BEQ.N    ??Total_DistCheckFunc_56
   \   000003A4   072D               CMP      R5,#+7
   \   000003A6   00D1               BNE.N    ??Total_DistCheckFunc_51
   \                     ??Total_DistCheckFunc_56:
   \   000003A8   A66A               LDR      R6,[R4, #+40]
   \                     ??Total_DistCheckFunc_51:
   \   000003AA   2068               LDR      R0,[R4, #+0]
   \   000003AC   0090               STR      R0,[SP, #+0]
   1226          
   1227          				LoopBackCtrlFunc(Path, DistTarID, nPtr, _OFF);
   \   000003AE   0023               MOVS     R3,#+0
   \   000003B0   3246               MOV      R2,R6
   \   000003B2   0146               MOV      R1,R0
   \   000003B4   F8B2               UXTB     R0,R7
   \   000003B6   ........           BL       LoopBackCtrlFunc
   1228          
   1229          				if(ProtocolCheck(nPtr, (Time1Sec*2L)))
   \   000003BA   4FF4FA61           MOV      R1,#+2000
   \   000003BE   3046               MOV      R0,R6
   \   000003C0   ........           BL       ProtocolCheck
   \   000003C4   30B1               CBZ.N    R0,??Total_DistCheckFunc_57
   1230          				{
   1231          					HuProtocolComCheck(nPtr, 0);
   1232          
   1233          					if(nPtr->Recv->Command == ControlRSPS)	DistStep = 11;
   \   000003C6   706A               LDR      R0,[R6, #+36]
   \   000003C8   807A               LDRB     R0,[R0, #+10]
   \   000003CA   A128               CMP      R0,#+161
   \   000003CC   02D1               BNE.N    ??Total_DistCheckFunc_57
   \                     ??Total_DistCheckFunc_58:
   \   000003CE   0B20               MOVS     R0,#+11
   \   000003D0   E071               STRB     R0,[R4, #+7]
   \   000003D2   02E0               B.N      ??Total_DistCheckFunc_59
   1234          					else									DistCnt++;
   1235          				}
   1236          				else	DistCnt++;
   \                     ??Total_DistCheckFunc_57:
   \   000003D4   207A               LDRB     R0,[R4, #+8]
   \   000003D6   401C               ADDS     R0,R0,#+1
   \   000003D8   2072               STRB     R0,[R4, #+8]
   1237          				EndHuCommand();
   \                     ??Total_DistCheckFunc_59:
   \   000003DA   0120               MOVS     R0,#+1
   \   000003DC   2071               STRB     R0,[R4, #+4]
   1238          			}
   1239          			else
   1240          			{
   1241          				GetHuCommand();
   1242          				
   1243          				if((Dist_MuBr==0)||(Dist_MuBr==1))		nPtr = (__ProtocolPtr *)Hu_Ser2Ser;
   1244          				else if((Dist_MuBr==2)||(Dist_MuBr==3)) nPtr = (__ProtocolPtr *)Hu_Ser3Ser;
   1245          				else if((Dist_MuBr==4)||(Dist_MuBr==5)) nPtr = (__ProtocolPtr *)Hu_Ser5Ser;
   1246          				else if((Dist_MuBr==6)||(Dist_MuBr==7)) nPtr = (__ProtocolPtr *)Hu_Ser6Ser;
   1247          
   1248          				DelayCtrlFunc(Path, DistTarID, nPtr);
   1249          
   1250          				if(ProtocolCheck(nPtr, (Time1Sec*2L)))
   1251          				{
   1252          					HuProtocolComCheck(nPtr, 0);
   1253          
   1254          					if(nPtr->Recv->Command == ControlRSPS)	DistStep = 11;
   1255          					else									DistCnt++;
   1256          				}
   1257          				else	DistCnt++;
   1258          				EndHuCommand();
   1259          			}
   1260          
   1261          			if(DistCnt>=4)
   \   000003DE   207A               LDRB     R0,[R4, #+8]
   \   000003E0   0428               CMP      R0,#+4
   \   000003E2   C0F0AA80           BCC.W    ??Total_DistCheckFunc_15
   1262          			{
   1263          				DelayAlarmCheck(Dist_MuBr, Dist_HuBr, _Alarm);
   \   000003E6   0122               MOVS     R2,#+1
   \   000003E8   4146               MOV      R1,R8
   \   000003EA   2846               MOV      R0,R5
   \   000003EC   ........           BL       DelayAlarmCheck
   1264          				DistStep = 11;
   \   000003F0   15E7               B.N      ??Total_DistCheckFunc_43
   1265          			}
   \                     ??Total_DistCheckFunc_48:
   \   000003F2   ........           BL       GetHuCommand
   \   000003F6   0DB1               CBZ.N    R5,??Total_DistCheckFunc_60
   \   000003F8   012D               CMP      R5,#+1
   \   000003FA   01D1               BNE.N    ??Total_DistCheckFunc_61
   \                     ??Total_DistCheckFunc_60:
   \   000003FC   E669               LDR      R6,[R4, #+28]
   \   000003FE   10E0               B.N      ??Total_DistCheckFunc_62
   \                     ??Total_DistCheckFunc_61:
   \   00000400   022D               CMP      R5,#+2
   \   00000402   01D0               BEQ.N    ??Total_DistCheckFunc_63
   \   00000404   032D               CMP      R5,#+3
   \   00000406   01D1               BNE.N    ??Total_DistCheckFunc_64
   \                     ??Total_DistCheckFunc_63:
   \   00000408   266A               LDR      R6,[R4, #+32]
   \   0000040A   0AE0               B.N      ??Total_DistCheckFunc_62
   \                     ??Total_DistCheckFunc_64:
   \   0000040C   042D               CMP      R5,#+4
   \   0000040E   01D0               BEQ.N    ??Total_DistCheckFunc_65
   \   00000410   052D               CMP      R5,#+5
   \   00000412   01D1               BNE.N    ??Total_DistCheckFunc_66
   \                     ??Total_DistCheckFunc_65:
   \   00000414   666A               LDR      R6,[R4, #+36]
   \   00000416   04E0               B.N      ??Total_DistCheckFunc_62
   \                     ??Total_DistCheckFunc_66:
   \   00000418   062D               CMP      R5,#+6
   \   0000041A   01D0               BEQ.N    ??Total_DistCheckFunc_67
   \   0000041C   072D               CMP      R5,#+7
   \   0000041E   00D1               BNE.N    ??Total_DistCheckFunc_62
   \                     ??Total_DistCheckFunc_67:
   \   00000420   A66A               LDR      R6,[R4, #+40]
   \                     ??Total_DistCheckFunc_62:
   \   00000422   2068               LDR      R0,[R4, #+0]
   \   00000424   0090               STR      R0,[SP, #+0]
   \   00000426   3246               MOV      R2,R6
   \   00000428   0146               MOV      R1,R0
   \   0000042A   F8B2               UXTB     R0,R7
   \   0000042C   ........           BL       DelayCtrlFunc
   \   00000430   4FF4FA61           MOV      R1,#+2000
   \   00000434   3046               MOV      R0,R6
   \   00000436   ........           BL       ProtocolCheck
   \   0000043A   0028               CMP      R0,#+0
   \   0000043C   CAD0               BEQ.N    ??Total_DistCheckFunc_57
   \   0000043E   706A               LDR      R0,[R6, #+36]
   \   00000440   807A               LDRB     R0,[R0, #+10]
   \   00000442   A128               CMP      R0,#+161
   \   00000444   C6D1               BNE.N    ??Total_DistCheckFunc_57
   \   00000446   C2E7               B.N      ??Total_DistCheckFunc_58
   1266          			
   1267          #ifdef DIST_DEG
   1268          		SerPtr->printf("\n Step10 -> goto %d", DistStep);
   1269          #endif
   1270          			break;
   1271          
   1272          		//-----------------------------------------------------------------------//
   1273          		// Change Next ID
   1274          		case 11:
   1275          			if(DistTarID.RuID == 0xFF)
   \                     ??Total_DistCheckFunc_10:
   \   00000448   FF2A               CMP      R2,#+255
   \   0000044A   0BD1               BNE.N    ??Total_DistCheckFunc_68
   1276          			{
   1277          				if(DistType == BR_TYPE)			DistStep = 40;	// DTU Control : OFF
   \   0000044C   617A               LDRB     R1,[R4, #+9]
   \   0000044E   0229               CMP      R1,#+2
   \   00000450   01D1               BNE.N    ??Total_DistCheckFunc_69
   \                     ??Total_DistCheckFunc_70:
   \   00000452   2820               MOVS     R0,#+40
   \   00000454   4DE6               B.N      ??Total_DistCheckFunc_21
   1278          				else
   1279          				{
   1280          					if(DistTarID.HuID==0x00)	DistStep = 40;	// DTU Control : OFF
   \                     ??Total_DistCheckFunc_69:
   \   00000456   0028               CMP      R0,#+0
   \   00000458   FBD0               BEQ.N    ??Total_DistCheckFunc_70
   1281          					else
   1282          					{
   1283          						DistTarID.HuID--;
   \                     ??Total_DistCheckFunc_71:
   \   0000045A   401E               SUBS     R0,R0,#+1
   \   0000045C   6070               STRB     R0,[R4, #+1]
   1284          						DistTarID.RuID = 0xF0;
   \   0000045E   F020               MOVS     R0,#+240
   \   00000460   A070               STRB     R0,[R4, #+2]
   1285          						DistStep = 1;
   \   00000462   45E6               B.N      ??Total_DistCheckFunc_18
   1286          					}
   1287          				}
   1288          			}
   1289          			else
   1290          			{
   1291          				if(DistTarID.RuID == 0x00)
   \                     ??Total_DistCheckFunc_68:
   \   00000464   4AB9               CBNZ.N   R2,??Total_DistCheckFunc_72
   1292          				{
   1293          					if(DistType == BR_TYPE)
   \   00000466   617A               LDRB     R1,[R4, #+9]
   \   00000468   0229               CMP      R1,#+2
   \   0000046A   03D1               BNE.N    ??Total_DistCheckFunc_73
   1294          					{
   1295          						DistTarID.RuID = 0xFF;
   \                     ??Total_DistCheckFunc_74:
   \   0000046C   FF20               MOVS     R0,#+255
   \   0000046E   A070               STRB     R0,[R4, #+2]
   1296          						DistStep = 1;
   \   00000470   0120               MOVS     R0,#+1
   \   00000472   3EE6               B.N      ??Total_DistCheckFunc_21
   1297          					}
   1298          					else
   1299          					{
   1300          						if(DistTarID.HuID==0x00)
   \                     ??Total_DistCheckFunc_73:
   \   00000474   0028               CMP      R0,#+0
   \   00000476   F0D1               BNE.N    ??Total_DistCheckFunc_71
   \   00000478   F8E7               B.N      ??Total_DistCheckFunc_74
   1301          						{
   1302          							DistTarID.RuID = 0xFF;
   1303          							DistStep = 1;
   1304          						}
   1305          						else
   1306          						{
   1307          							DistTarID.HuID--;
   1308          							DistTarID.RuID = 0xF0;
   1309          							DistStep = 1;
   1310          						}
   1311          					}
   1312          				}
   1313          				else
   1314          				{
   1315          					DistTarID.RuID -= 0x10;
   \                     ??Total_DistCheckFunc_72:
   \   0000047A   A2F11000           SUB      R0,R2,#+16
   \   0000047E   A070               STRB     R0,[R4, #+2]
   1316          					DistStep = 2;
   \   00000480   0220               MOVS     R0,#+2
   \   00000482   36E6               B.N      ??Total_DistCheckFunc_21
   1317          				}
   1318          			}
   1319          #ifdef DIST_DEG
   1320          		SerPtr->printf("\n Step11 -> goto %d", DistStep);
   1321          #endif
   1322          			break;
   1323          		
   1324          		//=======================================================================//
   1325          		// HU Install/Link Fail...
   1326          		case 20:
   1327          			DistCnt = 0;
   \                     ??Total_DistCheckFunc_11:
   \   00000484   0020               MOVS     R0,#+0
   \   00000486   2072               STRB     R0,[R4, #+8]
   1328          			if(Path == HU_PATH)			DelaySts->DelayVal[Dist_MuBr].Hu_Delay = 0xFFFF;
   \   00000488   F8B2               UXTB     R0,R7
   \   0000048A   0128               CMP      R0,#+1
   \   0000048C   08D1               BNE.N    ??Total_DistCheckFunc_75
   \   0000048E   05EB0510           ADD      R0,R5,R5, LSL #+4
   \   00000492   4000               LSLS     R0,R0,#+1
   \   00000494   ....               LDR.N    R1,??DataTable11_1
   \   00000496   0968               LDR      R1,[R1, #+0]
   \   00000498   4FF6FF72           MOVW     R2,#+65535
   \   0000049C   4252               STRH     R2,[R0, R1]
   \   0000049E   0CE0               B.N      ??Total_DistCheckFunc_76
   1329          			else if(Path == RU_PATH)	DelaySts->DelayVal[Dist_MuBr].Ru_Delay[Dist_HuBr] = 0xFFFF;
   \                     ??Total_DistCheckFunc_75:
   \   000004A0   0228               CMP      R0,#+2
   \   000004A2   0AD1               BNE.N    ??Total_DistCheckFunc_76
   \   000004A4   05EB0510           ADD      R0,R5,R5, LSL #+4
   \   000004A8   ....               LDR.N    R1,??DataTable11_1
   \   000004AA   0968               LDR      R1,[R1, #+0]
   \   000004AC   01EB4000           ADD      R0,R1,R0, LSL #+1
   \   000004B0   00EB4800           ADD      R0,R0,R8, LSL #+1
   \   000004B4   4FF6FF71           MOVW     R1,#+65535
   \   000004B8   4180               STRH     R1,[R0, #+2]
   1330          			
   1331          			DistStep = 50;
   \                     ??Total_DistCheckFunc_76:
   \   000004BA   3220               MOVS     R0,#+50
   \   000004BC   19E6               B.N      ??Total_DistCheckFunc_21
   1332          #ifdef DIST_DEG
   1333          		SerPtr->printf("\n Step20 -> goto %d", DistStep);
   1334          #endif
   1335          			break;
   1336          
   1337          		//=======================================================================//
   1338          		// Response Fail...
   1339          		case 30:
   1340          			DistCnt = 0;
   \                     ??Total_DistCheckFunc_12:
   \   000004BE   0020               MOVS     R0,#+0
   \   000004C0   2072               STRB     R0,[R4, #+8]
   1341          			if(Path == HU_PATH)			DelaySts->DelayVal[Dist_MuBr].Hu_Delay = 0xFFFF;
   \   000004C2   F8B2               UXTB     R0,R7
   \   000004C4   0128               CMP      R0,#+1
   \   000004C6   08D1               BNE.N    ??Total_DistCheckFunc_77
   \   000004C8   05EB0510           ADD      R0,R5,R5, LSL #+4
   \   000004CC   4000               LSLS     R0,R0,#+1
   \   000004CE   ....               LDR.N    R1,??DataTable11_1
   \   000004D0   0968               LDR      R1,[R1, #+0]
   \   000004D2   4FF6FF72           MOVW     R2,#+65535
   \   000004D6   4252               STRH     R2,[R0, R1]
   \   000004D8   BBE7               B.N      ??Total_DistCheckFunc_70
   1342          			else if(Path == RU_PATH)	DelaySts->DelayVal[Dist_MuBr].Ru_Delay[Dist_HuBr] = 0xFFFF;
   \                     ??Total_DistCheckFunc_77:
   \   000004DA   0228               CMP      R0,#+2
   \   000004DC   B9D1               BNE.N    ??Total_DistCheckFunc_70
   \   000004DE   05EB0510           ADD      R0,R5,R5, LSL #+4
   \   000004E2   ....               LDR.N    R1,??DataTable11_1
   \   000004E4   0968               LDR      R1,[R1, #+0]
   \   000004E6   01EB4000           ADD      R0,R1,R0, LSL #+1
   \   000004EA   00EB4800           ADD      R0,R0,R8, LSL #+1
   \   000004EE   4FF6FF71           MOVW     R1,#+65535
   \   000004F2   4180               STRH     R1,[R0, #+2]
   \   000004F4   ADE7               B.N      ??Total_DistCheckFunc_70
   1343          			
   1344          			DistStep = 40;
   1345          #ifdef DIST_DEG
   1346          		SerPtr->printf("\n Step30 -> goto %d", DistStep);
   1347          #endif
   1348          			break;
   1349          
   1350          		//=======================================================================//
   1351          		// DTU Control : OFF
   1352          		case 40:
   1353          			DtuLoopBackControl(_OFF, 0);
   \                     ??Total_DistCheckFunc_13:
   \   000004F6   0021               MOVS     R1,#+0
   \   000004F8   0020               MOVS     R0,#+0
   \   000004FA   ........           BL       DtuLoopBackControl
   1354          
   1355          			DistStep = 50;
   \   000004FE   3220               MOVS     R0,#+50
   \   00000500   F7E5               B.N      ??Total_DistCheckFunc_21
   \                     ??Total_DistCheckFunc_14:
   \   00000502   03A8               ADD      R0,SP,#+12
   \   00000504   ........           LDR.W    R1,??DataTable12_1
   \   00000508   0322               MOVS     R2,#+3
   \   0000050A   ........           BL       __aeabi_memcpy
   \   0000050E   02A8               ADD      R0,SP,#+8
   \   00000510   ........           LDR.W    R1,??DataTable12_3
   \   00000514   0322               MOVS     R2,#+3
   \   00000516   ........           BL       __aeabi_memcpy
   1356          #ifdef DIST_DEG
   1357          		SerPtr->printf("\n Step40 -> goto %d\n", DistStep);
   1358          #endif
   1359          			break;
   1360          
   1361          		//=======================================================================//
   1362          		// Result Send
   1363          		case 50:
   1364          			SioDataAckTx(MyID, GuiID, (INT8U*)DelaySts, sizeof(_STS_DELAY), DelayMea1EaRSPS, PcSer);
   \   0000051A   ........           LDR.W    R0,??DataTable12_2
   \   0000051E   0068               LDR      R0,[R0, #+0]
   \   00000520   0190               STR      R0,[SP, #+4]
   \   00000522   B420               MOVS     R0,#+180
   \   00000524   0090               STR      R0,[SP, #+0]
   \   00000526   4FF49373           MOV      R3,#+294
   \   0000052A   ....               LDR.N    R0,??DataTable11_1
   \   0000052C   0268               LDR      R2,[R0, #+0]
   \   0000052E   0399               LDR      R1,[SP, #+12]
   \   00000530   0298               LDR      R0,[SP, #+8]
   \   00000532   ........           BL       SioDataAckTx
   1365          			DistStep = 0;
   \   00000536   0020               MOVS     R0,#+0
   1366          			DistFlag = _OFF;
   \   00000538   E080               STRH     R0,[R4, #+6]
   1367          #ifdef DIST_DEG
   1368          	SerPtr->printf("\n Step50 -> Reponse Send\n");
   1369          #endif
   1370          			break;
   1371          	}
   1372          }
   \                     ??Total_DistCheckFunc_15:
   \   0000053A   04B0               ADD      SP,SP,#+16
   \   0000053C   BDE8F087           POP      {R4-R10,PC}      ;; return
   1373          
   1374          
   1375          //=======================================================================//

   \                                 In section .text, align 2, keep-with-next
   1376          void LoopBackCtrlFunc(INT8U tPath, SubIDStr	tID,  __ProtocolPtr *nPtr, INT8U OnSts)
   1377          {
   \                     LoopBackCtrlFunc:
   \   00000000   F2B5               PUSH     {R1,R4-R7,LR}
   \   00000002   BCB0               SUB      SP,SP,#+240
   \   00000004   0746               MOV      R7,R0
   \   00000006   1446               MOV      R4,R2
   \   00000008   1D46               MOV      R5,R3
   1378          	INT8U	i = 0;
   1379          			
   1380          	MuxControl(tID.HuID);
   \   0000000A   9DF8F100           LDRB     R0,[SP, #+241]
   \   0000000E   ........           BL       MuxControl
   1381          	
   1382          	if(tPath == HU_PATH)
   \   00000012   ........           LDR.W    R6,??DataTable12_3
   \   00000016   012F               CMP      R7,#+1
   \   00000018   15D1               BNE.N    ??LoopBackCtrlFunc_0
   1383          	{
   1384          		__HU_CTRL	CtrlB, *Ctrl = &CtrlB;
   1385          
   1386          		for(i=0; i<sizeof(HuCtrlFlagSts); i++)	*((INT8U*)Ctrl+i) = 0;
   \   0000001A   2221               MOVS     R1,#+34
   \   0000001C   03A8               ADD      R0,SP,#+12
   \   0000001E   ........           BL       __aeabi_memclr4
   1387          			
   1388          		Ctrl->CtrlFlag.System.LoopBack = 1;
   \   00000022   9DF81C00           LDRB     R0,[SP, #+28]
   \   00000026   40F00400           ORR      R0,R0,#0x4
   \   0000002A   8DF81C00           STRB     R0,[SP, #+28]
   1389          		Ctrl->LoopBack = OnSts;
   \   0000002E   8DF89F50           STRB     R5,[SP, #+159]
   \   00000032   02A8               ADD      R0,SP,#+8
   \   00000034   3146               MOV      R1,R6
   \   00000036   0322               MOVS     R2,#+3
   \   00000038   ........           BL       __aeabi_memcpy
   1390          
   1391          		SioDataAckTx(MyID, tID, (INT8U*)Ctrl, sizeof(__HU_CTRL), ControlRQST, nPtr);
   \   0000003C   0194               STR      R4,[SP, #+4]
   \   0000003E   2120               MOVS     R0,#+33
   \   00000040   0090               STR      R0,[SP, #+0]
   \   00000042   9523               MOVS     R3,#+149
   \   00000044   14E0               B.N      ??LoopBackCtrlFunc_1
   1392          	}
   1393          	else
   1394          	{
   1395          		__RU_CTRL	CtrlB, *Ctrl = &CtrlB;
   1396          
   1397          		for(i=0; i<sizeof(RuCtrlFlagSts); i++)	*((INT8U*)Ctrl+i) = 0;
   \                     ??LoopBackCtrlFunc_0:
   \   00000046   1D21               MOVS     R1,#+29
   \   00000048   03A8               ADD      R0,SP,#+12
   \   0000004A   ........           BL       __aeabi_memclr4
   1398          
   1399          		Ctrl->CtrlFlag.System.LoopBack = 1;
   \   0000004E   9DF80C00           LDRB     R0,[SP, #+12]
   \   00000052   40F04000           ORR      R0,R0,#0x40
   \   00000056   8DF80C00           STRB     R0,[SP, #+12]
   1400          		Ctrl->LoopBack = OnSts;
   \   0000005A   8DF8ED50           STRB     R5,[SP, #+237]
   \   0000005E   02A8               ADD      R0,SP,#+8
   \   00000060   3146               MOV      R1,R6
   \   00000062   0322               MOVS     R2,#+3
   \   00000064   ........           BL       __aeabi_memcpy
   1401          
   1402          		SioDataAckTx(MyID, tID, (INT8U*)Ctrl, sizeof(__RU_CTRL), ControlRQST, nPtr);
   \   00000068   0194               STR      R4,[SP, #+4]
   \   0000006A   2120               MOVS     R0,#+33
   \   0000006C   0090               STR      R0,[SP, #+0]
   \   0000006E   E323               MOVS     R3,#+227
   1403          	}
   \                     ??LoopBackCtrlFunc_1:
   \   00000070   ....               B.N      ?Subroutine2
   1404          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine2:
   \   00000000   03AA               ADD      R2,SP,#+12
   \   00000002   3C99               LDR      R1,[SP, #+240]
   \   00000004   0298               LDR      R0,[SP, #+8]
   \   00000006   ........           BL       SioDataAckTx
   \   0000000A   3DB0               ADD      SP,SP,#+244
   \   0000000C   F0BD               POP      {R4-R7,PC}       ;; return
   1405          

   \                                 In section .text, align 2, keep-with-next
   1406          void DelayCtrlFunc(INT8U tPath, SubIDStr	tID,  __ProtocolPtr *nPtr)
   1407          {
   \                     DelayCtrlFunc:
   \   00000000   F2B5               PUSH     {R1,R4-R7,LR}
   \   00000002   BCB0               SUB      SP,SP,#+240
   \   00000004   1446               MOV      R4,R2
   1408          	INT16U	i = 0;
   1409          	INT8U	AlmCnt = 0;
   \   00000006   0026               MOVS     R6,#+0
   1410          	INT32S	iVal;
   1411          
   1412          	INT8U	Dist_MuBr = 0;
   1413          	INT8U	Dist_HuBr = 0;
   1414          	
   1415          	Dist_MuBr = tID.HuID;
   \   00000008   9DF8F170           LDRB     R7,[SP, #+241]
   1416          	Dist_HuBr = (tID.RuID>>4)&0x0F;
   \   0000000C   9DF8F200           LDRB     R0,[SP, #+242]
   \   00000010   0509               LSRS     R5,R0,#+4
   1417          
   1418          	//-----------------------------------------------------------------------//
   1419          	MuxControl(tID.HuID);
   \   00000012   3846               MOV      R0,R7
   \   00000014   ........           BL       MuxControl
   1420          	
   1421          	__RU_CTRL	CtrlB, *Ctrl = &CtrlB;
   1422          
   1423          	for(i=0; i<sizeof(RuCtrlFlagSts); i++)	*((INT8U*)Ctrl+i) = 0;
   \   00000018   1D21               MOVS     R1,#+29
   \   0000001A   03A8               ADD      R0,SP,#+12
   \   0000001C   ........           BL       __aeabi_memclr4
   1424          
   1425          	//-----------------------------------------------------------------------//
   1426          	if(DistBand == BAND_ALL)
   \   00000020   ........           LDR.W    R0,??DataTable12_5
   \   00000024   0078               LDRB     R0,[R0, #+0]
   \   00000026   0328               CMP      R0,#+3
   \   00000028   5BD1               BNE.N    ??DelayCtrlFunc_0
   1427          	{
   1428          		iVal = DelaySts->TimeAdv_21G*2 - DelaySts->DelayVal[Dist_MuBr].Ru_Delay[Dist_HuBr]/2 + 7;
   \   0000002A   ....               LDR.N    R0,??DataTable11_1
   \   0000002C   0068               LDR      R0,[R0, #+0]
   \   0000002E   07EB0711           ADD      R1,R7,R7, LSL #+4
   \   00000032   00EB4101           ADD      R1,R0,R1, LSL #+1
   \   00000036   01EB4501           ADD      R1,R1,R5, LSL #+1
   \   0000003A   B0F81021           LDRH     R2,[R0, #+272]
   \   0000003E   4B88               LDRH     R3,[R1, #+2]
   \   00000040   5B08               LSRS     R3,R3,#+1
   \   00000042   C3EB4202           RSB      R2,R3,R2, LSL #+1
   \   00000046   D21D               ADDS     R2,R2,#+7
   1429          		if(iVal > 102)
   \   00000048   672A               CMP      R2,#+103
   \   0000004A   0EDB               BLT.N    ??DelayCtrlFunc_1
   1430          		{
   1431          			Ctrl->CtrlFlag.RdtuCommon.DL_Delay_21G = 1;
   1432          			Ctrl->CtrlFlag.RdtuCommon.UL_Delay_21G = 1;
   \   0000004C   9DF81030           LDRB     R3,[SP, #+16]
   \   00000050   43F00303           ORR      R3,R3,#0x3
   \   00000054   8DF81030           STRB     R3,[SP, #+16]
   1433          			Ctrl->DL_Delay_21G = (INT16U)iVal-102;
   \   00000058   1346               MOV      R3,R2
   \   0000005A   663B               SUBS     R3,R3,#+102
   \   0000005C   ADF83F30           STRH     R3,[SP, #+63]
   1434          			Ctrl->UL_Delay_21G = (INT16U)iVal-90;
   \   00000060   0DF13F03           ADD      R3,SP,#+63
   \   00000064   5A3A               SUBS     R2,R2,#+90
   \   00000066   5A80               STRH     R2,[R3, #+2]
   \   00000068   00E0               B.N      ??DelayCtrlFunc_2
   1435          		}
   1436          		else			AlmCnt++;
   \                     ??DelayCtrlFunc_1:
   \   0000006A   0126               MOVS     R6,#+1
   1437          	
   1438          		iVal = DelaySts->TimeAdv_900M*2 - DelaySts->DelayVal[Dist_MuBr].Ru_Delay[Dist_HuBr]/2 + 7;
   \                     ??DelayCtrlFunc_2:
   \   0000006C   00F21010           ADDW     R0,R0,#+272
   \   00000070   4088               LDRH     R0,[R0, #+2]
   \   00000072   4988               LDRH     R1,[R1, #+2]
   \   00000074   4908               LSRS     R1,R1,#+1
   \   00000076   C1EB4000           RSB      R0,R1,R0, LSL #+1
   \   0000007A   C01D               ADDS     R0,R0,#+7
   1439          		if(iVal > 106)
   \   0000007C   6B28               CMP      R0,#+107
   \   0000007E   0DDB               BLT.N    ??DelayCtrlFunc_3
   1440          		{
   1441          			Ctrl->CtrlFlag.RdtuCommon.DL_Delay_900M = 1;
   1442          			Ctrl->CtrlFlag.RdtuCommon.UL_Delay_900M = 1;
   \   00000080   9DF81010           LDRB     R1,[SP, #+16]
   \   00000084   41F00C01           ORR      R1,R1,#0xC
   \   00000088   8DF81010           STRB     R1,[SP, #+16]
   1443          			Ctrl->DL_Delay_900M = (INT16U)iVal-106;
   \   0000008C   0DF13F01           ADD      R1,SP,#+63
   \   00000090   0246               MOV      R2,R0
   \   00000092   6A3A               SUBS     R2,R2,#+106
   \   00000094   8A80               STRH     R2,[R1, #+4]
   1444          			Ctrl->UL_Delay_900M = (INT16U)iVal-91;
   \   00000096   5B38               SUBS     R0,R0,#+91
   \   00000098   C880               STRH     R0,[R1, #+6]
   \   0000009A   00E0               B.N      ??DelayCtrlFunc_4
   1445          		}
   1446          		else			AlmCnt++;
   \                     ??DelayCtrlFunc_3:
   \   0000009C   761C               ADDS     R6,R6,#+1
   1447          	
   1448          		iVal = DelaySts->TimeAdv_25G*2 - DelaySts->DelayVal[Dist_MuBr].Ru_Delay[Dist_HuBr]/2 + 7;
   \                     ??DelayCtrlFunc_4:
   \   0000009E   ....               LDR.N    R0,??DataTable11_1
   \   000000A0   0068               LDR      R0,[R0, #+0]
   \   000000A2   00F21011           ADDW     R1,R0,#+272
   \   000000A6   8988               LDRH     R1,[R1, #+4]
   \   000000A8   07EB0712           ADD      R2,R7,R7, LSL #+4
   \   000000AC   00EB4200           ADD      R0,R0,R2, LSL #+1
   \   000000B0   00EB4500           ADD      R0,R0,R5, LSL #+1
   \   000000B4   4088               LDRH     R0,[R0, #+2]
   \   000000B6   4008               LSRS     R0,R0,#+1
   \   000000B8   C0EB4100           RSB      R0,R0,R1, LSL #+1
   \   000000BC   C01D               ADDS     R0,R0,#+7
   1449          		if(iVal > 95)
   \   000000BE   6028               CMP      R0,#+96
   \   000000C0   0DDB               BLT.N    ??DelayCtrlFunc_5
   1450          		{
   1451          			Ctrl->CtrlFlag.RdtuCommon.DL_Delay_25G = 1;
   1452          			Ctrl->CtrlFlag.RdtuCommon.UL_Delay_25G = 1;
   \   000000C2   9DF81010           LDRB     R1,[SP, #+16]
   \   000000C6   41F03001           ORR      R1,R1,#0x30
   \   000000CA   8DF81010           STRB     R1,[SP, #+16]
   1453          			Ctrl->DL_Delay_25G = (INT16U)iVal-95;
   \   000000CE   0DF13F01           ADD      R1,SP,#+63
   \   000000D2   0246               MOV      R2,R0
   \   000000D4   5F3A               SUBS     R2,R2,#+95
   \   000000D6   0A81               STRH     R2,[R1, #+8]
   1454          			Ctrl->UL_Delay_25G = (INT16U)iVal-92;
   \   000000D8   5C38               SUBS     R0,R0,#+92
   \   000000DA   4881               STRH     R0,[R1, #+10]
   \   000000DC   48E0               B.N      ??DelayCtrlFunc_6
   1455          		}
   1456          		else			AlmCnt++;
   \                     ??DelayCtrlFunc_5:
   \   000000DE   761C               ADDS     R6,R6,#+1
   \   000000E0   46E0               B.N      ??DelayCtrlFunc_6
   1457          	}
   1458          	else
   1459          	{
   1460          		if(DistBand == BAND_21G)
   \                     ??DelayCtrlFunc_0:
   \   000000E2   08BB               CBNZ.N   R0,??DelayCtrlFunc_7
   1461          		{
   1462          			iVal = DelaySts->TimeAdv_21G*2 - DelaySts->DelayVal[Dist_MuBr].Ru_Delay[Dist_HuBr]/2 + 7;
   \   000000E4   ....               LDR.N    R0,??DataTable11_1
   \   000000E6   0068               LDR      R0,[R0, #+0]
   \   000000E8   B0F81011           LDRH     R1,[R0, #+272]
   \   000000EC   07EB0712           ADD      R2,R7,R7, LSL #+4
   \   000000F0   00EB4200           ADD      R0,R0,R2, LSL #+1
   \   000000F4   00EB4500           ADD      R0,R0,R5, LSL #+1
   \   000000F8   4088               LDRH     R0,[R0, #+2]
   \   000000FA   4008               LSRS     R0,R0,#+1
   \   000000FC   C0EB4100           RSB      R0,R0,R1, LSL #+1
   \   00000100   C01D               ADDS     R0,R0,#+7
   1463          			if(iVal > 102)
   \   00000102   6728               CMP      R0,#+103
   \   00000104   0EDB               BLT.N    ??DelayCtrlFunc_8
   1464          			{
   1465          				Ctrl->CtrlFlag.RdtuCommon.DL_Delay_21G = 1;
   1466          				Ctrl->CtrlFlag.RdtuCommon.UL_Delay_21G = 1;
   \   00000106   9DF81010           LDRB     R1,[SP, #+16]
   \   0000010A   41F00301           ORR      R1,R1,#0x3
   \   0000010E   8DF81010           STRB     R1,[SP, #+16]
   1467          				Ctrl->DL_Delay_21G = (INT16U)iVal-102;
   \   00000112   0146               MOV      R1,R0
   \   00000114   6639               SUBS     R1,R1,#+102
   \   00000116   ADF83F10           STRH     R1,[SP, #+63]
   1468          				Ctrl->UL_Delay_21G = (INT16U)iVal-90;
   \   0000011A   0DF13F01           ADD      R1,SP,#+63
   \   0000011E   5A38               SUBS     R0,R0,#+90
   \   00000120   4880               STRH     R0,[R1, #+2]
   \   00000122   25E0               B.N      ??DelayCtrlFunc_6
   1469          			}
   1470          			else			AlmCnt++;
   \                     ??DelayCtrlFunc_8:
   \   00000124   0126               MOVS     R6,#+1
   \   00000126   23E0               B.N      ??DelayCtrlFunc_6
   1471          		}
   1472          		if(DistBand == BAND_900M)
   \                     ??DelayCtrlFunc_7:
   \   00000128   0128               CMP      R0,#+1
   \   0000012A   1FD1               BNE.N    ??DelayCtrlFunc_9
   1473          		{
   1474          			iVal = DelaySts->TimeAdv_900M*2 - DelaySts->DelayVal[Dist_MuBr].Ru_Delay[Dist_HuBr]/2 + 7;
   \   0000012C   ....               LDR.N    R0,??DataTable11_1
   \   0000012E   0068               LDR      R0,[R0, #+0]
   \   00000130   00F21011           ADDW     R1,R0,#+272
   \   00000134   4988               LDRH     R1,[R1, #+2]
   \   00000136   07EB0712           ADD      R2,R7,R7, LSL #+4
   \   0000013A   00EB4200           ADD      R0,R0,R2, LSL #+1
   \   0000013E   00EB4500           ADD      R0,R0,R5, LSL #+1
   \   00000142   4088               LDRH     R0,[R0, #+2]
   \   00000144   4008               LSRS     R0,R0,#+1
   \   00000146   C0EB4100           RSB      R0,R0,R1, LSL #+1
   \   0000014A   C01D               ADDS     R0,R0,#+7
   1475          			if(iVal > 106)
   \   0000014C   6B28               CMP      R0,#+107
   \   0000014E   E9DB               BLT.N    ??DelayCtrlFunc_8
   1476          			{
   1477          				Ctrl->CtrlFlag.RdtuCommon.DL_Delay_900M = 1;
   1478          				Ctrl->CtrlFlag.RdtuCommon.UL_Delay_900M = 1;
   \   00000150   9DF81010           LDRB     R1,[SP, #+16]
   \   00000154   41F00C01           ORR      R1,R1,#0xC
   \   00000158   8DF81010           STRB     R1,[SP, #+16]
   1479          				Ctrl->DL_Delay_900M = (INT16U)iVal-106;
   \   0000015C   0DF13F01           ADD      R1,SP,#+63
   \   00000160   0246               MOV      R2,R0
   \   00000162   6A3A               SUBS     R2,R2,#+106
   \   00000164   8A80               STRH     R2,[R1, #+4]
   1480          				Ctrl->UL_Delay_900M = (INT16U)iVal-91;
   \   00000166   5B38               SUBS     R0,R0,#+91
   \   00000168   C880               STRH     R0,[R1, #+6]
   \   0000016A   01E0               B.N      ??DelayCtrlFunc_6
   1481          			}
   1482          			else			AlmCnt++;
   1483          		}
   1484          		if(DistBand == BAND_25G)
   \                     ??DelayCtrlFunc_9:
   \   0000016C   0228               CMP      R0,#+2
   \   0000016E   96D0               BEQ.N    ??DelayCtrlFunc_4
   1485          		{
   1486          			iVal = DelaySts->TimeAdv_25G*2 - DelaySts->DelayVal[Dist_MuBr].Ru_Delay[Dist_HuBr]/2 + 7;
   1487          			if(iVal > 95)
   1488          			{
   1489          				Ctrl->CtrlFlag.RdtuCommon.DL_Delay_25G = 1;
   1490          				Ctrl->CtrlFlag.RdtuCommon.UL_Delay_25G = 1;
   1491          				Ctrl->DL_Delay_25G = (INT16U)iVal-95;
   1492          				Ctrl->UL_Delay_25G = (INT16U)iVal-92;
   1493          			}
   1494          			else			AlmCnt++;
   1495          		}
   1496          	}
   1497          
   1498          	// LoopBack OFF...
   1499          	Ctrl->CtrlFlag.System.LoopBack = 1;
   \                     ??DelayCtrlFunc_6:
   \   00000170   9DF80C00           LDRB     R0,[SP, #+12]
   \   00000174   40F04000           ORR      R0,R0,#0x40
   \   00000178   8DF80C00           STRB     R0,[SP, #+12]
   1500          	Ctrl->LoopBack = _OFF;
   \   0000017C   0020               MOVS     R0,#+0
   \   0000017E   8DF8ED00           STRB     R0,[SP, #+237]
   1501          
   1502          	if(AlmCnt!=0)
   \   00000182   F6B2               UXTB     R6,R6
   \   00000184   26B1               CBZ.N    R6,??DelayCtrlFunc_10
   1503          	{
   1504          		DelayAlarmCheck(Dist_MuBr, Dist_HuBr, _Alarm);
   \   00000186   0122               MOVS     R2,#+1
   \   00000188   2946               MOV      R1,R5
   \   0000018A   3846               MOV      R0,R7
   \   0000018C   ........           BL       DelayAlarmCheck
   \                     ??DelayCtrlFunc_10:
   \   00000190   02A8               ADD      R0,SP,#+8
   \   00000192   ....               LDR.N    R1,??DataTable12_3
   \   00000194   0322               MOVS     R2,#+3
   \   00000196   ........           BL       __aeabi_memcpy
   1505          	}
   1506          
   1507          	SioDataAckTx(MyID, tID, (INT8U*)Ctrl, sizeof(__RU_CTRL), ControlRQST, nPtr);
   \   0000019A   0194               STR      R4,[SP, #+4]
   \   0000019C   2120               MOVS     R0,#+33
   \   0000019E   0090               STR      R0,[SP, #+0]
   \   000001A0   E323               MOVS     R3,#+227
   \   000001A2                      REQUIRE ?Subroutine2
   \   000001A2                      ;; // Fall through to label ?Subroutine2
   1508          }
   1509          
   1510          
   1511          

   \                                 In section .text, align 2, keep-with-next
   1512          void DtuLoopBackControl(INT8U CtrlVal, INT8U TarBr)
   1513          {
   \                     DtuLoopBackControl:
   \   00000000   30B5               PUSH     {R4,R5,LR}
   \   00000002   85B0               SUB      SP,SP,#+20
   1514          	INT8U	i;
   1515          
   1516          	for(i=0; i<sizeof(__F_MU_CTRL); i++)	*((INT8U*)DtuControl+i) = 0;
   \   00000004   0022               MOVS     R2,#+0
   \   00000006   ....               LDR.N    R4,??DataTable12_6
   \   00000008   0025               MOVS     R5,#+0
   \                     ??DtuLoopBackControl_0:
   \   0000000A   2368               LDR      R3,[R4, #+0]
   \   0000000C   D554               STRB     R5,[R2, R3]
   \   0000000E   521C               ADDS     R2,R2,#+1
   \   00000010   2A2A               CMP      R2,#+42
   \   00000012   FAD3               BCC.N    ??DtuLoopBackControl_0
   1517          
   1518          	MuStatus->MeaLoop = CtrlVal;
   \   00000014   ....               LDR.N    R2,??DataTable12_4
   \   00000016   1268               LDR      R2,[R2, #+0]
   \   00000018   82F8AC03           STRB     R0,[R2, #+940]
   1519          			
   1520          	DtuControl->ControlFlag.MeaLoop = 1;
   \   0000001C   2268               LDR      R2,[R4, #+0]
   \   0000001E   1378               LDRB     R3,[R2, #+0]
   \   00000020   43F00103           ORR      R3,R3,#0x1
   \   00000024   1370               STRB     R3,[R2, #+0]
   1521          	DtuControl->ControlFlag.MeaBranch = 1;
   \   00000026   2268               LDR      R2,[R4, #+0]
   \   00000028   1378               LDRB     R3,[R2, #+0]
   \   0000002A   43F00203           ORR      R3,R3,#0x2
   \   0000002E   1370               STRB     R3,[R2, #+0]
   1522          
   1523          	DtuControl->MeaLoop = CtrlVal;
   \   00000030   2268               LDR      R2,[R4, #+0]
   \   00000032   5071               STRB     R0,[R2, #+5]
   1524          	DtuControl->MeaBranch = TarBr;
   \   00000034   2068               LDR      R0,[R4, #+0]
   \   00000036   8171               STRB     R1,[R0, #+6]
   1525          
   1526          	GetDtuCommand();
   \   00000038   ........           BL       GetDtuCommand
   1527          	
   1528          	SioDataAckTx(MyID, DtuID, (INT8U*)DtuControl, sizeof(__F_MU_CTRL), ControlRQST, DtuSer);
   \   0000003C   ....               LDR.N    R5,??DataTable12_7
   \   0000003E   03A8               ADD      R0,SP,#+12
   \   00000040   ....               LDR.N    R1,??DataTable12_8
   \   00000042   0322               MOVS     R2,#+3
   \   00000044   ........           BL       __aeabi_memcpy
   \   00000048   02A8               ADD      R0,SP,#+8
   \   0000004A   ....               LDR.N    R1,??DataTable12_3
   \   0000004C   0322               MOVS     R2,#+3
   \   0000004E   ........           BL       __aeabi_memcpy
   \   00000052   2868               LDR      R0,[R5, #+0]
   \   00000054   0190               STR      R0,[SP, #+4]
   \   00000056   2120               MOVS     R0,#+33
   \   00000058   0090               STR      R0,[SP, #+0]
   \   0000005A   2A23               MOVS     R3,#+42
   \   0000005C   2268               LDR      R2,[R4, #+0]
   \   0000005E   0399               LDR      R1,[SP, #+12]
   \   00000060   0298               LDR      R0,[SP, #+8]
   \   00000062   ........           BL       SioDataAckTx
   1529          				
   1530          	if(ProtocolCheck(DtuSer, (Time1Sec*2L)))
   \   00000066   4FF4FA61           MOV      R1,#+2000
   \   0000006A   2868               LDR      R0,[R5, #+0]
   \   0000006C   ........           BL       ProtocolCheck
   \   00000070   10B1               CBZ.N    R0,??DtuLoopBackControl_1
   1531          	{
   1532          		DtuProtocolComCheck(DtuSer);
   \   00000072   2868               LDR      R0,[R5, #+0]
   \   00000074   ........           BL       DtuProtocolComCheck
   1533          #ifdef DIST_DEG
   1534          		SerPtr->printf("\n Measure Status -> %x", DtuStatus->MeaSts);
   1535          #endif
   1536          
   1537          
   1538          	}
   1539          	EndDtuCommand();
   \                     ??DtuLoopBackControl_1:
   \   00000078   ........           BL       EndDtuCommand
   1540          }
   \   0000007C   05B0               ADD      SP,SP,#+20
   \   0000007E   30BD               POP      {R4,R5,PC}       ;; return
   1541          
   1542          
   1543          //=======================================================================//

   \                                 In section .text, align 4, keep-with-next
   1544          void DelayAlarmCheck(INT8U Mu_BrID, INT8U Hu_BrID, INT8U AlmSts)
   1545          {
   1546          	switch(Hu_BrID)
   \                     DelayAlarmCheck:
   \   00000000   0F29               CMP      R1,#+15
   \   00000002   00F2A280           BHI.W    ??DelayAlarmCheck_1
   \   00000006   DFE801F0           TBB      [PC, R1]
   \                     ??DelayAlarmCheck_0:
   \   0000000A   08111A23           DC8      0x8,0x11,0x1A,0x23
   \   0000000E   2C353E47           DC8      0x2C,0x35,0x3E,0x47
   \   00000012   505A646E           DC8      0x50,0x5A,0x64,0x6E
   \   00000016   78828C96           DC8      0x78,0x82,0x8C,0x96
   1547          	{
   1548          		case 0:		DelaySts->DelayAlarm[Mu_BrID].Br1_RuAlarm = AlmSts;		break;
   \                     ??DelayAlarmCheck_2:
   \   0000001A   ....               LDR.N    R1,??DataTable12_9
   \   0000001C   0968               LDR      R1,[R1, #+0]
   \   0000001E   01EB4000           ADD      R0,R1,R0, LSL #+1
   \   00000022   90F81611           LDRB     R1,[R0, #+278]
   \   00000026   62F30001           BFI      R1,R2,#+0,#+1
   \                     ??DelayAlarmCheck_3:
   \   0000002A   ....               B.N      ?Subroutine0
   1549          		case 1:		DelaySts->DelayAlarm[Mu_BrID].Br2_RuAlarm = AlmSts;		break;
   \                     ??DelayAlarmCheck_4:
   \   0000002C   ....               LDR.N    R1,??DataTable12_9
   \   0000002E   0968               LDR      R1,[R1, #+0]
   \   00000030   01EB4000           ADD      R0,R1,R0, LSL #+1
   \   00000034   90F81611           LDRB     R1,[R0, #+278]
   \   00000038   62F34101           BFI      R1,R2,#+1,#+1
   \   0000003C   F5E7               B.N      ??DelayAlarmCheck_3
   1550          		case 2:		DelaySts->DelayAlarm[Mu_BrID].Br3_RuAlarm = AlmSts;		break;
   \                     ??DelayAlarmCheck_5:
   \   0000003E   ....               LDR.N    R1,??DataTable12_9
   \   00000040   0968               LDR      R1,[R1, #+0]
   \   00000042   01EB4000           ADD      R0,R1,R0, LSL #+1
   \   00000046   90F81611           LDRB     R1,[R0, #+278]
   \   0000004A   62F38201           BFI      R1,R2,#+2,#+1
   \                     ??DelayAlarmCheck_6:
   \   0000004E   ....               B.N      ?Subroutine0
   1551          		case 3:		DelaySts->DelayAlarm[Mu_BrID].Br4_RuAlarm = AlmSts;		break;
   \                     ??DelayAlarmCheck_7:
   \   00000050   ....               LDR.N    R1,??DataTable12_9
   \   00000052   0968               LDR      R1,[R1, #+0]
   \   00000054   01EB4000           ADD      R0,R1,R0, LSL #+1
   \   00000058   90F81611           LDRB     R1,[R0, #+278]
   \   0000005C   62F3C301           BFI      R1,R2,#+3,#+1
   \   00000060   E3E7               B.N      ??DelayAlarmCheck_3
   1552          		case 4:		DelaySts->DelayAlarm[Mu_BrID].Br5_RuAlarm = AlmSts;		break;
   \                     ??DelayAlarmCheck_8:
   \   00000062   ....               LDR.N    R1,??DataTable12_9
   \   00000064   0968               LDR      R1,[R1, #+0]
   \   00000066   01EB4000           ADD      R0,R1,R0, LSL #+1
   \   0000006A   90F81611           LDRB     R1,[R0, #+278]
   \   0000006E   62F30411           BFI      R1,R2,#+4,#+1
   \   00000072   ECE7               B.N      ??DelayAlarmCheck_6
   1553          		case 5:		DelaySts->DelayAlarm[Mu_BrID].Br6_RuAlarm = AlmSts;		break;
   \                     ??DelayAlarmCheck_9:
   \   00000074   ....               LDR.N    R1,??DataTable12_9
   \   00000076   0968               LDR      R1,[R1, #+0]
   \   00000078   01EB4000           ADD      R0,R1,R0, LSL #+1
   \   0000007C   90F81611           LDRB     R1,[R0, #+278]
   \   00000080   62F34511           BFI      R1,R2,#+5,#+1
   \   00000084   D1E7               B.N      ??DelayAlarmCheck_3
   1554          		case 6:		DelaySts->DelayAlarm[Mu_BrID].Br7_RuAlarm = AlmSts;		break;
   \                     ??DelayAlarmCheck_10:
   \   00000086   ....               LDR.N    R1,??DataTable12_9
   \   00000088   0968               LDR      R1,[R1, #+0]
   \   0000008A   01EB4000           ADD      R0,R1,R0, LSL #+1
   \   0000008E   90F81611           LDRB     R1,[R0, #+278]
   \   00000092   62F38611           BFI      R1,R2,#+6,#+1
   \   00000096   ....               B.N      ?Subroutine0
   1555          		case 7:		DelaySts->DelayAlarm[Mu_BrID].Br8_RuAlarm = AlmSts;		break;
   \                     ??DelayAlarmCheck_11:
   \   00000098   ....               LDR.N    R1,??DataTable12_9
   \   0000009A   0968               LDR      R1,[R1, #+0]
   \   0000009C   01EB4000           ADD      R0,R1,R0, LSL #+1
   \   000000A0   90F81611           LDRB     R1,[R0, #+278]
   \   000000A4   62F3C711           BFI      R1,R2,#+7,#+1
   \   000000A8   BFE7               B.N      ??DelayAlarmCheck_3
   1556          		case 8:		DelaySts->DelayAlarm[Mu_BrID].Br9_RuAlarm = AlmSts;		break;
   \                     ??DelayAlarmCheck_12:
   \   000000AA   ....               LDR.N    R1,??DataTable12_9
   \   000000AC   0968               LDR      R1,[R1, #+0]
   \   000000AE   01EB4000           ADD      R0,R1,R0, LSL #+1
   \   000000B2   00F21610           ADDW     R0,R0,#+278
   \   000000B6   4178               LDRB     R1,[R0, #+1]
   \   000000B8   62F30001           BFI      R1,R2,#+0,#+1
   \   000000BC   44E0               B.N      ??DelayAlarmCheck_13
   1557          		case 9:		DelaySts->DelayAlarm[Mu_BrID].Br10_RuAlarm = AlmSts;	break;
   \                     ??DelayAlarmCheck_14:
   \   000000BE   ....               LDR.N    R1,??DataTable12_9
   \   000000C0   0968               LDR      R1,[R1, #+0]
   \   000000C2   01EB4000           ADD      R0,R1,R0, LSL #+1
   \   000000C6   00F21610           ADDW     R0,R0,#+278
   \   000000CA   4178               LDRB     R1,[R0, #+1]
   \   000000CC   62F34101           BFI      R1,R2,#+1,#+1
   \   000000D0   3AE0               B.N      ??DelayAlarmCheck_13
   1558          		case 10:	DelaySts->DelayAlarm[Mu_BrID].Br11_RuAlarm = AlmSts;	break;
   \                     ??DelayAlarmCheck_15:
   \   000000D2   ....               LDR.N    R1,??DataTable12_9
   \   000000D4   0968               LDR      R1,[R1, #+0]
   \   000000D6   01EB4000           ADD      R0,R1,R0, LSL #+1
   \   000000DA   00F21610           ADDW     R0,R0,#+278
   \   000000DE   4178               LDRB     R1,[R0, #+1]
   \   000000E0   62F38201           BFI      R1,R2,#+2,#+1
   \   000000E4   30E0               B.N      ??DelayAlarmCheck_13
   1559          		case 11:	DelaySts->DelayAlarm[Mu_BrID].Br12_RuAlarm = AlmSts;	break;
   \                     ??DelayAlarmCheck_16:
   \   000000E6   ....               LDR.N    R1,??DataTable12_9
   \   000000E8   0968               LDR      R1,[R1, #+0]
   \   000000EA   01EB4000           ADD      R0,R1,R0, LSL #+1
   \   000000EE   00F21610           ADDW     R0,R0,#+278
   \   000000F2   4178               LDRB     R1,[R0, #+1]
   \   000000F4   62F3C301           BFI      R1,R2,#+3,#+1
   \   000000F8   26E0               B.N      ??DelayAlarmCheck_13
   1560          		case 12:	DelaySts->DelayAlarm[Mu_BrID].Br13_RuAlarm = AlmSts;	break;
   \                     ??DelayAlarmCheck_17:
   \   000000FA   ....               LDR.N    R1,??DataTable12_9
   \   000000FC   0968               LDR      R1,[R1, #+0]
   \   000000FE   01EB4000           ADD      R0,R1,R0, LSL #+1
   \   00000102   00F21610           ADDW     R0,R0,#+278
   \   00000106   4178               LDRB     R1,[R0, #+1]
   \   00000108   62F30411           BFI      R1,R2,#+4,#+1
   \   0000010C   1CE0               B.N      ??DelayAlarmCheck_13
   1561          		case 13:	DelaySts->DelayAlarm[Mu_BrID].Br14_RuAlarm = AlmSts;	break;
   \                     ??DelayAlarmCheck_18:
   \   0000010E   ....               LDR.N    R1,??DataTable12_9
   \   00000110   0968               LDR      R1,[R1, #+0]
   \   00000112   01EB4000           ADD      R0,R1,R0, LSL #+1
   \   00000116   00F21610           ADDW     R0,R0,#+278
   \   0000011A   4178               LDRB     R1,[R0, #+1]
   \   0000011C   62F34511           BFI      R1,R2,#+5,#+1
   \   00000120   12E0               B.N      ??DelayAlarmCheck_13
   1562          		case 14:	DelaySts->DelayAlarm[Mu_BrID].Br15_RuAlarm = AlmSts;	break;
   \                     ??DelayAlarmCheck_19:
   \   00000122   ....               LDR.N    R1,??DataTable12_9
   \   00000124   0968               LDR      R1,[R1, #+0]
   \   00000126   01EB4000           ADD      R0,R1,R0, LSL #+1
   \   0000012A   00F21610           ADDW     R0,R0,#+278
   \   0000012E   4178               LDRB     R1,[R0, #+1]
   \   00000130   62F38611           BFI      R1,R2,#+6,#+1
   \   00000134   08E0               B.N      ??DelayAlarmCheck_13
   1563          		case 15:	DelaySts->DelayAlarm[Mu_BrID].Br16_RuAlarm = AlmSts;	break;
   \                     ??DelayAlarmCheck_20:
   \   00000136   ....               LDR.N    R1,??DataTable12_9
   \   00000138   0968               LDR      R1,[R1, #+0]
   \   0000013A   01EB4000           ADD      R0,R1,R0, LSL #+1
   \   0000013E   00F21610           ADDW     R0,R0,#+278
   \   00000142   4178               LDRB     R1,[R0, #+1]
   \   00000144   62F3C711           BFI      R1,R2,#+7,#+1
   \                     ??DelayAlarmCheck_13:
   \   00000148   4170               STRB     R1,[R0, #+1]
   1564          	}
   1565          }
   \                     ??DelayAlarmCheck_1:
   \   0000014A   7047               BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0:
   \   00000000   80F81611           STRB     R1,[R0, #+278]
   \   00000004   7047               BX       LR

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   ........           DC32     DistTarID

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_1:
   \   00000000   ........           DC32     pUSART2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_2:
   \   00000000   ........           DC32     pUSART3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_3:
   \   00000000   ........           DC32     Ser2TaskStk+0x4AC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_4:
   \   00000000   ........           DC32     Ser2Task

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_5:
   \   00000000   ........           DC32     tTestFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_6:
   \   00000000   14180240           DC32     0x40021814

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_7:
   \   00000000   ........           DC32     HuStatus

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_8:
   \   00000000   ........           DC32     RuBuf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   ........           DC32     DtuStatus

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_1:
   \   00000000   ........           DC32     DtuSer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_2:
   \   00000000   ........           DC32     DtuID

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_3:
   \   00000000   ........           DC32     HuStatus

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   ........           DC32     DistTarID

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_1:
   \   00000000   ........           DC32     DelaySts

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   ........           DC32     RuBuf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_1:
   \   00000000   ........           DC32     GuiID

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_2:
   \   00000000   ........           DC32     PcSer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_3:
   \   00000000   ........           DC32     MyID

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_4:
   \   00000000   ........           DC32     MuStatus

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_5:
   \   00000000   ........           DC32     DistBand

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_6:
   \   00000000   ........           DC32     DtuControl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_7:
   \   00000000   ........           DC32     DtuSer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_8:
   \   00000000   ........           DC32     DtuID

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_9:
   \   00000000   ........           DC32     DelaySts
   1566          
   1567          //=======================================================================//
   1568          // End of Source File
   1569          //=======================================================================//
   1570          
   1571          

   Maximum stack usage in bytes:

     Function            .cstack
     --------            -------
     DelayAlarmCheck          0
     DelayCtrlFunc          264
     DtuLoopBackControl      32
     EndHuCommand             0
     GetHuCommand             8
     HuProtocolComCheck       0
     InstallCheck             8
     LoopBackCtrlFunc       264
     Mea_DistCheckFunc       48
     MuxControl               8
     RecvHuDataUpdate        36
     RecvRuDataUpdate        16
     Ser2Init                16
     Ser2Task                56
     Tar_DistCheckFunc       48
     Total_DistCheckFunc     48


   Section sizes:

     Function/Label      Bytes
     --------------      -----
     Ser2TaskStk         1200
     Hu_Ser2SerB           48
     Hu_Ser3SerB           48
     Hu_Ser5SerB           48
     Hu_Ser6SerB           48
     DistBand               1
     DistTarID           4188
     Hu_Idle
     HuPollCnt
     DistFlag
     DistStep
     DistCnt
     DistType
     DistOnBr
     LinkFailCnt
     HuPollID
     Hu_Ser2Ser
     Hu_Ser3Ser
     Hu_Ser5Ser
     Hu_Ser6Ser
     Shu
     Rhu
     Ser2Init             176
     Ser2Task             314
     HuProtocolComCheck     2
     GetHuCommand          28
     EndHuCommand          10
     MuxControl           118
     RecvHuDataUpdate     152
     RecvRuDataUpdate      52
     InstallCheck          88
     Mea_DistCheckFunc    750
     ?Subroutine1           6
     Tar_DistCheckFunc   1166
     Total_DistCheckFunc 1344
     LoopBackCtrlFunc     114
     ?Subroutine2          14
     DelayCtrlFunc        418
     DtuLoopBackControl   128
     DelayAlarmCheck      332
     ?Subroutine0           6
     ??DataTable8           4
     ??DataTable8_1         4
     ??DataTable8_2         4
     ??DataTable8_3         4
     ??DataTable8_4         4
     ??DataTable8_5         4
     ??DataTable8_6         4
     ??DataTable8_7         4
     ??DataTable8_8         4
     ??DataTable10          4
     ??DataTable10_1        4
     ??DataTable10_2        4
     ??DataTable10_3        4
     ??DataTable11          4
     ??DataTable11_1        4
     ??DataTable12          4
     ??DataTable12_1        4
     ??DataTable12_2        4
     ??DataTable12_3        4
     ??DataTable12_4        4
     ??DataTable12_5        4
     ??DataTable12_6        4
     ??DataTable12_7        4
     ??DataTable12_8        4
     ??DataTable12_9        4

 
   193 bytes in section .bss
 4 188 bytes in section .data
 5 318 bytes in section .text
 1 200 bytes in section iram
 
 5 318 bytes of CODE memory
 5 581 bytes of DATA memory

Errors: none
Warnings: none
