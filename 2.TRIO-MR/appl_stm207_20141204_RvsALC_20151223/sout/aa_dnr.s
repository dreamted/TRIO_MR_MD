///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR ANSI C/C++ Compiler V5.30.2.51295/W32 for ARM    09/Jun/2011  18:42:02 /
// Copyright 1999-2009 IAR Systems AB.                                        /
//                                                                            /
//    Cpu mode     =  thumb                                                   /
//    Endian       =  little                                                  /
//    Source file  =  C:\user\project\HFR OTM-L12\fw\appl_otmL12_20110505_v1. /
//                    0\code\aa_dnr.c                                         /
//    Command line =  "C:\user\project\HFR OTM-L12\fw\appl_otmL12_20110505_v1 /
//                    .0\code\aa_dnr.c" -lcN "C:\user\project\HFR             /
//                    OTM-L12\fw\appl_otmL12_20110505_v1.0\sout\" -lB         /
//                    "C:\user\project\HFR OTM-L12\fw\appl_otmL12_20110505_v1 /
//                    .0\sout\" -o "C:\user\project\HFR                       /
//                    OTM-L12\fw\appl_otmL12_20110505_v1.0\sout\"             /
//                    --endian=little --cpu=Cortex-M3 -e                      /
//                    --require_prototypes --fpu=None --dlib_config           /
//                    "C:\compiler\ewarm 5.3\arm\INC\DLib_Config_Normal.h"    /
//                    -I "C:\user\project\HFR OTM-L12\fw\appl_otmL12_20110505 /
//                    _v1.0\include\" -I "C:\user\project\HFR                 /
//                    OTM-L12\fw\appl_otmL12_20110505_v1.0\lib_stm32\inc\"    /
//                    -I "C:\user\project\HFR OTM-L12\fw\appl_otmL12_20110505 /
//                    _v1.0\lib_stm32\src\" -I "C:\user\project\HFR           /
//                    OTM-L12\fw\appl_otmL12_20110505_v1.0\uC-CPU\" -I        /
//                    "C:\user\project\HFR OTM-L12\fw\appl_otmL12_20110505_v1 /
//                    .0\uC-LIB\" -I "C:\user\project\HFR                     /
//                    OTM-L12\fw\appl_otmL12_20110505_v1.0\uCOS-II\Ports\"    /
//                    -I "C:\user\project\HFR OTM-L12\fw\appl_otmL12_20110505 /
//                    _v1.0\uCOS-II\Source\" -I "C:\user\project\HFR          /
//                    OTM-L12\fw\appl_otmL12_20110505_v1.0\uC-Probe\" -I      /
//                    "C:\compiler\ewarm 5.3\arm\INC\" -Oh                    /
//    List file    =  C:\user\project\HFR OTM-L12\fw\appl_otmL12_20110505_v1. /
//                    0\sout\aa_dnr.s                                         /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME aa_dnr

        EXTERN DnrSts
        EXTERN IORUInsertCheck
        EXTERN IsItRtnMyVALtoSysID
        EXTERN MyDnrID
        EXTERN MySts
        EXTERN OSSemCreate
        EXTERN OSTaskCreate
        EXTERN OSTimeDly
        EXTERN ProtocolComCheck
        EXTERN SystemTypeInfo
        EXTERN WRCSTask
        EXTERN WRCS_DownLoadGiveupTimerSet
        EXTERN WRCS_ProtocolCheck
        EXTERN pBodyFrameTx
        EXTERN pUSART3
        EXTERN pUSART5
        EXTERN tTestFlag

        PUBLIC Dnr0SendBuff
        PUBLIC DnrCheckInstalltoNext
        PUBLIC DnrInit
        PUBLIC DnrInsertCheck
        PUBLIC DnrLinkFailAllRst
        PUBLIC DnrLinkFailCheck
        PUBLIC DnrLinkFailCnt
        PUBLIC DnrLinkFailRst
        PUBLIC DnrSer0
        PUBLIC DnrSer0B
        PUBLIC DnrSer1
        PUBLIC DnrSer1B
        PUBLIC DnrTask
        PUBLIC IsItRealDnrInsert
        PUBLIC RDnr0sio
        PUBLIC RDnr1sio
        PUBLIC SDnr0sio
        PUBLIC SDnr1sio

// C:\user\project\HFR OTM-L12\fw\appl_otmL12_20110505_v1.0\code\aa_dnr.c
//    1 /******************** (C) COPYRIGHT 2007 STMicroelectronics ********************
//    2 * File Name          : stm32f10x_bkp.c
//    3 * Author             : MCD Application Team
//    4 * Date First Issued  : 09/29/2006
//    5 * Description        : This file provides all the BKP firmware functions.
//    6 ********************************************************************************/
//    7 
//    8 #define DNR_C
//    9 
//   10 #include "../include/main.h"

        SECTION `.bss`:DATA:NOROOT(0)
// INT8U __data DnrLinkFailCnt
DnrLinkFailCnt:
        DS8 1

        SECTION `.data`:DATA:NOROOT(2)
// __ProtocolPtr __data DnrSer0B
DnrSer0B:
        DATA
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
// __ProtocolPtr __data DnrSer1B
DnrSer1B:
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
// __ProtocolPtr *__data DnrSer0
DnrSer0:
        DC32 DnrSer0B
// __ProtocolPtr *__data DnrSer1
DnrSer1:
        DC32 DnrSer1B
// __WRCSSIO __data SDnr0sio
SDnr0sio:
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0
// __WRCSSIO __data RDnr0sio
RDnr0sio:
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0
// __WRCSSIO __data SDnr1sio
SDnr1sio:
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0
// __WRCSSIO __data RDnr1sio
RDnr1sio:
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

        SECTION `.data`:DATA:NOROOT(2)
// INT8U *__data Dnr0SendBuff
Dnr0SendBuff:
        DATA
        DC32 SDnr0sio + 0FH
//   11 

        SECTION `.text`:CODE:NOROOT(2)
        THUMB
//   12 void DnrInit(void)
//   13 {
DnrInit:
        PUSH     {R3-R5,LR}
//   14 	DnrSer0 = &DnrSer0B;
        LDR.N    R4,??DataTable8  ;; DnrSer0B
        STR      R4,[R4, #+96]
//   15  	DnrSer0->CheckByte = pUSART3.CheckByte;
        LDR.N    R0,??DnrInit_0   ;; pUSART3
        LDR      R1,[R0, #+4]
        STR      R1,[R4, #+0]
//   16 	DnrSer0->RxGetByte = pUSART3.RxGetByte;
        LDR      R1,[R0, #+8]
        STR      R1,[R4, #+4]
//   17 	DnrSer0->PutStr = pUSART3.PutStr;
        LDR      R1,[R0, #+12]
        STR      R1,[R4, #+8]
//   18 	DnrSer0->TxCheckByte = pUSART3.TxCheckByte;
        LDR      R0,[R0, #+28]
        STR      R0,[R4, #+16]
//   19 	
//   20 	DnrSer0->TimerRx = TimerDnr0Rx;
        MOVS     R0,#+13
        STRH     R0,[R4, #+20]
//   21 	DnrSer0->TimerEndWait = TimerDnr0EndWait;
        MOVS     R0,#+14
        STRH     R0,[R4, #+22]
//   22 	DnrSer0->WRCSRecv = &RDnr0sio;
        ADD      R0,R4,#+1152
        STR      R0,[R4, #+32]
//   23 	DnrSer0->WRCSSend = &SDnr0sio;
        ADD      R0,R4,#+104
        STR      R0,[R4, #+36]
//   24 	DnrSer0->PRIO = DNR0_TASK_PRIO;
        MOVS     R0,#+6
        STRB     R0,[R4, #+46]
//   25 	DnrSer0->OSSem = OSSemCreate(1);
        MOVS     R0,#+1
        BL       OSSemCreate
        LDR      R1,[R4, #+96]
        STR      R0,[R1, #+28]
//   26 
//   27 
//   28 	DnrSer1 = &DnrSer1B;
        ADD      R0,R4,#+48
        ADD      R5,R4,#+96
        STR      R0,[R5, #+4]
//   29  	DnrSer1->CheckByte = pUSART5.CheckByte;
        LDR.N    R1,??DnrInit_0+0x4  ;; pUSART5
        LDR      R2,[R1, #+4]
        STR      R2,[R4, #+48]
//   30 	DnrSer1->RxGetByte = pUSART5.RxGetByte;
        LDR      R2,[R1, #+8]
        STR      R2,[R0, #+4]
//   31 	DnrSer1->PutStr = pUSART5.PutStr;
        LDR      R2,[R1, #+12]
        STR      R2,[R0, #+8]
//   32 	DnrSer1->TxCheckByte = pUSART5.TxCheckByte;
        LDR      R1,[R1, #+28]
        STR      R1,[R0, #+16]
//   33 	
//   34 	DnrSer1->TimerRx = TimerDnr1Rx;
        MOVS     R1,#+15
        STRH     R1,[R0, #+20]
//   35 	DnrSer1->TimerEndWait = TimerDnr1EndWait;
        MOVS     R1,#+16
        STRH     R1,[R0, #+22]
//   36 	DnrSer1->WRCSRecv = &RDnr1sio;
        ADD      R1,R4,#+3248
        STR      R1,[R0, #+32]
//   37 	DnrSer1->WRCSSend = &SDnr1sio;
        ADDW     R1,R4,#+2200
        STR      R1,[R0, #+36]
//   38 	DnrSer1->PRIO = DNR1_TASK_PRIO;
        MOVS     R0,#+7
        STRB     R0,[R4, #+94]
//   39 	DnrSer1->OSSem = OSSemCreate(1);
        MOVS     R0,#+1
        BL       OSSemCreate
        LDR      R1,[R5, #+4]
        STR      R0,[R1, #+28]
//   40 
//   41 	if(SystemTypeInfo < 2) // DONOR CASE
        LDR.N    R0,??DnrInit_0+0x8  ;; SystemTypeInfo
        LDRB     R0,[R0, #+0]
        CMP      R0,#+2
        BCS.N    ??DnrInit_1
//   42 	{
//   43 		OSTaskCreate(DnrTask, (void *)DnrSer0, (OS_STK *)&DNR0TaskStk[DNR_START_STK_SIZE - 1], DNR0_TASK_PRIO);
        MOVS     R3,#+6
        MOVW     R0,#+5316
        ADDS     R2,R0,R4
        LDR      R1,[R4, #+96]
        LDR.N    R0,??DnrInit_0+0xC  ;; DnrTask
        BL       OSTaskCreate
//   44 		OSTaskCreate(WRCSTask, (void *)DnrSer1, (OS_STK *)&DNR1TaskStk[DNR_START_STK_SIZE - 1], DNR1_TASK_PRIO);
        MOVS     R3,#+7
        MOVW     R0,#+6340
        ADDS     R2,R0,R4
        LDR      R1,[R5, #+4]
        LDR.N    R0,??DnrInit_0+0x10  ;; WRCSTask
        BL       OSTaskCreate
//   45 	}
//   46 }
??DnrInit_1:
        POP      {R0,R4,R5,PC}    ;; return
        Nop      
        DATA
??DnrInit_0:
        DC32     pUSART3
        DC32     pUSART5
        DC32     SystemTypeInfo
        DC32     DnrTask
        DC32     WRCSTask
//   47 
//   48 

        SECTION `.text`:CODE:NOROOT(2)
        THUMB
//   49 void DnrTask(void * pdata)
//   50 {
DnrTask:
        PUSH     {R3-R7,LR}
        MOV      R4,R0
//   51     __ProtocolPtr *nPtr = (__ProtocolPtr *)pdata;
//   52 	INT8U tmpID = 0;
        MOVS     R5,#+0
//   53 	INT16U Recv = 0;
        STRH     R5,[SP, #+0]
//   54 	
//   55 /////////////////////////////////////////////		
//   56 	OSTimeDly(100*nPtr->PRIO);
        LDRB     R0,[R4, #+46]
        MOVS     R1,#+100
        MULS     R0,R0,R1
        BL       OSTimeDly
//   57 
//   58 	nPtr->WRCSRecv->cBody = 0;
        LDR      R0,[R4, #+32]
        STRB     R5,[R0, #+1047]
        LDR.N    R6,??DataTable14  ;; DnrLinkFailCnt
        LDR.N    R7,??DnrTask_0   ;; tTestFlag
        B.N      ??DnrTask_1
//   59 
//   60 	while(1)
//   61 	{
//   62 		if(!tTestFlag)
//   63 		{
//   64 			if((nPtr->CheckByte(1, &Recv)) && WRCS_ProtocolCheck(nPtr))
//   65 			{
//   66 			#if TWO_BODY >= 2
//   67 				while(nPtr->WRCSRecv->cBody  <=  nPtr->WRCSRecv->BodyNo)
//   68 				{
//   69 			#endif
//   70 					ProtocolComCheck(nPtr);
//   71 			#if TWO_BODY >= 2
//   72 					nPtr->WRCSRecv->cBody++;
//   73 				}
//   74 			#endif
//   75 				DnrLinkFailRst();
//   76 			}
//   77 			else
//   78 			{
//   79 				tmpID = DnrCheckInstalltoNext(nPtr, tmpID);
??DnrTask_2:
        MOV      R1,R5
        MOV      R0,R4
        BL       DnrCheckInstalltoNext
        MOV      R5,R0
//   80 			}
//   81 		}
//   82 		OSTimeDly(300L);
??DnrTask_3:
        MOV      R0,#+300
        BL       OSTimeDly
??DnrTask_1:
        LDRB     R0,[R7, #+0]
        CMP      R0,#+0
        BNE.N    ??DnrTask_3
        ADD      R1,SP,#+0
        MOVS     R0,#+1
        LDR      R2,[R4, #+0]
        BLX      R2
        CMP      R0,#+0
        BEQ.N    ??DnrTask_2
        MOV      R0,R4
        BL       WRCS_ProtocolCheck
        CMP      R0,#+0
        BEQ.N    ??DnrTask_2
        MOV      R0,R4
        BL       ProtocolComCheck
        MOVS     R0,#+0
        STRB     R0,[R6, #+0]
//   83 	}
        B.N      ??DnrTask_3
        DATA
??DnrTask_0:
        DC32     tTestFlag
//   84 }
//   85 
//   86 

        SECTION `.text`:CODE:NOROOT(2)
        THUMB
//   87 INT8U DnrInsertCheck(void)
//   88 {
//   89 	INT8U rval = 0;
//   90 	
//   91 	if(DNR_INSERT || MySts->RingType == 2){
DnrInsertCheck:
        LDR.N    R0,??DnrInsertCheck_0  ;; 0x40011408
        LDR      R0,[R0, #+0]
        TST      R0,#0x8
        BNE.N    ??DnrInsertCheck_1
        LDR.N    R0,??DataTable9  ;; MySts
        LDR      R0,[R0, #+0]
        LDRB     R0,[R0, #+27]
        CMP      R0,#+2
        BNE.N    ??DnrInsertCheck_2
//   92 		BitRst(DnrSts[MyDnrID ^ 1][0].COTInfo, mInstall);
??DnrInsertCheck_1:
        LDR.N    R0,??DataTable15  ;; MyDnrID
        LDRB     R0,[R0, #+0]
        EOR      R0,R0,#0x1
        MOVW     R1,#+538
        LDR.N    R2,??DataTable16  ;; DnrSts
        MLA      R0,R0,R1,R2
        LDRB     R1,[R0, #+135]
        BIC      R1,R1,#0x4
        STRB     R1,[R0, #+135]
//   93 		BitRst(DnrSts[MyDnrID ^ 1][0].RTInfo, mInstall);
        ADD      R1,R0,#+135
        LDRB     R2,[R1, #+2]
        BIC      R2,R2,#0x4
        STRB     R2,[R1, #+2]
//   94 
//   95 		BitRst(DnrSts[MyDnrID ^ 1][1].COTInfo, mInstall);
        LDRB     R1,[R0, #+404]
        BIC      R1,R1,#0x4
        STRB     R1,[R0, #+404]
//   96 		BitRst(DnrSts[MyDnrID ^ 1][1].RTInfo, mInstall);
        ADD      R0,R0,#+404
        LDRB     R1,[R0, #+2]
        BIC      R1,R1,#0x4
        STRB     R1,[R0, #+2]
//   97 
//   98 		rval = FALSE;
        MOVS     R0,#+0
        BX       LR
//   99 	}
//  100 	else
//  101 	{
//  102 		BitSet(DnrSts[MyDnrID ^ 1][0].COTInfo, mInstall);
??DnrInsertCheck_2:
        LDR.N    R0,??DataTable15  ;; MyDnrID
        LDRB     R0,[R0, #+0]
        EOR      R0,R0,#0x1
        MOVW     R1,#+538
        LDR.N    R2,??DataTable16  ;; DnrSts
        MLA      R0,R0,R1,R2
        LDRB     R1,[R0, #+135]
        ORR      R1,R1,#0x4
        STRB     R1,[R0, #+135]
//  103 		BitSet(DnrSts[MyDnrID ^ 1][0].RTInfo, mInstall);
        ADD      R1,R0,#+135
        LDRB     R2,[R1, #+2]
        ORR      R2,R2,#0x4
        STRB     R2,[R1, #+2]
//  104 
//  105 
//  106 		BitSet(DnrSts[MyDnrID ^ 1][1].COTInfo, mInstall);
        LDRB     R1,[R0, #+404]
        ORR      R1,R1,#0x4
        STRB     R1,[R0, #+404]
//  107 		BitSet(DnrSts[MyDnrID ^ 1][1].RTInfo, mInstall);		
        ADD      R0,R0,#+404
        LDRB     R1,[R0, #+2]
        ORR      R1,R1,#0x4
        STRB     R1,[R0, #+2]
//  108 
//  109 		rval = TRUE;
        MOVS     R0,#+1
//  110 	}
//  111 	return rval;
        BX       LR               ;; return
        DATA
??DnrInsertCheck_0:
        DC32     0x40011408
//  112 }
//  113 
//  114 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  115 INT8U DnrCheckInstalltoNext(__ProtocolPtr *nPtr, INT8U tmpID)
//  116 {
DnrCheckInstalltoNext:
        PUSH     {R4,LR}
        SUB      SP,SP,#+8
        MOV      R4,R1
//  117 	INT8U tmpDnr = 0, tmpRmt = 0;
//  118 	INT8U id0, id1, id2;
//  119 	
//  120 	if(WRCS_DownLoadGiveupTimerSet(NULL)) return tmpID;
        MOVS     R0,#+0
        BL       WRCS_DownLoadGiveupTimerSet
        CMP      R0,#+0
        BEQ.N    ??DnrCheckInstalltoNext_0
??DnrCheckInstalltoNext_1:
        MOV      R0,R4
        POP      {R1,R2,R4,PC}
//  121 	if(!DnrInsertCheck())
??DnrCheckInstalltoNext_0:
        BL       DnrInsertCheck
        CBNZ     R0,??DnrCheckInstalltoNext_2
//  122 	{
//  123 		DnrLinkFailAllRst();
        BL       DnrLinkFailAllRst
//  124 		OSTimeDly(500L);
        MOV      R0,#+500
        BL       OSTimeDly
//  125 		return tmpID;
        B.N      ??DnrCheckInstalltoNext_1
//  126 	}
//  127 	////////////////////////////////////////////////////////////////////////////
//  128 	
//  129 	tmpDnr = MyDnrID ^ 1;
//  130 	tmpRmt = tmpID;
//  131 
//  132 	IsItRtnMyVALtoSysID(&id0, &id1, &id2, tmpDnr, tmpRmt);
??DnrCheckInstalltoNext_2:
        PUSH     {R4,LR}
        LDR.N    R0,??DataTable15  ;; MyDnrID
        LDRB     R0,[R0, #+0]
        EOR      R3,R0,#0x1
        ADD      R2,SP,#+8
        ADD      R1,SP,#+9
        ADD      R0,SP,#+10
        BL       IsItRtnMyVALtoSysID
        ADD      SP,SP,#+8
//  133 	pBodyFrameTx(id0, id1, id2, NULL, NULL, StatusQue, DnrSer0, NULL);
        MOVS     R1,#+0
        LDR.N    R0,??DataTable8  ;; DnrSer0B
        LDR      R0,[R0, #+96]
        PUSH     {R0,R1}
        MOVS     R0,#+0
        PUSH     {R0,R1}
        MOV      R3,R0
        LDRB     R2,[SP, #+16]
        LDRB     R1,[SP, #+17]
        LDRB     R0,[SP, #+18]
        BL       pBodyFrameTx
        ADD      SP,SP,#+16
//  134 
//  135 	tmpID++;
//  136 	return (tmpID%2);
        ADDS     R0,R4,#+1
        UXTB     R0,R0
        LSRS     R1,R0,#+1
        SUB      R0,R0,R1, LSL #+1
        UXTB     R0,R0
        POP      {R1,R2,R4,PC}    ;; return
//  137 }

        SECTION `.text`:CODE:NOROOT(2)
        DATA
??DataTable8:
        DC32     DnrSer0B
//  138 
//  139 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  140 INT8U IsItRealDnrInsert(void)
//  141 {
IsItRealDnrInsert:
        PUSH     {R7,LR}
//  142 	if(IORUInsertCheck() && !BitRead(MySts->OTUInfo, mLinkFail)) return TRUE;
        BL       IORUInsertCheck
        CBZ      R0,??IsItRealDnrInsert_0
        LDR.N    R0,??DataTable9  ;; MySts
        LDR      R0,[R0, #+0]
        LDRB     R0,[R0, #+136]
        TST      R0,#0x1
        BNE.N    ??IsItRealDnrInsert_0
        MOVS     R0,#+1
        POP      {R1,PC}
//  143 	return FALSE;
??IsItRealDnrInsert_0:
        MOVS     R0,#+0
        POP      {R1,PC}          ;; return
//  144 }

        SECTION `.text`:CODE:NOROOT(2)
        DATA
??DataTable9:
        DC32     MySts
//  145 
//  146 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  147 void DnrLinkFailCheck(void)
//  148 {
//  149 	if((++DnrLinkFailCnt > 20))
DnrLinkFailCheck:
        LDR.N    R0,??DataTable14  ;; DnrLinkFailCnt
        LDRB     R1,[R0, #+0]
        ADDS     R1,R1,#+1
        STRB     R1,[R0, #+0]
        UXTB     R1,R1
        CMP      R1,#+21
        BCC.N    ??DnrLinkFailCheck_0
//  150 	{
//  151 		DnrLinkFailCnt = 30;
        MOVS     R1,#+30
        STRB     R1,[R0, #+0]
//  152 		BitSet(DnrSts[MyDnrID ^ 1][0].COTInfo, mLinkFail);
        LDR.N    R0,??DataTable15  ;; MyDnrID
        LDRB     R0,[R0, #+0]
        EOR      R0,R0,#0x1
        MOVW     R1,#+538
        LDR.N    R2,??DataTable16  ;; DnrSts
        MLA      R0,R0,R1,R2
        LDRB     R1,[R0, #+135]
        ORR      R1,R1,#0x1
        STRB     R1,[R0, #+135]
//  153 		BitSet(DnrSts[MyDnrID ^ 1][0].RTInfo, mLinkFail);
        ADD      R1,R0,#+135
        LDRB     R2,[R1, #+2]
        ORR      R2,R2,#0x1
        STRB     R2,[R1, #+2]
//  154 
//  155 		BitSet(DnrSts[MyDnrID ^ 1][1].COTInfo, mLinkFail);
        LDRB     R1,[R0, #+404]
        ORR      R1,R1,#0x1
        STRB     R1,[R0, #+404]
//  156 		BitSet(DnrSts[MyDnrID ^ 1][1].RTInfo, mLinkFail);
        ADD      R1,R0,#+404
        LDRB     R2,[R1, #+2]
        ORR      R2,R2,#0x1
        STRB     R2,[R1, #+2]
//  157 
//  158 		DnrSts[MyDnrID ^ 1][0].DnrAlm.LinkFail = SET; 
        LDRB     R1,[R0, #+1]
        ORR      R1,R1,#0x2
        STRB     R1,[R0, #+1]
//  159 		DnrSts[MyDnrID ^ 1][1].DnrAlm.LinkFail = SET; 
        ADD      R1,R0,#+270
        LDRB     R1,[R1, #+0]
        ORR      R1,R1,#0x2
        ADD      R0,R0,#+270
        STRB     R1,[R0, #+0]
//  160 
//  161    	}
//  162 }
??DnrLinkFailCheck_0:
        BX       LR               ;; return
//  163 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  164 void DnrLinkFailRst(void)
//  165 {
//  166 	DnrLinkFailCnt = 0;
DnrLinkFailRst:
        LDR.N    R0,??DataTable14  ;; DnrLinkFailCnt
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
//  167 
//  168 	//BitRst(DnrSts[MyDnrID ^ 1][0].COTInfo, mLinkFail);
//  169 	//BitRst(DnrSts[MyDnrID ^ 1][0].RTInfo, mLinkFail);
//  170 	//DnrSts[MyDnrID ^ 1][0].DnrAlm.LinkFail = RESET; 
//  171 }
        BX       LR               ;; return
//  172 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  173 void DnrLinkFailAllRst(void)
//  174 {
//  175 	DnrLinkFailCnt = 0;
DnrLinkFailAllRst:
        LDR.N    R0,??DataTable14  ;; DnrLinkFailCnt
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
//  176 	BitRst(DnrSts[MyDnrID ^ 1][0].COTInfo, mLinkFail);
        LDR.N    R0,??DataTable15  ;; MyDnrID
        LDRB     R0,[R0, #+0]
        EOR      R0,R0,#0x1
        MOVW     R1,#+538
        LDR.N    R2,??DataTable16  ;; DnrSts
        MLA      R0,R0,R1,R2
        LDRB     R1,[R0, #+135]
        AND      R1,R1,#0xFE
        STRB     R1,[R0, #+135]
//  177 	BitRst(DnrSts[MyDnrID ^ 1][0].RTInfo, mLinkFail);
        ADD      R1,R0,#+135
        LDRB     R2,[R1, #+2]
        AND      R2,R2,#0xFE
        STRB     R2,[R1, #+2]
//  178 
//  179 	BitRst(DnrSts[MyDnrID ^ 1][1].COTInfo, mLinkFail);
        LDRB     R1,[R0, #+404]
        AND      R1,R1,#0xFE
        STRB     R1,[R0, #+404]
//  180 	BitRst(DnrSts[MyDnrID ^ 1][1].RTInfo, mLinkFail);
        ADD      R1,R0,#+404
        LDRB     R2,[R1, #+2]
        AND      R2,R2,#0xFE
        STRB     R2,[R1, #+2]
//  181 
//  182 	DnrSts[MyDnrID ^ 1][0].DnrAlm.LinkFail = RESET; 
        LDRB     R1,[R0, #+1]
        BIC      R1,R1,#0x2
        STRB     R1,[R0, #+1]
//  183 	DnrSts[MyDnrID ^ 1][1].DnrAlm.LinkFail = RESET; 
        ADD      R1,R0,#+270
        LDRB     R1,[R1, #+0]
        BIC      R1,R1,#0x2
        ADD      R0,R0,#+270
        STRB     R1,[R0, #+0]
//  184 }
        BX       LR               ;; return

        SECTION `.text`:CODE:NOROOT(2)
        DATA
??DataTable14:
        DC32     DnrLinkFailCnt

        SECTION `.text`:CODE:NOROOT(2)
        DATA
??DataTable15:
        DC32     MyDnrID

        SECTION `.text`:CODE:NOROOT(2)
        DATA
??DataTable16:
        DC32     DnrSts

        END
//  185 
//  186 
//  187 ////////////////////////////////////////////////////////////////////////////////
//  188 // End of Source File
//  189 /////////////////////////
//  190 
// 
//     1 byte  in section .bss
// 6 348 bytes in section .data
//   826 bytes in section .text
// 
//   826 bytes of CODE memory
// 6 349 bytes of DATA memory
//
//Errors: none
//Warnings: none
