###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V5.30.2.51295/W32 for ARM     02/Apr/2012  19:03:54 #
# Copyright 1999-2009 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\Project\TRIO\3.F_W\TRIO_appl_src_20120401\lib_stm32\s #
#                    rc\stm32f10x_systick.c                                   #
#    Command line =  D:\Project\TRIO\3.F_W\TRIO_appl_src_20120401\lib_stm32\s #
#                    rc\stm32f10x_systick.c -D NDEBUG -lcN                    #
#                    D:\Project\TRIO\3.F_W\TRIO_appl_src_20120401\sout\ -o    #
#                    D:\Project\TRIO\3.F_W\TRIO_appl_src_20120401\sout\       #
#                    --debug --endian=little --cpu=Cortex-M3 -e               #
#                    --warnings_are_errors --fpu=None --dlib_config           #
#                    "C:\Program Files\IAR Systems\Embedded Workbench         #
#                    5.4\arm\INC\DLib_Config_Normal.h" -I                     #
#                    D:\Project\TRIO\3.F_W\TRIO_appl_src_20120401\include\    #
#                    -I D:\Project\TRIO\3.F_W\TRIO_appl_src_20120401\lib_stm3 #
#                    2\inc\ -I D:\Project\TRIO\3.F_W\TRIO_appl_src_20120401\l #
#                    ib_stm32\src\ -I D:\Project\TRIO\3.F_W\TRIO_appl_src_201 #
#                    20401\uC-CPU\ -I D:\Project\TRIO\3.F_W\TRIO_appl_src_201 #
#                    20401\uC-LIB\ -I D:\Project\TRIO\3.F_W\TRIO_appl_src_201 #
#                    20401\uCOS-II\Ports\ -I D:\Project\TRIO\3.F_W\TRIO_appl_ #
#                    src_20120401\uCOS-II\Source\ -I                          #
#                    D:\Project\TRIO\3.F_W\TRIO_appl_src_20120401\uC-Probe\   #
#                    -I "C:\Program Files\IAR Systems\Embedded Workbench      #
#                    5.4\arm\INC\" -Oh                                        #
#    List file    =  D:\Project\TRIO\3.F_W\TRIO_appl_src_20120401\sout\stm32f #
#                    10x_systick.lst                                          #
#    Object file  =  D:\Project\TRIO\3.F_W\TRIO_appl_src_20120401\sout\stm32f #
#                    10x_systick.o                                            #
#                                                                             #
#                                                                             #
###############################################################################

D:\Project\TRIO\3.F_W\TRIO_appl_src_20120401\lib_stm32\src\stm32f10x_systick.c
      1          /******************** (C) COPYRIGHT 2007 STMicroelectronics ********************
      2          * File Name          : stm32f10x_systick.c
      3          * Author             : MCD Application Team
      4          * Date First Issued  : 09/29/2006
      5          * Description        : This file provides all the SysTick firmware functions.
      6          ********************************************************************************
      7          * History:
      8          * 05/21/2007: V0.3
      9          * 04/02/2007: V0.2
     10          * 02/05/2007: V0.1
     11          * 09/29/2006: V0.01
     12          ********************************************************************************
     13          * THE PRESENT SOFTWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     14          * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME.
     15          * AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT,
     16          * INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE
     17          * CONTENT OF SUCH SOFTWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING
     18          * INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     19          *******************************************************************************/
     20          
     21          /* Includes ------------------------------------------------------------------*/
     22          #include "stm32f10x_conf.h"
     23          
     24          /* Private typedef -----------------------------------------------------------*/
     25          /* Private define ------------------------------------------------------------*/
     26          /* ---------------------- SysTick registers bit mask -------------------- */
     27          /* CTRL TICKINT Mask */
     28          #define CTRL_TICKINT_Set      ((u32)0x00000002)
     29          #define CTRL_TICKINT_Reset    ((u32)0xFFFFFFFD)
     30          
     31          /* SysTick Flag Mask */
     32          #define FLAG_Mask             ((u8)0x1F)
     33          
     34          /* Private macro -------------------------------------------------------------*/
     35          /* Private variables ---------------------------------------------------------*/
     36          /* Private function prototypes -----------------------------------------------*/
     37          /* Private functions ---------------------------------------------------------*/
     38          
     39          /*******************************************************************************
     40          * Function Name  : SysTick_CLKSourceConfig
     41          * Description    : Configures the SysTick clock source.
     42          * Input          : - SysTick_CLKSource: specifies the SysTick clock source.
     43          *                    This parameter can be one of the following values:
     44          *                       - SysTick_CLKSource_HCLK_Div8: AHB clock divided by 8
     45          *                         selected as SysTick clock source.
     46          *                       - SysTick_CLKSource_HCLK: AHB clock selected as
     47          *                         SysTick clock source.
     48          * Output         : None
     49          * Return         : None
     50          *******************************************************************************/
     51          void SysTick_CLKSourceConfig(u32 SysTick_CLKSource)
     52          {
     53            /* Check the parameters */
     54            assert(IS_SYSTICK_CLK_SOURCE(SysTick_CLKSource));
     55          
     56            if (SysTick_CLKSource == SysTick_CLKSource_HCLK)
     57            {
     58              SysTick->CTRL.Data |= SysTick_CLKSource_HCLK;
     59            }
     60            else
     61            {
     62              SysTick->CTRL.Data &= SysTick_CLKSource_HCLK_Div8;
     63            }
     64          }
     65          
     66          /*******************************************************************************
     67          * Function Name  : SysTick_SetReload
     68          * Description    : Sets SysTick Reload value.
     69          * Input          : - Reload: SysTick Reload new value.
     70          *                    This parameter must be a number between 1 and 0xFFFFFF.
     71          * Output         : None
     72          * Return         : None
     73          *******************************************************************************/
     74          void SysTick_SetReload(u32 _ms)
     75          {
     76            /* Check the parameters */
     77            //assert(IS_SYSTICK_RELOAD(Reload));
     78            //GRA0 = (CntmS * SYSTEM_CLOCK)/(16L * 1000L); // Ref: 1ms
     79            SysTick->LOAD.Data = (_ms * SYSCLK)/(8L * 1000L);
     80          }
     81          
     82          /*******************************************************************************
     83          * Function Name  : SysTick_ITConfig
     84          * Description    : Enables or disables the SysTick Interrupt.
     85          * Input          : - NewState: new state of the SysTick Interrupt.
     86          *                    This parameter can be: ENABLE or DISABLE.
     87          * Output         : None
     88          * Return         : None
     89          *******************************************************************************/
     90          void SysTick_ITConfig(INT32U NewState)
     91          {
     92            /* Check the parameters */
     93            assert(IS_FUNCTIONAL_STATE(NewState));
     94          
     95            if (NewState != DISABLE)
     96            {
     97              SysTick->CTRL.Data |= CTRL_TICKINT_Set;		//by hong : counting down 0 pends the SysTick handler.
     98            }
     99            else
    100            {
    101              SysTick->CTRL.Data &= CTRL_TICKINT_Reset;	//by hong : counting down 0 does not pend the SysTick handler.
    102            }
    103          }
    104          
    105          /*******************************************************************************
    106          * Function Name  : SysTick_GetCounter
    107          * Description    : Gets SysTick counter value.
    108          * Input          : None
    109          * Output         : None
    110          * Return         : SysTick current value
    111          *******************************************************************************/
    112          u32 SysTick_GetCounter(void)
    113          {
    114            return(SysTick->VAL.Data);
    115          }
    116          
    117          /*******************************************************************************
    118          * Function Name  : SysTick_GetFlagStatus
    119          * Description    : Checks whether the specified SysTick flag is set or not.
    120          * Input          : - SysTick_FLAG: specifies the flag to check.
    121          *                    This parameter can be one of the following values:
    122          *                       - SysTick_FLAG_COUNT
    123          *                       - SysTick_FLAG_SKEW
    124          *                       - SysTick_FLAG_NOREF
    125          * Output         : None
    126          * Return         : None
    127          *******************************************************************************/
    128          INT32U SysTick_GetFlagStatus(u8 SysTick_FLAG)
    129          {
    130            u32 tmp = 0;
    131            u32 statusreg = 0;
    132            INT32U bitstatus = RESET;
    133          
    134            /* Check the parameters */
    135            assert(IS_SYSTICK_FLAG(SysTick_FLAG));
    136          
    137            /* Get the SysTick register index */
    138            tmp = SysTick_FLAG >> 5;
    139          
    140            if (tmp == 1) /* The flag to check is in CTRL register */
    141            {
    142              statusreg = SysTick->CTRL.Data;
    143            }
    144            else          /* The flag to check is in CALIB register */
    145            {
    146              statusreg = SysTick->CALIB.Data;
    147            }
    148          
    149            /* Get the flag position */
    150            tmp = SysTick_FLAG & FLAG_Mask;
    151          
    152            if ((statusreg & ((u32)1 << tmp)) != (u32)RESET)
    153            {
    154              bitstatus = SET;
    155            }
    156            else
    157            {
    158              bitstatus = RESET;
    159            }
    160            return bitstatus;
    161          }
    162          
    163          /******************* (C) COPYRIGHT 2007 STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

     Function                .cstack
     --------                -------
     SysTick_CLKSourceConfig      0
     SysTick_GetCounter           0
     SysTick_GetFlagStatus        0
     SysTick_ITConfig             0
     SysTick_SetReload            0


   Section sizes:

     Function/Label          Bytes
     --------------          -----
     SysTick_CLKSourceConfig   20
     SysTick_SetReload         28
     SysTick_ITConfig          20
     SysTick_GetCounter        12
     SysTick_GetFlagStatus     34
     ??DataTable2               4

 
 118 bytes in section .text
 
 118 bytes of CODE memory

Errors: none
Warnings: none
